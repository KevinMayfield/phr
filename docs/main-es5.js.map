{"version":3,"sources":["webpack:///src/app/prescription-order-detail/prescription-order-detail.component.ts","webpack:///src/app/prescription-order-detail/prescription-order-detail.component.html","webpack:///src/app/orders/orders.component.ts","webpack:///src/app/orders/orders.component.html","webpack:///src/app/service/auth.service.ts","webpack:///src/app/eps-orders/prescription-orders.component.ts","webpack:///src/app/eps-orders/prescription-orders.component.html","webpack:///src/environments/environment.ts","webpack:///src/app/callback/callback.component.ts","webpack:///src/app/callback/callback.component.html","webpack:///src/app/refill/refill.component.ts","webpack:///src/app/refill/refill.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/service/FhirService.ts","webpack:///src/app/gp-task/gp-task.component.ts","webpack:///src/app/gp-task/gp-task.component.html","webpack:///src/app/service/auth-guard.ts","webpack:///src/app/service/nhsd.service.ts","webpack:///src/app/gp-diary/gp-diary.component.ts","webpack:///src/app/gp-diary/gp-diary.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/main/main.component.ts","webpack:///src/app/main/main.component.html","webpack:///src/app/gp-prescriptions/prescription-refill.component.ts","webpack:///src/app/gp-prescriptions/prescription-refill.component.html","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["PrescriptionOrderDetailComponent","_dialogService","nhsd","_viewContainerRef","task","displayedColumns","displayedDispenseColumns","datepipe","prescription","dispense","dataSource","dispenseDataSource","medicationRequest","subscribe","push","medicationDispense","console","log","nTask","resource","input","undefined","length","taskInput","valueReference","reference","display","getMedicationRequest","getMedicationDispense","selector","templateUrl","styleUrls","OrdersComponent","dialog","disabled","error","operationOutcome","issue","details","text","msg","matDialogRef","openAlert","title","message","afterClosed","result","files","FileList","File","file","fileReader","FileReader","onloadend","e","bundle","JSON","parse","convertToTransaction","readAsText","selectEvent","Oauth2token","AuthService","router","http","accessToken","tokenChange","auth","authCode","bearerToken","btoa","oauth2","client_id","client_secret","headers","url","token","urlParams","URLSearchParams","grant_type","append","document","baseURI","postAny","toString","smartToken","setAccessToken","body","httpHeaders","post","date","Date","expires_at","Math","round","valueOf","expires_in","localStorage","setItem","stringify","access_token","emit","getAccessToken","getItem","helper","isTokenExpired","removeItem","decoded","hasOwnProperty","setUTCSeconds","offsetSeconds","getTokenExpirationDate","providedIn","PrescriptionOrdersComponent","hapi","data","queryTasks","taskChange","getTasks","dialogConfig","disableClose","autoFocus","id","open","environment","production","cookie_domain","logonUrl","virtually","hapibase","firelybase","CallbackComponent","route","navigateByUrl","queryParamMap","params","code","get","performGetAccessToken","RefillComponent","AppComponent","AppModule","forRoot","declarations","imports","entryComponents","providers","bootstrap","FhirService","medicationRequests","medicationChange","tasks","getHeaders","entry","GpTaskComponent","AuthGuard","hasAccessToken","navigate","NhsdService","resourceType","newBundle","type","status","intent","coding","system","prescriptionorder","practitionerRole","fullUrl","medicationHeader","eventCoding","subject","identifier","value","authorizingPrescription","ident","groupIdentifier","requester","authoredOn","dispenseRequest","performer","owner","medicationCodeableConcept","getIdentifier","request","method","practitioner","GpDiaryComponent","fhir","openPrompt","cancelButton","acceptButton","componentInstance","diary","routes","path","canActivate","component","children","AppRoutingModule","exports","LoginComponent","callback","window","location","href","MainComponent","opened","PrescriptionRefillComponent","queryMedicationRequests","getMedicationRequests","bootstrapModule","err","webpackEmptyAsyncContext","req","Promise","resolve","then","Error","keys","module"],"mappings":"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","file":"main-es5.js","sourcesContent":["import {Component, Inject, OnInit, ViewContainerRef} from '@angular/core';\nimport {MatTableDataSource} from \"@angular/material/table\";\nimport {TdDialogService} from \"@covalent/core/dialogs\";\nimport {MedicationDispense, MedicationRequest, Task} from 'fhir/r4';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {NhsdService} from \"../service/nhsd.service\";\nimport {DatePipe} from \"@angular/common\";\n\n@Component({\n  selector: 'app-prescription-order-detail',\n  templateUrl: './prescription-order-detail.component.html',\n  styleUrls: ['./prescription-order-detail.component.scss']\n})\nexport class PrescriptionOrderDetailComponent implements OnInit {\n\n\n    displayedColumns: string[] = ['authored', 'name', 'dosage', 'quantity', 'unit'];\n\n    displayedDispenseColumns: string[] = ['prepared', 'performer', 'name', 'quantity', 'unit'];\n\n    dataSource : any;\n    dispenseDataSource : any;\n\n    datepipe: DatePipe = new DatePipe('en-GB');\n\n    prescription: MedicationRequest[] =  [\n    ]\n\n    dispense: MedicationDispense[] =  [\n\n                ]\n    closed: any;\n\n  constructor(private _dialogService: TdDialogService,\n              private nhsd: NhsdService,\n              private _viewContainerRef: ViewContainerRef,\n              @Inject(MAT_DIALOG_DATA) public task: any\n  ) { }\n\n  ngOnInit(): void {\n      this.dataSource = new MatTableDataSource<any>(this.prescription);\n      this.dispenseDataSource = new MatTableDataSource<any>(this.dispense);\n\n      this.nhsd.medicationRequest.subscribe((medicationRequest: MedicationRequest) => {\n\n          this.prescription.push(medicationRequest);\n          this.dataSource = new MatTableDataSource<any>(this.prescription);\n      });\n      this.nhsd.medicationDispense.subscribe( (medicationDispense: MedicationDispense) => {\n          console.log(medicationDispense);\n          this.dispense.push(medicationDispense);\n          this.dispenseDataSource= new MatTableDataSource<any>(this.dispense);\n      })\n      const nTask: Task = this.task.resource;\n      if (nTask.input !== undefined && nTask.input.length>0) {\n          for (const taskInput of nTask.input) {\n              if (taskInput.valueReference !== undefined && taskInput.valueReference.reference !== undefined) {\n                  console.log(taskInput.valueReference.display)\n                  this.nhsd.getMedicationRequest(taskInput.valueReference.reference);\n                  this.nhsd.getMedicationDispense(taskInput.valueReference.reference);\n              }\n          }\n      }\n  }\n\n}\n","\n<mat-dialog-content>\n    <h2>Medication Requests</h2>\n<table mat-table [dataSource]=\"dataSource\" >\n\n        <ng-container matColumnDef=\"authored\">\n            <th mat-header-cell *matHeaderCellDef [style.width.px]=\"120\"> Authored </th>\n            <td mat-cell *matCellDef=\"let element\"> {{datepipe.transform(element.authoredOn, 'dd MMM yyyy') }} </td>\n        </ng-container>\n        <ng-container matColumnDef=\"concept\">\n            <th mat-header-cell *matHeaderCellDef> Medication ID </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.concept}} </td>\n        </ng-container>\n\n    <ng-container matColumnDef=\"dosage\">\n        <th mat-header-cell *matHeaderCellDef [style.width.px]=\"300\"> Dose </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.dosageInstruction[0].text}} </td>\n    </ng-container>\n\n        <!-- Name Column -->\n        <ng-container matColumnDef=\"name\">\n            <th mat-header-cell *matHeaderCellDef [style.width.px]=\"300\"> Medication Name </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.medicationCodeableConcept.coding[0].display}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"quantity\">\n            <th mat-header-cell *matHeaderCellDef> Quantity </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.dispenseRequest.quantity.value}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"unit\">\n            <th mat-header-cell *matHeaderCellDef> Unit </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.dispenseRequest.quantity.unit}} </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n\n\n    <h2>Dispensing History</h2>\n\n    <table mat-table [dataSource]=\"dispenseDataSource\">\n\n        <ng-container matColumnDef=\"prepared\">\n            <th mat-header-cell *matHeaderCellDef [style.width.px]=\"140\"> Prepared </th>\n            <td mat-cell *matCellDef=\"let element\"> {{datepipe.transform(element.whenPrepared, 'dd MMM yyyy HH:mm') }} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"concept\">\n            <th mat-header-cell *matHeaderCellDef> Medication ID </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.concept}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"performer\">\n            <th mat-header-cell *matHeaderCellDef> Pharmacy </th>\n            <td mat-cell *matCellDef=\"let element\">\n                <ul>\n                    <ng-template ngFor let-item [ngForOf]=\"element.performer\" let-i=\"index\" >\n                        <li>{{item.actor.display}}</li>\n                    </ng-template>\n                </ul>\n            </td>\n        </ng-container>\n\n        <!-- Name Column -->\n        <ng-container matColumnDef=\"name\">\n            <th mat-header-cell *matHeaderCellDef> Medication Name </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.medicationCodeableConcept.coding[0].display}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"quantity\">\n            <th mat-header-cell *matHeaderCellDef> Quantity </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.quantity.value}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"unit\">\n            <th mat-header-cell *matHeaderCellDef> Unit </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.quantity.unit}} </td>\n        </ng-container>\n\n        <!-- Symbol Column -->\n        <ng-container matColumnDef=\"status\">\n            <th mat-header-cell *matHeaderCellDef> Status </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.status}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"cancel_dispense\">\n            <th mat-header-cell *matHeaderCellDef> Cancel </th>\n            <td mat-cell *matCellDef=\"let element\">\n                <button mat-icon-button matTooltip=\"This is the ETPWithdrawal interaction. Does not map well to FHIR \"><mat-icon>assignment_return</mat-icon>Cancel Dispense</button>\n            </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedDispenseColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedDispenseColumns;\"></tr>\n    </table>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <button mat-button mat-dialog-close>Cancel</button>\n    <!-- The mat-dialog-close directive optionally accepts a value as a result for the dialog. -->\n</mat-dialog-actions>\n\n\n\n\n","import {Component, EventEmitter, OnInit} from '@angular/core';\nimport {Bundle, OperationOutcome} from 'fhir/r4';\nimport {NhsdService} from '../service/nhsd.service';\nimport {MatDialog} from \"@angular/material/dialog\";\nimport {TdDialogService} from \"@covalent/core/dialogs\";\n\n\n@Component({\n  selector: 'app-orders',\n  templateUrl: './orders.component.html',\n  styleUrls: ['./orders.component.scss']\n})\nexport class OrdersComponent implements OnInit {\n\n  files: File | FileList | undefined;\n  disabled = false;\n\n  constructor(\n      private nhsd: NhsdService,\n      private dialog: MatDialog,\n      private _dialogService: TdDialogService\n  ) { }\n\n  ngOnInit(): void {\n    this.nhsd.error.subscribe(\n        (error: OperationOutcome) => {\n          console.log(error);\n           const operationOutcome = error as OperationOutcome;\n           console.log(operationOutcome.issue[0].details?.text);\n          // @ts-ignore\n            const msg :string = operationOutcome.issue[0].details?.text;\n          // @ts-ignore\n            const matDialogRef = this._dialogService.openAlert({\n            title: 'Error',\n            message: msg\n          });\n          matDialogRef.afterClosed().subscribe(result => {\n            //console.log(matDialogRef.componentInstance.value);\n          });\n        }\n    )\n  }\n\n  // https://stackoverflow.com/questions/40214772/file-upload-in-angular\n\n  selectEvent(files: FileList | File): void {\n    if (files instanceof FileList) {\n      console.log('is filelist');\n    } else if (files instanceof File) {\n      console.log('is file');\n      const file: File = files;\n      const fileReader: FileReader = new FileReader();\n      // tslint:disable-next-line:only-arrow-functions typedef\n      fileReader.onloadend = (e) => {\n        if (typeof fileReader.result === 'string') {\n          const bundle = JSON.parse(fileReader.result) as Bundle;\n          this.nhsd.convertToTransaction(bundle);\n        }\n      };\n      fileReader.readAsText(file);\n    } else {\n      console.log('not a file type');\n    }\n  }\n\n\n}\n","<mat-card>\n   <!-- <h2>COVID-19 Vaccinations History</h2>\n    <br/> -->\n\n\n    <app-prescription-orders></app-prescription-orders>\n    <app-gp-diary></app-gp-diary>\n    <app-prescription-refill></app-prescription-refill>\n\n    <br />\n    <div>\n\n        <td-file-input [(ngModel)]=\"files\" color=\"primary\" (select)=\"selectEvent($event)\"\n                       accept=\".json,.xml\">\n            <mat-icon>attach_file</mat-icon><span>Choose a FHIR Bundle file...</span>\n        </td-file-input>\n\n    </div>\n</mat-card>\n","\n\nimport {environment} from '../../environments/environment';\n\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {EventEmitter, Injectable} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {JwtHelperService} from '@auth0/angular-jwt';\n\n\n\nclass Oauth2token {\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthService {\n    private smartToken: Oauth2token | undefined;\n\n    private accessToken = undefined;\n\n    tokenChange: EventEmitter<Oauth2token> = new EventEmitter();\n\n   public auth = false;\n\n  constructor(\n             private router: Router,\n             private http: HttpClient\n              ) {\n\n  }\n\n    performGetAccessToken(authCode: string | null): any {\n\n\n    // https://digital.nhs.uk/developer/guides-and-documentation/security-and-authorisation/user-restricted-restful-apis-nhs-cis2-combined-authentication-and-authorisation\n\n    const bearerToken = 'Basic ' + btoa(environment.oauth2.client_id + ':' + environment.oauth2.client_secret);\n    const headers = new HttpHeaders( { 'Content-Type': 'application/x-www-form-urlencoded'});\n\n    const url = environment.oauth2.token;\n\n\n    const urlParams = new URLSearchParams(\n            { grant_type: 'authorization_code'});\n\n    urlParams.append('client_id', environment.oauth2.client_id),\n    urlParams.append(  'client_secret', environment.oauth2.client_secret);\n    urlParams.append(  'redirect_uri', document.baseURI + 'callback');\n    if (typeof authCode === 'string') {\n        urlParams.append('code', authCode);\n    }\n\n    this.postAny(url, urlParams.toString(),  headers  ).subscribe( (token: any) => {\n        // console.log(response);\n        this.smartToken = token;\n        console.log('OAuth2Token : ' + token);\n        this.setAccessToken(token);\n\n        }\n      , (error: any) => {\n        console.log(error);\n      }\n      , () => {\n        // Emit event\n      }\n    );\n  }\n\n    // tslint:disable-next-line:typedef\n    public postAny(url: string | null, body: string, httpHeaders: HttpHeaders) {\n        return this.http.post<any>(url as string, body, {headers: httpHeaders});\n    }\n\n    public setAccessToken(token: { expires_at: any; expires_in: number; access_token: any; }): any {\n        // tslint:disable-next-line:new-parens\n        const date = new Date;\n        // Create an expires at ..... don't know when we got the token\n        token.expires_at = Math.round((new Date().valueOf()) / 1000) + token.expires_in;\n        localStorage.setItem('nhsdToken', JSON.stringify(token));\n        this.accessToken = token.access_token;\n        this.tokenChange.emit(token);\n    }\n    public hasAccessToken(): boolean {\n        return this.getAccessToken() !== undefined;\n    }\n\n    public getAccessToken(): any {\n        if (localStorage.getItem('nhsdToken') !== undefined) {\n            const token: any = JSON.parse(localStorage.getItem('nhsdToken') as any);\n            const helper = new JwtHelperService();\n            if (this.isTokenExpired(token)) {\n\n                console.log('withings Token expired');\n                this.accessToken = undefined;\n                //  this.getRefreshToken();\n                return undefined;\n            }\n            if (token !== undefined) {\n                this.accessToken = token.access_token;\n                return this.accessToken;\n            }\n        }\n        return undefined;\n    }\n\n\n    private deleteAccessToken(): any {\n        this.accessToken = undefined;\n        localStorage.removeItem('nhsdToken');\n    }\n\n    private getTokenExpirationDate(\n        decoded: any\n    ): Date | null {\n\n        if (!decoded || !decoded.hasOwnProperty('expires_at')) {\n            // Invalid format\n            localStorage.removeItem('nhsdToken');\n            return null;\n        }\n\n        const date = new Date(0);\n        date.setUTCSeconds(decoded.expires_at);\n\n        return date;\n    }\n\n    private isTokenExpired(\n        token: any,\n        offsetSeconds?: number\n    ): boolean {\n        if (!token || token === '') {\n            return true;\n        }\n        const date = this.getTokenExpirationDate(token);\n        offsetSeconds = offsetSeconds || 0;\n\n        console.log('nhsd token expiry date ' + date);\n        if (date === null) {\n            return false;\n        }\n        return !(date.valueOf() > new Date().valueOf() + offsetSeconds * 1000);\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {MatDialog,MatDialogConfig} from '@angular/material/dialog';\nimport {NhsdService} from '../service/nhsd.service';\nimport {Task} from 'fhir/r4';\nimport {DatePipe} from \"@angular/common\";\nimport {PrescriptionOrderDetailComponent} from \"../prescription-order-detail/prescription-order-detail.component\";\n\n@Component({\n  selector: 'app-prescription-orders',\n  templateUrl: './prescription-orders.component.html',\n  styleUrls: ['./prescription-orders.component.scss']\n})\nexport class PrescriptionOrdersComponent implements OnInit {\n\n\n    datepipe: DatePipe = new DatePipe('en-GB');\n    displayedColumns: string[] = ['authored', 'status', 'requester', 'pharmacy', 'medications', 'order_number',  'view_order', 'track_order'];\n\n    dataSource: any;\n    data: Task[] = [];\n\n\n\n  constructor(private hapi: NhsdService,\n              private dialog: MatDialog) { }\n\n  ngOnInit(): void {\n     this.dataSource = new MatTableDataSource <any>(this.data);\n     this.hapi.queryTasks();\n     this.hapi.taskChange.subscribe(() => {\n          this.dataSource = new MatTableDataSource(this.hapi.getTasks());\n      });\n  }\n\n  view(resource: any): void {\n      const dialogConfig = new MatDialogConfig();\n\n      dialogConfig.disableClose = true;\n      dialogConfig.autoFocus = true;\n      dialogConfig.data = {\n          id: 1,\n          resource: resource\n      };\n      this.dialog.open( PrescriptionOrderDetailComponent, dialogConfig);\n\n  }\n\n}\n","<mat-card>\n    <mat-card-header><h2>EPS Prescription Orders (FHIR Task)</h2>\n\n    </mat-card-header>\n    <table mat-table [dataSource]=\"dataSource\" width=\"100%\" >\n\n        <!--- Note that these columns can be defined in any order.\n              The actual rendered columns are set as a property on the row definition\" -->\n\n        <ng-container matColumnDef=\"status\">\n            <th mat-header-cell *matHeaderCellDef [style.width.px]=\"120\"> Status </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.status}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"medications\">\n            <th mat-header-cell *matHeaderCellDef> Medications </th>\n            <td mat-cell *matCellDef=\"let element\">\n                <ul>\n                    <ng-template ngFor let-item [ngForOf]=\"element.input\" let-i=\"index\" >\n                        <li>{{item.valueReference.display}}</li>\n                    </ng-template>\n                </ul>\n            </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"pharmacy\">\n            <th mat-header-cell *matHeaderCellDef> Pharmacy </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.owner?.identifier.value}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"requester\">\n            <th mat-header-cell *matHeaderCellDef [style.width.px]=\"120\"> Requester </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.requester.display}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"authored\">\n            <th mat-header-cell *matHeaderCellDef [style.width.px]=\"120\"> Authored </th>\n            <td mat-cell *matCellDef=\"let element\"> {{datepipe.transform(element.authoredOn, 'dd MMM yyyy HH:mm') }} </td>\n        </ng-container>\n\n        <!-- Symbol Column -->\n        <ng-container matColumnDef=\"order_number\">\n            <th mat-header-cell *matHeaderCellDef > Order No. </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.identifier[0].value}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"return_order\">\n            <th mat-header-cell *matHeaderCellDef [style.width.px]=\"120\"> Cancel </th>\n            <td mat-cell *matCellDef=\"let element\">\n                <button color=\"warn\" *ngIf=\"element.status == 'accepted'\" mat-icon-button><mat-icon>remove_shopping_cart</mat-icon>Cancel</button>\n            </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"view_order\">\n            <th mat-header-cell *matHeaderCellDef [style.width.px]=\"120\"> View Order  </th>\n            <td mat-cell *matCellDef=\"let element\">\n                <button color=\"accent\" mat-icon-button (click)=\"view(element)\" ><mat-icon>inventory</mat-icon>View Details</button>\n            </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"track_order\">\n            <th mat-header-cell *matHeaderCellDef [style.width.px]=\"120\"> Track Package  </th>\n            <td mat-cell *matCellDef=\"let element\">\n                <button color=\"accent\" mat-icon-button ><mat-icon>local_shipping</mat-icon>Tracking</button>\n            </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n</mat-card>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  oauth2 : {\n    token : 'https://int.api.service.nhs.uk/oauth2-no-smartcard/token',\n    auth : 'https://int.api.service.nhs.uk/oauth2-no-smartcard/authorize',\n    client_id : 'FXmDMToQI68FhfNmqA3QgaiPJ3AdrRQt',\n    client_secret : '1GVeaPTFi59WEX7V',\n    cookie_domain : 'localhost',\n    logonUrl: 'http://localhost:4200/ccri-logon'\n  },\n  virtually: 'https://emis-api-lb-test-294292503.eu-west-2.elb.amazonaws.com/R4',\n  nhsd: 'https://server.fire.ly/r4',\n  hapibase: 'http://hapi.fhir.org/baseR4',\n  firelybase : 'https://server.fire.ly/r4'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {AuthService} from '../service/auth.service';\n\n@Component({\n  selector: 'app-callback',\n  templateUrl: './callback.component.html',\n  styleUrls: ['./callback.component.css']\n})\nexport class CallbackComponent implements OnInit {\n\n  constructor(private route: ActivatedRoute,\n              private auth: AuthService,\n              private router: Router) { }\n\n  private authCode = '' ;\n\n  subOAuth2: any;\n\n  // tslint:disable-next-line:typedef\n  ngOnInit() {\n\n    this.auth.tokenChange.subscribe(\n        () => {\n          this.router.navigateByUrl('/');\n        }\n    );\n    this.route.queryParamMap.subscribe(params => {\n      console.log(params);\n      const code = params.get('code');\n      // var state = params.get('state');\n      this.auth.performGetAccessToken(code);\n    });\n\n  }\n\n}\n","callback done\n","import {Component, OnInit, ViewContainerRef} from '@angular/core';\nimport {TdDialogService} from '@covalent/core/dialogs';\n\n@Component({\n  selector: 'app-refill',\n  templateUrl: './refill.component.html',\n  styleUrls: ['./refill.component.scss']\n})\nexport class RefillComponent implements OnInit {\n\n  constructor(private _dialogService: TdDialogService,\n              private _viewContainerRef: ViewContainerRef) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>refill works!</p>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'phr';\n}\n","<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport {CovalentDynamicFormsModule} from \"@covalent/dynamic-forms\";\nimport {CovalentLayoutModule} from \"@covalent/core/layout\";\nimport {CovalentStepsModule} from \"@covalent/core/steps\";\nimport {CovalentHighlightModule} from \"@covalent/highlight\";\nimport {CovalentMarkdownModule} from \"@covalent/markdown\";\nimport {CovalentBaseEchartsModule} from \"@covalent/echarts/base\";\nimport {CovalentHttpModule} from \"@covalent/http\";\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {MainComponent} from \"./main/main.component\";\nimport {MatChipsModule} from \"@angular/material/chips\";\nimport {MatTooltipModule} from \"@angular/material/tooltip\";\nimport {MatTableModule} from \"@angular/material/table\";\nimport {CovalentDataTableModule} from \"@covalent/core/data-table\";\nimport {MatButtonModule} from \"@angular/material/button\";\nimport {MatIconModule} from \"@angular/material/icon\";\nimport {MatMenuModule} from \"@angular/material/menu\";\nimport {MatCardModule} from \"@angular/material/card\";\nimport {MatList, MatListModule} from \"@angular/material/list\";\nimport {FlexLayoutModule} from \"@angular/flex-layout\";\nimport { OrdersComponent } from './orders/orders.component';\nimport {PrescriptionRefillComponent} from \"./gp-prescriptions/prescription-refill.component\";\nimport {PrescriptionOrderDetailComponent} from \"./prescription-order-detail/prescription-order-detail.component\";\nimport {CovalentMessageModule} from \"@covalent/core/message\";\nimport {PrescriptionOrdersComponent} from \"./eps-orders/prescription-orders.component\";\nimport {CallbackComponent} from \"./callback/callback.component\";\nimport {AuthGuard} from \"./service/auth-guard\";\nimport { LoginComponent } from './login/login.component';\nimport {CovalentFileModule} from \"@covalent/core/file\";\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {GpDiaryComponent} from \"./gp-diary/gp-diary.component\";\nimport {CovalentDialogsModule} from \"@covalent/core/dialogs\";\nimport {MatDialogModule} from '@angular/material/dialog';\nimport { RefillComponent } from './refill/refill.component';\nimport { GpTaskComponent } from './gp-task/gp-task.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MainComponent,\n    OrdersComponent,\n      PrescriptionRefillComponent,\n      PrescriptionOrdersComponent,\n      GpDiaryComponent,\n      CallbackComponent,\n      LoginComponent,\n      PrescriptionOrderDetailComponent,\n      RefillComponent,\n      GpTaskComponent\n  ],\n    imports: [\n        BrowserModule,\n        AppRoutingModule,\n        FlexLayoutModule,\n        BrowserAnimationsModule,\n\n        CovalentLayoutModule,\n        CovalentStepsModule,\n        // (optional) Additional Covalent Modules imports\n        CovalentHttpModule.forRoot(),\n        CovalentHighlightModule,\n        CovalentMarkdownModule,\n        CovalentDynamicFormsModule,\n        CovalentBaseEchartsModule,\n        CovalentMessageModule,\n        CovalentDialogsModule,\n\n        MatIconModule,\n        MatButtonModule,\n        CovalentDataTableModule,\n        MatMenuModule,\n        MatListModule,\n        MatCardModule,\n        MatTableModule,\n        MatTooltipModule,\n        MatChipsModule,\n        CovalentFileModule,\n        ReactiveFormsModule,\n        FormsModule,\n        MatDialogModule\n    ],\n    entryComponents: [\n        PrescriptionOrderDetailComponent,\n        RefillComponent\n    ],\n  providers: [\n      AuthGuard\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {EventEmitter, Injectable} from '@angular/core';\nimport {AuthService} from './auth.service';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Bundle, MedicationRequest, Task} from 'fhir/r4';\nimport {environment} from '../../environments/environment';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class FhirService {\n\n    private medicationRequests: MedicationRequest[] = [];\n\n\n    medicationChange: EventEmitter<any> = new EventEmitter();\n    constructor(private http: HttpClient,\n                private auth: AuthService) {\n    }\n\n    taskChange: EventEmitter<any> = new EventEmitter();\n    private tasks: Task[] = [];\n\n    public getTasks(): Task[] {\n        return this.tasks;\n    }\n\n    public queryTasks(): any {\n\n\n        const headers = this.getHeaders();\n        // tslint:disable-next-line:typedef\n        this.http.get(environment.virtually + '/Task?patient=137', { headers}).subscribe(\n            result => {\n                const bundle = result as Bundle;\n                if (bundle.entry !== undefined && bundle.entry.length > 0) {\n                    console.log('Task found.');\n                    this.tasks = [];\n                    for (const entry of bundle.entry) {\n                        this.tasks.push(entry.resource as Task);\n                    }\n                    this.taskChange.emit({});\n                } else {\n                    console.log('Task not found.');\n                }\n            }\n        );\n    }\n\n\n    public getMedicationRequests(): MedicationRequest[] {\n        return this.medicationRequests;\n    }\n    public queryMedicationRequests(): any {\n\n        const headers = this.getHeaders();\n        // tslint:disable-next-line:typedef\n        this.http.get(environment.virtually + '/MedicationRequest?patient=137&date=2019-01-01', { headers}).subscribe(\n            result => {\n                const bundle = result as Bundle;\n                if (bundle.entry !== undefined && bundle.entry.length > 0) {\n                    console.log('Medication found.');\n                    this.medicationRequests = [];\n                    for (const entry of bundle.entry) {\n                        this.medicationRequests.push(entry.resource as MedicationRequest);\n                    }\n                    this.medicationChange.emit({});\n                } else {\n                    console.log('Medication not found.');\n                }\n            }\n        );\n    }\n\n    getHeaders(): HttpHeaders {\n\n        let headers = new HttpHeaders(\n        );\n\n        headers = headers.append('Content-Type', 'application/fhir+json');\n        headers = headers.append('Accept', 'application/fhir+json');\n        // headers = headers.append(\"Authorization\", \"Bearer \"+this.auth.getAccessToken());\n        return headers;\n    }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-gp-task',\n  templateUrl: './gp-task.component.html',\n  styleUrls: ['./gp-task.component.scss']\n})\nexport class GpTaskComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>gp-task works!</p>\n","import {CanActivate, Router} from '@angular/router';\nimport {Injectable} from '@angular/core';\nimport {AuthService} from './auth.service';\nimport {Extension, MedicationRequest, Patient} from \"fhir/r4\";\n\n@Injectable()\nexport class AuthGuard  implements CanActivate {\n\n\n  constructor(public router: Router, private auth: AuthService) {\n\n  }\n  canActivate(): any {\n\n\n    if (this.auth.hasAccessToken()) {\n      return true;\n    } else {\n        console.log('Auth');\n        this.router.navigate(['login']);\n        return false;\n    }\n  }\n\n}\n","import {EventEmitter, Injectable} from '@angular/core';\nimport {\n  Bundle,\n  BundleEntry,\n  DomainResource,\n  Identifier,\n  MedicationRequest,\n  MessageHeader,\n  PractitionerRole,\n  Task\n} from 'fhir/r4';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {environment} from \"../../environments/environment\";\nimport {AuthService} from \"./auth.service\";\nimport {MedicationDispense} from 'fhir/r4';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NhsdService {\n\n  medicationChange: EventEmitter<any> = new EventEmitter();\n  public medicationRequest: EventEmitter<MedicationRequest> = new EventEmitter();\n  public medicationDispense: EventEmitter<MedicationDispense> = new EventEmitter();\n  error: EventEmitter<any> = new EventEmitter();\n  constructor(private http: HttpClient) { }\n\n\n  taskChange: EventEmitter<any> = new EventEmitter();\n  private tasks: Task[] = [];\n  public getTasks(): Task[] {\n    return this.tasks;\n  }\n\n  public queryTasks(): any {\n\n\n    const headers = this.getHeaders();\n    // tslint:disable-next-line:typedef\n    this.http.get(environment.nhsd + '/Task?patient.identifier=9876543210', { headers}).subscribe(\n        result => {\n          const bundle = result as Bundle;\n          if (bundle.entry !== undefined && bundle.entry.length > 0) {\n            console.log('Task found.');\n            this.tasks = [];\n            for (const entry of bundle.entry) {\n              if (entry.resource?.resourceType === 'Task') {\n                this.tasks.push(entry.resource as Task);\n              }\n            }\n            this.taskChange.emit({});\n          } else {\n            console.log('Task not found.');\n          }\n        }\n    );\n  }\n\n  public convertToTransaction(bundle: Bundle): any {\n\n    let newBundle: Bundle = {\n      resourceType : 'Bundle',\n      type : 'transaction',\n      entry : []\n    };\n    let task: any = {\n      resourceType : 'Task',\n      status: 'ready',\n      intent: 'order',\n      code: {\n        coding: [\n          {\n            system: 'http://hl7.org/fhir/CodeSystem/task-code',\n            code: 'fulfill',\n            display: 'Fulfill the focal request'\n          }\n        ]\n      },\n      input: []\n    };\n    let prescriptionorder = false;\n    if (bundle.entry !== undefined && bundle.entry.length > 0) {\n      let practitionerRole: string | undefined = '';\n      for (const entry of bundle.entry) {\n          const resource = entry.resource as any;\n          if (resource?.resourceType === 'Patient') {\n              task.for = {\n                reference : entry.fullUrl\n              };\n          }\n        if (resource?.resourceType === 'MessageHeader' ) {\n          console.log('MessageHeader');\n          const medicationHeader = resource as MessageHeader;\n          if (medicationHeader.eventCoding?.code === 'prescription-order') {\n            prescriptionorder = true;\n          }\n        }\n        if (resource?.resourceType === 'MedicationDispense' ) {\n          console.log('MedicationDispene');\n          let medicationDispense = resource as MedicationDispense;\n          if (medicationDispense.subject?.identifier !== undefined) {\n            medicationDispense.subject.reference = 'Patient?identifier=' + medicationDispense.subject.identifier.system\n                + '|' + medicationDispense.subject.identifier.value;\n          }\n          if (medicationDispense.authorizingPrescription !== undefined && medicationDispense.authorizingPrescription.length > 0) {\n            for (let ident of medicationDispense.authorizingPrescription) {\n              if (ident.identifier !== undefined) {\n                ident.reference = 'MedicationRequest?identifier=' + ident.identifier.system\n                    + '|' + ident.identifier.value;\n              }\n            }\n          }\n        }\n        // tslint:disable-next-line:no-conditional-assignment\n          if ((resource?.resourceType === 'MedicationRequest') ) {\n            const medicationRequest = resource as any;\n            if (task.identifier === undefined) {\n              task.identifier = [];\n              task.identifier.push(medicationRequest.groupIdentifier as Identifier);\n            }\n            task.requester = medicationRequest.requester;\n            practitionerRole = medicationRequest.requester?.reference;\n            task.authoredOn = medicationRequest.authoredOn;\n            if (medicationRequest.dispenseRequest !== undefined && medicationRequest.dispenseRequest.performer !== undefined) {\n                task.owner = medicationRequest.dispenseRequest.performer;\n                task.status = 'requested';\n            }\n            const input = {\n              type: {\n                coding:  [\n                  {\n                    system: 'http://snomed.info/sct',\n                    code: '16076005',\n                    display: 'Prescription'\n                  }\n                ]\n              },\n              valueReference: {\n                type: 'MedicationRequest',\n                reference: entry.fullUrl,\n                display: medicationRequest?.medicationCodeableConcept?.coding[0].display\n              }\n            };\n            task.input?.push(input);\n          }\n          if (resource?.identifier !== undefined) {\n              let identifier = '';\n              if (resource?.identifier.length !== undefined) {\n                identifier = this.getIdentifier(resource?.identifier[0]);\n              } else {\n                identifier = this.getIdentifier(resource?.identifier);\n              }\n              // @ts-ignore\n              entry.request = {\n                method : 'PUT',\n                url: resource?.resourceType + '?identifier=' + identifier\n              };\n              newBundle.entry?.push(entry);\n          } else {\n            // remove resource\n          }\n\n      }\n      if (practitionerRole !== '') {\n        console.log(practitionerRole);\n        for (const entry of bundle.entry) {\n          if (entry.fullUrl === practitionerRole) {\n            const resource = entry.resource as DomainResource;\n\n            if (resource.resourceType === 'PractitionerRole') {\n                // @ts-ignore\n              task.requester.display = (resource as PractitionerRole).practitioner.display;\n                // @ts-ignore\n              if (task.requester.display === undefined) {\n                  // @ts-ignore\n                  task.requester.display = (resource as PractitionerRole).identifier[0].value;\n                }\n            }\n          }\n        }\n      }\n\n\n      if (prescriptionorder) {\n        console.log(task);\n        const entry: BundleEntry = {\n          resource : task,\n          request : {\n            method : 'PUT',\n            url: 'Task?identifier=' + this.getIdentifier(task.identifier[0])\n          }\n        };\n        newBundle.entry?.push(entry);\n      }\n      console.log(newBundle);\n      this.http.post(environment.nhsd, JSON.stringify(newBundle), { headers: this.getHeaders() }).subscribe(\n          (result) => {\n            console.log('done post to hapi');\n            console.log(result);\n            this.medicationChange.emit({});\n          },\n          error => {\n            this.error.emit(error.error);\n          }\n      );\n    } else {\n    }\n  }\n\n  getMedicationRequest(url: string) {\n    const headers = this.getHeaders();\n    this.http.get<any>(url, {'headers': headers}).subscribe(\n        medicationRequest => {\n          this.medicationRequest.emit(medicationRequest);\n        }\n    )\n  }\n  getMedicationDispense(url: string) {\n    const headers = this.getHeaders();\n    this.http.get<any>(environment.nhsd + '/MedicationDispense?prescription=' + url, {'headers': headers}).subscribe(\n        resource => {\n          const bundle: Bundle = resource as Bundle;\n          if (bundle.entry !== undefined) {\n            for (let entry of bundle.entry) {\n\n              if (entry.resource?.resourceType === 'MedicationDispense') {\n                this.medicationDispense.emit(entry.resource as MedicationDispense);\n              }\n            }\n          }\n        }\n    )\n  }\n\n  getHeaders(): HttpHeaders {\n\n    let headers = new HttpHeaders(\n    );\n\n    headers = headers.append('Content-Type', 'application/fhir+json');\n    headers = headers.append('Accept', 'application/fhir+json');\n    return headers;\n  }\n\n  getIdentifier(identifier: Identifier): string {\n    if (identifier.system !== undefined) {\n      return identifier.system + '|' + identifier.value;\n    } else {\n      return <string>identifier.value;\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {Task} from 'fhir/r4';\nimport {DatePipe} from \"@angular/common\";\nimport {FhirService} from \"../service/FhirService\";\nimport {MatDialog} from \"@angular/material/dialog\";\nimport {TdDialogService} from \"@covalent/core/dialogs\";\n\n@Component({\n  selector: 'app-gp-diary',\n  templateUrl: './gp-diary.component.html',\n  styleUrls: ['./gp-diary.component.scss']\n})\nexport class GpDiaryComponent implements OnInit {\n\n\n    datepipe: DatePipe = new DatePipe('en-GB');\n    displayedColumns: string[] = ['when', 'status', 'reason', 'notes'];\n\n    dataSource: any;\n    data: Task[] = [];\n\n\n  constructor(private fhir: FhirService,\n              private dialog: MatDialog,\n              private _dialogService: TdDialogService\n  ) { }\n\n  ngOnInit(): void {\n     this.dataSource = new MatTableDataSource <any>(this.data);\n     this.fhir.queryTasks();\n     this.fhir.taskChange.subscribe(() => {\n          this.dataSource = new MatTableDataSource(this.fhir.getTasks());\n      });\n  }\n  diary(): void {\n      const matDialogRef = this._dialogService.openPrompt({\n          title: 'Diary Entry (FHIR Task)',\n          message: 'Use this to add Tasks (Diary Entries) to GP workflow',\n          value: 'Asthma Medication Review',\n          cancelButton: 'Cancel',\n          acceptButton: 'Ok',\n      });\n      matDialogRef.afterClosed().subscribe(result => {\n          console.log(matDialogRef.componentInstance.value);\n      });\n  }\n\n}\n","<mat-card>\n    <mat-card-header><h2>GP Diary Entries (FHIR Task)</h2>\n        </mat-card-header>\n    <button mat-fab aria-label=\"Example icon button with a heart icon\" (click)=\"diary()\">\n        <mat-icon>note_add</mat-icon>\n    </button>\n    <table mat-table [dataSource]=\"dataSource\"  width=\"100%\">\n\n        <!--- Note that these columns can be defined in any order.\n              The actual rendered columns are set as a property on the row definition\" -->\n\n        <ng-container matColumnDef=\"status\">\n            <th mat-header-cell *matHeaderCellDef [style.width.px]=\"120\"> Status </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.status}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"medications\">\n            <th mat-header-cell *matHeaderCellDef> Medications </th>\n            <td mat-cell *matCellDef=\"let element\">\n                <ul>\n                    <ng-template ngFor let-item [ngForOf]=\"element.input\" let-i=\"index\" >\n                        <li>{{item.valueReference.display}}</li>\n                    </ng-template>\n                </ul>\n            </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"pharmacy\">\n            <th mat-header-cell *matHeaderCellDef> Pharmacy </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.owner?.identifier.value}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"requester\">\n            <th mat-header-cell *matHeaderCellDef> Requester </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.requester.display}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"authored\">\n            <th mat-header-cell *matHeaderCellDef> Authored </th>\n            <td mat-cell *matCellDef=\"let element\"> {{datepipe.transform(element.authoredOn, 'dd MMM yyyy HH:mm') }} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"when\">\n            <th mat-header-cell *matHeaderCellDef [style.width.px]=\"120\"> When </th>\n            <td mat-cell *matCellDef=\"let element\"> {{datepipe.transform(element.executionPeriod.start, 'dd MMM yyyy HH:mm') }} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"reason\">\n            <th mat-header-cell *matHeaderCellDef [style.width.px]=\"240\"> Reason </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.reasonCode.coding[0].display }} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"notes\">\n            <th mat-header-cell *matHeaderCellDef> Notes </th>\n            <td mat-cell *matCellDef=\"let element\">  </td>\n        </ng-container>\n\n        <!-- Symbol Column -->\n        <ng-container matColumnDef=\"order_number\">\n            <th mat-header-cell *matHeaderCellDef > Order No. </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.identifier[0].value}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"return_order\">\n            <th mat-header-cell *matHeaderCellDef [style.width.px]=\"120\"> Cancel </th>\n            <td mat-cell *matCellDef=\"let element\">\n                <button color=\"warn\" *ngIf=\"element.status == 'accepted'\" mat-icon-button><mat-icon>remove_shopping_cart</mat-icon>Cancel</button>\n            </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"view_order\">\n            <th mat-header-cell *matHeaderCellDef [style.width.px]=\"120\"> View Order  </th>\n            <td mat-cell *matCellDef=\"let element\">\n                <button color=\"accent\" mat-icon-button routerLink=\"/details/123453-ABCDFE-12345\" ><mat-icon>inventory</mat-icon>View Details</button>\n            </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"track_order\">\n            <th mat-header-cell *matHeaderCellDef [style.width.px]=\"120\"> Track Package  </th>\n            <td mat-cell *matCellDef=\"let element\">\n                <button color=\"accent\" mat-icon-button routerLink=\"/details/123453-ABCDFE-12345\" ><mat-icon>local_shipping</mat-icon>Tracking</button>\n            </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n</mat-card>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport {MainComponent} from './main/main.component';\nimport {OrdersComponent} from './orders/orders.component';\nimport {CallbackComponent} from './callback/callback.component';\nimport {AuthGuard} from './service/auth-guard';\nimport {LoginComponent} from './login/login.component';\n\nconst routes: Routes = [\n  { path: '', canActivate: [AuthGuard], component: MainComponent,\n    children : [\n      {\n        path: '', component: OrdersComponent\n      }]},\n  {  path: 'callback', component : CallbackComponent},\n  {  path: 'login', component : LoginComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport {environment} from '../../environments/environment';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor() { }\n  callback = document.baseURI + 'callback';\n\n\n  ngOnInit(): void {\n    window.location.href = environment.oauth2.auth + '?client_id=' + environment.oauth2.client_id +\n        '&response_type=code&redirect_uri=' + this.callback + '&state=123';\n  }\n\n}\n","Redirecting to login\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.scss']\n})\nexport class MainComponent implements OnInit {\n\n  opened = false;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-menu #menu=\"matMenu\">\n    <button mat-menu-item routerLink=\"/order\"><mat-icon>shopping_basket</mat-icon>My Tasks</button>\n    <button mat-menu-item routerLink=\"/search\"><mat-icon>add_shopping_cart</mat-icon>Search and Add Tasks</button>\n    <button mat-menu-item routerLink=\"/refill\"><mat-icon>reorder</mat-icon>Reorder Medications</button>\n</mat-menu>\n<mat-menu #dosmenu=\"matMenu\">\n    <button mat-menu-item routerLink=\"/patient\"><mat-icon>person</mat-icon>Patient</button>\n    <button mat-menu-item routerLink=\"/pharmacy\"><mat-icon>store</mat-icon>Pharmacy</button>\n</mat-menu>\n<td-layout class=\"layout-nav-demo\" sidenavWidth=\"280px\">\n    <td-navigation-drawer\n            flex\n            sidenavTitle=\"Menu\" >\n        <mat-list>\n        </mat-list>\n        <span>\n    </span>\n    </td-navigation-drawer>\n    <td-layout-nav-list navigationRoute=\"/\" mode=\"side\" [opened]=opened>\n\n        <div td-sidenav-content>\n\n\n        </div>\n        <div td-toolbar-content layout=\"row\" layout-align=\"start center\" flex>\n\n           <!-- <button mat-icon-button td-menu-button tdLayoutToggle>\n                <mat-icon>menu</mat-icon>\n            </button>\n-->\n            <span>Codename: Danube</span>\n            <span flex></span>\n\n           <!-- <button mat-icon-button [matMenuTriggerFor]=\"dosmenu\" matTooltip=\"Directory Services\"><mat-icon>search</mat-icon><mat-icon>arrow_drop_down</mat-icon></button>\n-->\n            <button mat-button  matTooltip=\"Orders\"><mat-icon>add_shopping_cart</mat-icon>Basket</button>\n\n        </div>\n        <router-outlet></router-outlet>\n    </td-layout-nav-list>\n</td-layout>\n","import { Component, OnInit } from '@angular/core';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {FhirService} from '../service/FhirService';\nimport {MedicationRequest} from 'fhir/r4';\nimport {DatePipe} from '@angular/common';\nimport {MatDialog, MatDialogConfig} from \"@angular/material/dialog\";\nimport {TdDialogService, TdPromptDialogComponent} from \"@covalent/core/dialogs\";\n\n@Component({\n  selector: 'app-prescription-refill',\n  templateUrl: './prescription-refill.component.html',\n  styleUrls: ['./prescription-refill.component.scss']\n})\nexport class PrescriptionRefillComponent implements OnInit {\n\n\n\n    displayedColumns: string[] = ['authored', 'status', 'name',  'courseOfTherapy',  'quantity', 'unit', 'reorder_medication'];\n\n    dataSource: any;\n\n    data: MedicationRequest[] =  [];\n\n    datepipe: DatePipe = new DatePipe('en-GB');\n\n\n  constructor(private fhir: FhirService,\n              private dialog: MatDialog,\n              private _dialogService: TdDialogService) { }\n\n  ngOnInit(): void {\n      this.dataSource = new MatTableDataSource <any>(this.data);\n      this.fhir.queryMedicationRequests();\n      this.fhir.medicationChange.subscribe(() => {\n         this.dataSource = new MatTableDataSource(this.fhir.getMedicationRequests());\n      });\n  }\n  refill(resource: any): void {\n\n      const matDialogRef = this._dialogService.openPrompt({\n          title: 'Re-Order (FHIR Task)',\n          message: 'Why do you wish to re-order ' + resource?.medicationCodeableConcept?.coding[0].display,\n          value: '',\n          cancelButton: 'Cancel',\n          acceptButton: 'Ok',\n      });\n      matDialogRef.afterClosed().subscribe(result => {\n          console.log(matDialogRef.componentInstance.value);\n      });\n  }\n\n}\n","<mat-card>\n    <mat-card-header><h2>GP Medication Record (FHIR MedicationRequest)</h2></mat-card-header>\n    <table mat-table [dataSource]=\"dataSource\"  width=\"100%\">\n\n        <!--- Note that these columns can be defined in any order.\n              The actual rendered columns are set as a property on the row definition\" -->\n\n        <!-- Position Column -->\n        <ng-container matColumnDef=\"concept\">\n            <th mat-header-cell *matHeaderCellDef> Medication ID </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.concept}} </td>\n        </ng-container>\n\n        <!-- Name Column -->\n        <ng-container matColumnDef=\"name\">\n            <th mat-header-cell *matHeaderCellDef> Medication Name </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.medicationCodeableConcept.coding[0].display}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"status\">\n            <th mat-header-cell *matHeaderCellDef [style.width.px]=\"120\"> Status </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.status}}  </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"authored\">\n            <th mat-header-cell *matHeaderCellDef [style.width.px]=\"120\"> Authored </th>\n            <td mat-cell *matCellDef=\"let element\"> {{datepipe.transform(element.authoredOn, 'dd MMM yyyy') }} </td>\n        </ng-container>\n\n        <!-- Weight Column -->\n        <ng-container matColumnDef=\"quantity\">\n            <th mat-header-cell *matHeaderCellDef> Quantity </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.dispenseRequest.quantity.value}} </td>\n        </ng-container>\n\n\n        <ng-container matColumnDef=\"courseOfTherapy\">\n            <th mat-header-cell *matHeaderCellDef> Type </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.courseOfTherapyType.coding[0].display}} </td>\n        </ng-container>\n\n        <!-- Symbol Column -->\n        <ng-container matColumnDef=\"unit\">\n            <th mat-header-cell *matHeaderCellDef> Unit </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.dispenseRequest.quantity.unit}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"reorder_medication\">\n            <th mat-header-cell *matHeaderCellDef> Reorder </th>\n            <td mat-cell *matCellDef=\"let element\">\n                <button color=\"accent\" mat-icon-button (click)=\"refill(element)\"><mat-icon>add_shopping_cart</mat-icon>Reorder</button>\n            </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n\n</mat-card>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}