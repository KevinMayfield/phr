{"version":3,"sources":["webpack:///src/app/prescription-order-detail/prescription-order-detail.component.ts","webpack:///src/app/prescription-order-detail/prescription-order-detail.component.html","webpack:///src/app/orders/orders.component.ts","webpack:///src/app/orders/orders.component.html","webpack:///src/app/service/auth.service.ts","webpack:///src/app/eps-orders/prescription-orders.component.ts","webpack:///src/app/eps-orders/prescription-orders.component.html","webpack:///src/environments/environment.ts","webpack:///src/app/callback/callback.component.ts","webpack:///src/app/callback/callback.component.html","webpack:///src/app/refill/refill.component.ts","webpack:///src/app/refill/refill.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/service/FhirService.ts","webpack:///src/app/gp-task/gp-task.component.ts","webpack:///src/app/gp-task/gp-task.component.html","webpack:///src/app/service/auth-guard.ts","webpack:///src/app/service/nhsd.service.ts","webpack:///src/app/gp-diary/gp-diary.component.ts","webpack:///src/app/gp-diary/gp-diary.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/main/main.component.ts","webpack:///src/app/main/main.component.html","webpack:///src/app/gp-prescriptions/prescription-refill.component.ts","webpack:///src/app/gp-prescriptions/prescription-refill.component.html","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["PrescriptionOrderDetailComponent","_dialogService","_viewContainerRef","displayedColumns","displayedDispenseColumns","data","dispensedata","dataSource","dispenseDataSource","selector","templateUrl","styleUrls","OrdersComponent","hapi","disabled","files","FileList","console","log","File","file","fileReader","FileReader","onloadend","e","result","bundle","JSON","parse","convertToTransaction","readAsText","selectEvent","Oauth2token","AuthService","router","http","accessToken","undefined","tokenChange","auth","authCode","bearerToken","btoa","oauth2","client_id","client_secret","headers","url","token","urlParams","URLSearchParams","grant_type","append","document","baseURI","postAny","toString","subscribe","smartToken","setAccessToken","error","body","httpHeaders","post","date","Date","expires_at","Math","round","valueOf","expires_in","localStorage","setItem","stringify","access_token","emit","getAccessToken","getItem","helper","isTokenExpired","removeItem","decoded","hasOwnProperty","setUTCSeconds","offsetSeconds","getTokenExpirationDate","providedIn","PrescriptionOrdersComponent","dialog","datepipe","queryTasks","taskChange","getTasks","resource","dialogConfig","disableClose","autoFocus","id","open","environment","production","cookie_domain","logonUrl","virtually","nhsd","hapibase","firelybase","CallbackComponent","route","navigateByUrl","queryParamMap","params","code","get","performGetAccessToken","RefillComponent","AppComponent","title","AppModule","forRoot","declarations","imports","entryComponents","providers","bootstrap","FhirService","medicationRequests","medicationChange","tasks","getHeaders","entry","length","push","GpTaskComponent","AuthGuard","hasAccessToken","navigate","NhsdService","resourceType","newBundle","type","task","status","intent","coding","system","display","input","prescriptionorder","practitionerRole","reference","fullUrl","medicationHeader","eventCoding","medicationRequest","identifier","groupIdentifier","requester","authoredOn","dispenseRequest","performer","owner","valueReference","medicationCodeableConcept","getIdentifier","request","method","practitioner","value","GpDiaryComponent","fhir","matDialogRef","openPrompt","message","cancelButton","acceptButton","afterClosed","componentInstance","diary","routes","path","canActivate","component","children","AppRoutingModule","exports","LoginComponent","callback","window","location","href","MainComponent","opened","PrescriptionRefillComponent","queryMedicationRequests","getMedicationRequests","bootstrapModule","err","webpackEmptyAsyncContext","req","Promise","resolve","then","Error","keys","module"],"mappings":"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","file":"main-es5.js","sourcesContent":["import {Component, Inject, OnInit, ViewContainerRef} from '@angular/core';\r\nimport {MatTableDataSource} from \"@angular/material/table\";\r\nimport {TdDialogService} from \"@covalent/core/dialogs\";\r\nimport {DOCUMENT} from \"@angular/common\";\r\n\r\n@Component({\r\n  selector: 'app-prescription-order-detail',\r\n  templateUrl: './prescription-order-detail.component.html',\r\n  styleUrls: ['./prescription-order-detail.component.scss']\r\n})\r\nexport class PrescriptionOrderDetailComponent implements OnInit {\r\n\r\n\r\n    displayedColumns: string[] = ['concept', 'name', 'quantity', 'unit'];\r\n\r\n    displayedDispenseColumns: string[] = ['prepared','concept', 'name', 'quantity', 'status'];\r\n\r\n    dataSource : any;\r\n    dispenseDataSource : any;\r\n\r\n    data: any[] =  [\r\n        {\r\n            'concept' : '322237000',\r\n            'name' : 'Paracetamol 500mg soluble tablets',\r\n            'quantity' : '100',\r\n            'unit' : 'tablet'\r\n        },\r\n        {\r\n            'concept' : '35936511000001108',\r\n            'name' : 'Salbutamol 100micrograms/dose inhaler',\r\n            'quantity' : '200',\r\n            'unit' : 'dose'\r\n        }\r\n    ]\r\n    dispensedata: any[] =  [\r\n        {\r\n            'prepared' : '2020-06-10T16:30:00+00:00',\r\n            'concept' : '1858411000001101',\r\n            'name' : 'Paracetamol 500mg soluble tablets (Unichem Plc)',\r\n            'quantity' : '60 tablets',\r\n            'status' : '0003 (Partial)'\r\n        },\r\n        {\r\n            'prepared' : '2020-06-10T16:30:00+00:00',\r\n            'concept' : '3416211000001106',\r\n            'name' : 'Salbutamol 100micrograms/dose inhaler (Sandoz Ltd)',\r\n            'quantity' : '200 dose',\r\n            'status' : '0001 (Dispensed)'\r\n        },\r\n        {\r\n            'prepared' : '2020-06-25T15:30:00+00:00',\r\n            'concept' : '915611000001105',\r\n            'name' : 'Paracetamol 500mg soluble tablets (AAH Pharmaceuticals Ltd)',\r\n            'quantity' : '24 tablets',\r\n            'status' : '0003 (Partial)'\r\n        },{\r\n            'prepared' : '2020-06-25T15:30:00+00:00',\r\n            'concept' : '2274211000001101',\r\n            'name': 'Paracetamol 500mg soluble tablets (Kent Pharmaceuticals)',\r\n            'quantity': '16 tablets',\r\n            'status': '0001 (Dispensed)'\r\n\r\n                }\r\n                ]\r\n    closed: any;\r\n\r\n  constructor(private _dialogService: TdDialogService,\r\n              private _viewContainerRef: ViewContainerRef\r\n              ) { }\r\n\r\n  ngOnInit(): void {\r\n      this.dataSource = new MatTableDataSource <any>(this.data);\r\n      this.dispenseDataSource = new MatTableDataSource <any>(this.dispensedata);\r\n  }\r\n\r\n}\r\n","\r\n<mat-dialog-content>\r\n<table mat-table [dataSource]=\"dataSource\" >\r\n\r\n        <!--- Note that these columns can be defined in any order.\r\n              The actual rendered columns are set as a property on the row definition\" -->\r\n\r\n        <!-- Position Column -->\r\n        <ng-container matColumnDef=\"concept\">\r\n            <th mat-header-cell *matHeaderCellDef> Medication ID </th>\r\n            <td mat-cell *matCellDef=\"let element\"> {{element.concept}} </td>\r\n        </ng-container>\r\n\r\n        <!-- Name Column -->\r\n        <ng-container matColumnDef=\"name\">\r\n            <th mat-header-cell *matHeaderCellDef> Medication Name </th>\r\n            <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\r\n        </ng-container>\r\n\r\n        <!-- Weight Column -->\r\n        <ng-container matColumnDef=\"quantity\">\r\n            <th mat-header-cell *matHeaderCellDef> Quantity </th>\r\n            <td mat-cell *matCellDef=\"let element\"> {{element.quantity}} </td>\r\n        </ng-container>\r\n\r\n        <!-- Symbol Column -->\r\n        <ng-container matColumnDef=\"unit\">\r\n            <th mat-header-cell *matHeaderCellDef> Unit </th>\r\n            <td mat-cell *matCellDef=\"let element\"> {{element.unit}} </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"cancel_medication\">\r\n            <th mat-header-cell *matHeaderCellDef> Cancel </th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n                <button mat-icon-button matTooltip=\"This is the prescription-order-update message to /$process-message endpoint. Only valid currently for prescriber\"><mat-icon>assignment_return</mat-icon>Cancel Item</button>\r\n            </td>\r\n        </ng-container>\r\n\r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n    </table>\r\n    <h2>Tracking / Dispensing History</h2>\r\n    Would make sense to list the dispense history here.\r\n\r\n    <table mat-table [dataSource]=\"dispenseDataSource\">\r\n\r\n        <ng-container matColumnDef=\"prepared\">\r\n            <th mat-header-cell *matHeaderCellDef> Dispensed </th>\r\n            <td mat-cell *matCellDef=\"let element\"> {{element.prepared}} </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"concept\">\r\n            <th mat-header-cell *matHeaderCellDef> Medication ID </th>\r\n            <td mat-cell *matCellDef=\"let element\"> {{element.concept}} </td>\r\n        </ng-container>\r\n\r\n        <!-- Name Column -->\r\n        <ng-container matColumnDef=\"name\">\r\n            <th mat-header-cell *matHeaderCellDef> Medication Name </th>\r\n            <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\r\n        </ng-container>\r\n\r\n        <!-- Weight Column -->\r\n        <ng-container matColumnDef=\"quantity\">\r\n            <th mat-header-cell *matHeaderCellDef> Quantity </th>\r\n            <td mat-cell *matCellDef=\"let element\"> {{element.quantity}} </td>\r\n        </ng-container>\r\n\r\n        <!-- Symbol Column -->\r\n        <ng-container matColumnDef=\"status\">\r\n            <th mat-header-cell *matHeaderCellDef> Status </th>\r\n            <td mat-cell *matCellDef=\"let element\"> {{element.status}} </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"cancel_dispense\">\r\n            <th mat-header-cell *matHeaderCellDef> Cancel </th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n                <button mat-icon-button matTooltip=\"This is the ETPWithdrawal interaction. Does not map well to FHIR \"><mat-icon>assignment_return</mat-icon>Cancel Dispense</button>\r\n            </td>\r\n        </ng-container>\r\n\r\n        <tr mat-header-row *matHeaderRowDef=\"displayedDispenseColumns\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedDispenseColumns;\"></tr>\r\n    </table>\r\n</mat-dialog-content>\r\n<mat-dialog-actions>\r\n    <button mat-button mat-dialog-close>Cancel</button>\r\n    <!-- The mat-dialog-close directive optionally accepts a value as a result for the dialog. -->\r\n</mat-dialog-actions>\r\n\r\n\r\n\r\n\r\n","import {Component, EventEmitter, OnInit} from '@angular/core';\r\nimport {Bundle} from 'fhir/r4';\r\nimport {NhsdService} from '../service/nhsd.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-orders',\r\n  templateUrl: './orders.component.html',\r\n  styleUrls: ['./orders.component.scss']\r\n})\r\nexport class OrdersComponent implements OnInit {\r\n\r\n  files: File | FileList | undefined;\r\n  disabled = false;\r\n\r\n  constructor(\r\n      private hapi: NhsdService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  // https://stackoverflow.com/questions/40214772/file-upload-in-angular\r\n\r\n  selectEvent(files: FileList | File): void {\r\n    if (files instanceof FileList) {\r\n      console.log('is filelist');\r\n    } else if (files instanceof File) {\r\n      console.log('is file');\r\n      const file: File = files;\r\n      const fileReader: FileReader = new FileReader();\r\n      // tslint:disable-next-line:only-arrow-functions typedef\r\n      fileReader.onloadend = (e) => {\r\n        if (typeof fileReader.result === 'string') {\r\n          const bundle = JSON.parse(fileReader.result) as Bundle;\r\n          this.hapi.convertToTransaction(bundle);\r\n        }\r\n      };\r\n      fileReader.readAsText(file);\r\n    } else {\r\n      console.log('not a file type');\r\n    }\r\n  }\r\n\r\n\r\n}\r\n","<mat-card>\r\n   <!-- <h2>COVID-19 Vaccinations History</h2>\r\n    <br/> -->\r\n\r\n\r\n    <app-prescription-orders></app-prescription-orders>\r\n    <app-gp-diary></app-gp-diary>\r\n    <app-prescription-refill></app-prescription-refill>\r\n\r\n    <br />\r\n    <div>\r\n\r\n        <td-file-input [(ngModel)]=\"files\" color=\"primary\" (select)=\"selectEvent($event)\"\r\n                       accept=\".json,.xml\">\r\n            <mat-icon>attach_file</mat-icon><span>Choose a FHIR Bundle file...</span>\r\n        </td-file-input>\r\n\r\n    </div>\r\n</mat-card>\r\n","\r\n\r\nimport {environment} from '../../environments/environment';\r\n\r\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\r\nimport {EventEmitter, Injectable} from '@angular/core';\r\nimport {Router} from '@angular/router';\r\nimport {JwtHelperService} from '@auth0/angular-jwt';\r\n\r\n\r\n\r\nclass Oauth2token {\r\n}\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n    private smartToken: Oauth2token | undefined;\r\n\r\n    private accessToken = undefined;\r\n\r\n    tokenChange: EventEmitter<Oauth2token> = new EventEmitter();\r\n\r\n   public auth = false;\r\n\r\n  constructor(\r\n             private router: Router,\r\n             private http: HttpClient\r\n              ) {\r\n\r\n  }\r\n\r\n    performGetAccessToken(authCode: string | null): any {\r\n\r\n\r\n    // https://digital.nhs.uk/developer/guides-and-documentation/security-and-authorisation/user-restricted-restful-apis-nhs-cis2-combined-authentication-and-authorisation\r\n\r\n    const bearerToken = 'Basic ' + btoa(environment.oauth2.client_id + ':' + environment.oauth2.client_secret);\r\n    const headers = new HttpHeaders( { 'Content-Type': 'application/x-www-form-urlencoded'});\r\n\r\n    const url = environment.oauth2.token;\r\n\r\n\r\n    const urlParams = new URLSearchParams(\r\n            { grant_type: 'authorization_code'});\r\n\r\n    urlParams.append('client_id', environment.oauth2.client_id),\r\n    urlParams.append(  'client_secret', environment.oauth2.client_secret);\r\n    urlParams.append(  'redirect_uri', document.baseURI + 'callback');\r\n    if (typeof authCode === 'string') {\r\n        urlParams.append('code', authCode);\r\n    }\r\n\r\n    this.postAny(url, urlParams.toString(),  headers  ).subscribe( (token: any) => {\r\n        // console.log(response);\r\n        this.smartToken = token;\r\n        console.log('OAuth2Token : ' + token);\r\n        this.setAccessToken(token);\r\n\r\n        }\r\n      , (error: any) => {\r\n        console.log(error);\r\n      }\r\n      , () => {\r\n        // Emit event\r\n      }\r\n    );\r\n  }\r\n\r\n    // tslint:disable-next-line:typedef\r\n    public postAny(url: string | null, body: string, httpHeaders: HttpHeaders) {\r\n        return this.http.post<any>(url as string, body, {headers: httpHeaders});\r\n    }\r\n\r\n    public setAccessToken(token: { expires_at: any; expires_in: number; access_token: any; }): any {\r\n        // tslint:disable-next-line:new-parens\r\n        const date = new Date;\r\n        // Create an expires at ..... don't know when we got the token\r\n        token.expires_at = Math.round((new Date().valueOf()) / 1000) + token.expires_in;\r\n        localStorage.setItem('nhsdToken', JSON.stringify(token));\r\n        this.accessToken = token.access_token;\r\n        this.tokenChange.emit(token);\r\n    }\r\n    public hasAccessToken(): boolean {\r\n        return this.getAccessToken() !== undefined;\r\n    }\r\n\r\n    public getAccessToken(): any {\r\n        if (localStorage.getItem('nhsdToken') !== undefined) {\r\n            const token: any = JSON.parse(localStorage.getItem('nhsdToken') as any);\r\n            const helper = new JwtHelperService();\r\n            if (this.isTokenExpired(token)) {\r\n\r\n                console.log('withings Token expired');\r\n                this.accessToken = undefined;\r\n                //  this.getRefreshToken();\r\n                return undefined;\r\n            }\r\n            if (token !== undefined) {\r\n                this.accessToken = token.access_token;\r\n                return this.accessToken;\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n\r\n    private deleteAccessToken(): any {\r\n        this.accessToken = undefined;\r\n        localStorage.removeItem('nhsdToken');\r\n    }\r\n\r\n    private getTokenExpirationDate(\r\n        decoded: any\r\n    ): Date | null {\r\n\r\n        if (!decoded || !decoded.hasOwnProperty('expires_at')) {\r\n            // Invalid format\r\n            localStorage.removeItem('nhsdToken');\r\n            return null;\r\n        }\r\n\r\n        const date = new Date(0);\r\n        date.setUTCSeconds(decoded.expires_at);\r\n\r\n        return date;\r\n    }\r\n\r\n    private isTokenExpired(\r\n        token: any,\r\n        offsetSeconds?: number\r\n    ): boolean {\r\n        if (!token || token === '') {\r\n            return true;\r\n        }\r\n        const date = this.getTokenExpirationDate(token);\r\n        offsetSeconds = offsetSeconds || 0;\r\n\r\n        console.log('nhsd token expiry date ' + date);\r\n        if (date === null) {\r\n            return false;\r\n        }\r\n        return !(date.valueOf() > new Date().valueOf() + offsetSeconds * 1000);\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {MatTableDataSource} from '@angular/material/table';\r\nimport {MatDialog,MatDialogConfig} from '@angular/material/dialog';\r\nimport {NhsdService} from '../service/nhsd.service';\r\nimport {Task} from 'fhir/r4';\r\nimport {DatePipe} from \"@angular/common\";\r\nimport {PrescriptionOrderDetailComponent} from \"../prescription-order-detail/prescription-order-detail.component\";\r\n\r\n@Component({\r\n  selector: 'app-prescription-orders',\r\n  templateUrl: './prescription-orders.component.html',\r\n  styleUrls: ['./prescription-orders.component.scss']\r\n})\r\nexport class PrescriptionOrdersComponent implements OnInit {\r\n\r\n\r\n    datepipe: DatePipe = new DatePipe('en-GB');\r\n    displayedColumns: string[] = ['authored', 'status', 'requester', 'pharmacy', 'medications', 'order_number',  'view_order', 'track_order'];\r\n\r\n    dataSource: any;\r\n    data: Task[] = [];\r\n\r\n\r\n  constructor(private hapi: NhsdService,\r\n              private dialog: MatDialog) { }\r\n\r\n  ngOnInit(): void {\r\n     this.dataSource = new MatTableDataSource <any>(this.data);\r\n     this.hapi.queryTasks();\r\n     this.hapi.taskChange.subscribe(() => {\r\n          this.dataSource = new MatTableDataSource(this.hapi.getTasks());\r\n      });\r\n  }\r\n\r\n  view(resource: any): void {\r\n      const dialogConfig = new MatDialogConfig();\r\n\r\n      dialogConfig.disableClose = true;\r\n      dialogConfig.autoFocus = true;\r\n      dialogConfig.data = {\r\n          id: 1,\r\n          resource: resource\r\n      };\r\n      this.dialog.open( PrescriptionOrderDetailComponent, dialogConfig);\r\n  }\r\n\r\n}\r\n","<mat-card>\r\n    <mat-card-header><h2>EPS Prescription Orders (FHIR Task)</h2>\r\n\r\n    </mat-card-header>\r\n    <table mat-table [dataSource]=\"dataSource\" width=\"100%\" >\r\n\r\n        <!--- Note that these columns can be defined in any order.\r\n              The actual rendered columns are set as a property on the row definition\" -->\r\n\r\n        <ng-container matColumnDef=\"status\">\r\n            <th mat-header-cell *matHeaderCellDef [style.width.px]=\"120\"> Status </th>\r\n            <td mat-cell *matCellDef=\"let element\"> {{element.status}} </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"medications\">\r\n            <th mat-header-cell *matHeaderCellDef> Medications </th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n                <ul>\r\n                    <ng-template ngFor let-item [ngForOf]=\"element.input\" let-i=\"index\" >\r\n                        <li>{{item.valueReference.display}}</li>\r\n                    </ng-template>\r\n                </ul>\r\n            </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"pharmacy\">\r\n            <th mat-header-cell *matHeaderCellDef> Pharmacy </th>\r\n            <td mat-cell *matCellDef=\"let element\"> {{element.owner?.identifier.value}} </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"requester\">\r\n            <th mat-header-cell *matHeaderCellDef [style.width.px]=\"120\"> Requester </th>\r\n            <td mat-cell *matCellDef=\"let element\"> {{element.requester.display}} </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"authored\">\r\n            <th mat-header-cell *matHeaderCellDef [style.width.px]=\"120\"> Authored </th>\r\n            <td mat-cell *matCellDef=\"let element\"> {{datepipe.transform(element.authoredOn, 'dd MMM yyyy HH:mm') }} </td>\r\n        </ng-container>\r\n\r\n        <!-- Symbol Column -->\r\n        <ng-container matColumnDef=\"order_number\">\r\n            <th mat-header-cell *matHeaderCellDef > Order No. </th>\r\n            <td mat-cell *matCellDef=\"let element\"> {{element.identifier[0].value}} </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"return_order\">\r\n            <th mat-header-cell *matHeaderCellDef [style.width.px]=\"120\"> Cancel </th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n                <button color=\"warn\" *ngIf=\"element.status == 'accepted'\" mat-icon-button><mat-icon>remove_shopping_cart</mat-icon>Cancel</button>\r\n            </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"view_order\">\r\n            <th mat-header-cell *matHeaderCellDef [style.width.px]=\"120\"> View Order  </th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n                <button color=\"accent\" mat-icon-button (click)=\"view(element)\" ><mat-icon>inventory</mat-icon>View Details</button>\r\n            </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"track_order\">\r\n            <th mat-header-cell *matHeaderCellDef [style.width.px]=\"120\"> Track Package  </th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n                <button color=\"accent\" mat-icon-button ><mat-icon>local_shipping</mat-icon>Tracking</button>\r\n            </td>\r\n        </ng-container>\r\n\r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n    </table>\r\n</mat-card>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  oauth2 : {\r\n    token : 'https://int.api.service.nhs.uk/oauth2-no-smartcard/token',\r\n    auth : 'https://int.api.service.nhs.uk/oauth2-no-smartcard/authorize',\r\n    client_id : 'FXmDMToQI68FhfNmqA3QgaiPJ3AdrRQt',\r\n    client_secret : '1GVeaPTFi59WEX7V',\r\n    cookie_domain : 'localhost',\r\n    logonUrl: 'http://localhost:4200/ccri-logon'\r\n  },\r\n  virtually: 'https://emis-api-lb-test-294292503.eu-west-2.elb.amazonaws.com/R4',\r\n  nhsd: 'https://server.fire.ly/r4',\r\n  hapibase: 'http://hapi.fhir.org/baseR4',\r\n  firelybase : 'https://server.fire.ly/r4'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {AuthService} from '../service/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-callback',\r\n  templateUrl: './callback.component.html',\r\n  styleUrls: ['./callback.component.css']\r\n})\r\nexport class CallbackComponent implements OnInit {\r\n\r\n  constructor(private route: ActivatedRoute,\r\n              private auth: AuthService,\r\n              private router: Router) { }\r\n\r\n  private authCode = '' ;\r\n\r\n  subOAuth2: any;\r\n\r\n  // tslint:disable-next-line:typedef\r\n  ngOnInit() {\r\n\r\n    this.auth.tokenChange.subscribe(\r\n        () => {\r\n          this.router.navigateByUrl('/');\r\n        }\r\n    );\r\n    this.route.queryParamMap.subscribe(params => {\r\n      console.log(params);\r\n      const code = params.get('code');\r\n      // var state = params.get('state');\r\n      this.auth.performGetAccessToken(code);\r\n    });\r\n\r\n  }\r\n\r\n}\r\n","callback done\r\n","import {Component, OnInit, ViewContainerRef} from '@angular/core';\nimport {TdDialogService} from '@covalent/core/dialogs';\n\n@Component({\n  selector: 'app-refill',\n  templateUrl: './refill.component.html',\n  styleUrls: ['./refill.component.scss']\n})\nexport class RefillComponent implements OnInit {\n\n  constructor(private _dialogService: TdDialogService,\n              private _viewContainerRef: ViewContainerRef) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>refill works!</p>\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'phr';\r\n}\r\n","<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport {CovalentDynamicFormsModule} from \"@covalent/dynamic-forms\";\r\nimport {CovalentLayoutModule} from \"@covalent/core/layout\";\r\nimport {CovalentStepsModule} from \"@covalent/core/steps\";\r\nimport {CovalentHighlightModule} from \"@covalent/highlight\";\r\nimport {CovalentMarkdownModule} from \"@covalent/markdown\";\r\nimport {CovalentBaseEchartsModule} from \"@covalent/echarts/base\";\r\nimport {CovalentHttpModule} from \"@covalent/http\";\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport {MainComponent} from \"./main/main.component\";\r\nimport {MatChipsModule} from \"@angular/material/chips\";\r\nimport {MatTooltipModule} from \"@angular/material/tooltip\";\r\nimport {MatTableModule} from \"@angular/material/table\";\r\nimport {CovalentDataTableModule} from \"@covalent/core/data-table\";\r\nimport {MatButtonModule} from \"@angular/material/button\";\r\nimport {MatIconModule} from \"@angular/material/icon\";\r\nimport {MatMenuModule} from \"@angular/material/menu\";\r\nimport {MatCardModule} from \"@angular/material/card\";\r\nimport {MatList, MatListModule} from \"@angular/material/list\";\r\nimport {FlexLayoutModule} from \"@angular/flex-layout\";\r\nimport { OrdersComponent } from './orders/orders.component';\r\nimport {PrescriptionRefillComponent} from \"./gp-prescriptions/prescription-refill.component\";\r\nimport {PrescriptionOrderDetailComponent} from \"./prescription-order-detail/prescription-order-detail.component\";\r\nimport {CovalentMessageModule} from \"@covalent/core/message\";\r\nimport {PrescriptionOrdersComponent} from \"./eps-orders/prescription-orders.component\";\r\nimport {CallbackComponent} from \"./callback/callback.component\";\r\nimport {AuthGuard} from \"./service/auth-guard\";\r\nimport { LoginComponent } from './login/login.component';\r\nimport {CovalentFileModule} from \"@covalent/core/file\";\r\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\r\nimport {GpDiaryComponent} from \"./gp-diary/gp-diary.component\";\r\nimport {CovalentDialogsModule} from \"@covalent/core/dialogs\";\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport { RefillComponent } from './refill/refill.component';\nimport { GpTaskComponent } from './gp-task/gp-task.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    MainComponent,\r\n    OrdersComponent,\r\n      PrescriptionRefillComponent,\r\n      PrescriptionOrdersComponent,\r\n      GpDiaryComponent,\r\n      CallbackComponent,\r\n      LoginComponent,\r\n      PrescriptionOrderDetailComponent,\r\n      RefillComponent,\r\n      GpTaskComponent\r\n  ],\r\n    imports: [\r\n        BrowserModule,\r\n        AppRoutingModule,\r\n        FlexLayoutModule,\r\n        BrowserAnimationsModule,\r\n\r\n        CovalentLayoutModule,\r\n        CovalentStepsModule,\r\n        // (optional) Additional Covalent Modules imports\r\n        CovalentHttpModule.forRoot(),\r\n        CovalentHighlightModule,\r\n        CovalentMarkdownModule,\r\n        CovalentDynamicFormsModule,\r\n        CovalentBaseEchartsModule,\r\n        CovalentMessageModule,\r\n        CovalentDialogsModule,\r\n\r\n        MatIconModule,\r\n        MatButtonModule,\r\n        CovalentDataTableModule,\r\n        MatMenuModule,\r\n        MatListModule,\r\n        MatCardModule,\r\n        MatTableModule,\r\n        MatTooltipModule,\r\n        MatChipsModule,\r\n        CovalentFileModule,\r\n        ReactiveFormsModule,\r\n        FormsModule,\r\n        MatDialogModule\r\n    ],\r\n    entryComponents: [\r\n        PrescriptionOrderDetailComponent,\r\n        RefillComponent\r\n    ],\r\n  providers: [\r\n      AuthGuard\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import {EventEmitter, Injectable} from '@angular/core';\r\nimport {AuthService} from './auth.service';\r\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\r\nimport {Bundle, MedicationRequest, Task} from 'fhir/r4';\r\nimport {environment} from '../../environments/environment';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class FhirService {\r\n\r\n    private medicationRequests: MedicationRequest[] = [];\r\n\r\n\r\n    medicationChange: EventEmitter<any> = new EventEmitter();\r\n    constructor(private http: HttpClient,\r\n                private auth: AuthService) {\r\n    }\r\n\r\n    taskChange: EventEmitter<any> = new EventEmitter();\r\n    private tasks: Task[] = [];\r\n\r\n    public getTasks(): Task[] {\r\n        return this.tasks;\r\n    }\r\n\r\n    public queryTasks(): any {\r\n\r\n\r\n        const headers = this.getHeaders();\r\n        // tslint:disable-next-line:typedef\r\n        this.http.get(environment.virtually + '/Task?patient=137', { headers}).subscribe(\r\n            result => {\r\n                const bundle = result as Bundle;\r\n                if (bundle.entry !== undefined && bundle.entry.length > 0) {\r\n                    console.log('Task found.');\r\n                    this.tasks = [];\r\n                    for (const entry of bundle.entry) {\r\n                        this.tasks.push(entry.resource as Task);\r\n                    }\r\n                    this.taskChange.emit({});\r\n                } else {\r\n                    console.log('Task not found.');\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n\r\n    public getMedicationRequests(): MedicationRequest[] {\r\n        return this.medicationRequests;\r\n    }\r\n    public queryMedicationRequests(): any {\r\n\r\n        const headers = this.getHeaders();\r\n        // tslint:disable-next-line:typedef\r\n        this.http.get(environment.virtually + '/MedicationRequest?patient=137&date=2019-01-01', { headers}).subscribe(\r\n            result => {\r\n                const bundle = result as Bundle;\r\n                if (bundle.entry !== undefined && bundle.entry.length > 0) {\r\n                    console.log('Medication found.');\r\n                    this.medicationRequests = [];\r\n                    for (const entry of bundle.entry) {\r\n                        this.medicationRequests.push(entry.resource as MedicationRequest);\r\n                    }\r\n                    this.medicationChange.emit({});\r\n                } else {\r\n                    console.log('Medication not found.');\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    getHeaders(): HttpHeaders {\r\n\r\n        let headers = new HttpHeaders(\r\n        );\r\n\r\n        headers = headers.append('Content-Type', 'application/fhir+json');\r\n        headers = headers.append('Accept', 'application/fhir+json');\r\n        // headers = headers.append(\"Authorization\", \"Bearer \"+this.auth.getAccessToken());\r\n        return headers;\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-gp-task',\n  templateUrl: './gp-task.component.html',\n  styleUrls: ['./gp-task.component.scss']\n})\nexport class GpTaskComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>gp-task works!</p>\n","import {CanActivate, Router} from '@angular/router';\r\nimport {Injectable} from '@angular/core';\r\nimport {AuthService} from './auth.service';\r\nimport {Extension, MedicationRequest, Patient} from \"fhir/r4\";\r\n\r\n@Injectable()\r\nexport class AuthGuard  implements CanActivate {\r\n\r\n\r\n  constructor(public router: Router, private auth: AuthService) {\r\n\r\n  }\r\n  canActivate(): any {\r\n\r\n\r\n    if (this.auth.hasAccessToken()) {\r\n      return true;\r\n    } else {\r\n        console.log('Auth');\r\n        this.router.navigate(['login']);\r\n        return false;\r\n    }\r\n  }\r\n\r\n}\r\n","import {EventEmitter, Injectable} from '@angular/core';\r\nimport {\r\n  Bundle,\r\n  BundleEntry,\r\n  DomainResource,\r\n  Identifier,\r\n  MedicationRequest,\r\n  MessageHeader,\r\n  PractitionerRole,\r\n  Task\r\n} from 'fhir/r4';\r\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\r\nimport {environment} from \"../../environments/environment\";\r\nimport {AuthService} from \"./auth.service\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NhsdService {\r\n\r\n  medicationChange: EventEmitter<any> = new EventEmitter();\r\n  constructor(private http: HttpClient) { }\r\n\r\n\r\n  taskChange: EventEmitter<any> = new EventEmitter();\r\n  private tasks: Task[] = [];\r\n  public getTasks(): Task[] {\r\n    return this.tasks;\r\n  }\r\n\r\n  public queryTasks(): any {\r\n\r\n\r\n    const headers = this.getHeaders();\r\n    // tslint:disable-next-line:typedef\r\n    this.http.get(environment.nhsd + '/Task?patient.identifier=9453740519', { headers}).subscribe(\r\n        result => {\r\n          const bundle = result as Bundle;\r\n          if (bundle.entry !== undefined && bundle.entry.length > 0) {\r\n            console.log('Task found.');\r\n            this.tasks = [];\r\n            for (const entry of bundle.entry) {\r\n              if (entry.resource?.resourceType === 'Task') {\r\n                this.tasks.push(entry.resource as Task);\r\n              }\r\n            }\r\n            this.taskChange.emit({});\r\n          } else {\r\n            console.log('Task not found.');\r\n          }\r\n        }\r\n    );\r\n  }\r\n\r\n  public convertToTransaction(bundle: Bundle): any {\r\n\r\n    let newBundle: Bundle = {\r\n      resourceType : 'Bundle',\r\n      type : 'transaction',\r\n      entry : []\r\n    };\r\n    let task: any = {\r\n      resourceType : 'Task',\r\n      status: 'ready',\r\n      intent: 'order',\r\n      code: {\r\n        coding: [\r\n          {\r\n            system: 'http://hl7.org/fhir/CodeSystem/task-code',\r\n            code: 'fulfill',\r\n            display: 'Fulfill the focal request'\r\n          }\r\n        ]\r\n      },\r\n      input: []\r\n    };\r\n    let prescriptionorder = false;\r\n    if (bundle.entry !== undefined && bundle.entry.length > 0) {\r\n      let practitionerRole: string | undefined = '';\r\n      for (const entry of bundle.entry) {\r\n          const resource = entry.resource as any;\r\n          if (resource?.resourceType === 'Patient') {\r\n              task.for = {\r\n                reference : entry.fullUrl\r\n              };\r\n          }\r\n        if (resource?.resourceType === 'MessageHeader' ) {\r\n          console.log('MessageHeader');\r\n          const medicationHeader = resource as MessageHeader;\r\n          if (medicationHeader.eventCoding?.code === 'prescription-order') {\r\n            prescriptionorder = true;\r\n          }\r\n        }\r\n        // tslint:disable-next-line:no-conditional-assignment\r\n          if ((resource?.resourceType === 'MedicationRequest') ) {\r\n            const medicationRequest = resource as any;\r\n            if (task.identifier === undefined) {\r\n              task.identifier = [];\r\n              task.identifier.push(medicationRequest.groupIdentifier as Identifier);\r\n            }\r\n            task.requester = medicationRequest.requester;\r\n            practitionerRole = medicationRequest.requester?.reference;\r\n            task.authoredOn = medicationRequest.authoredOn;\r\n            if (medicationRequest.dispenseRequest !== undefined && medicationRequest.dispenseRequest.performer !== undefined) {\r\n                task.owner = medicationRequest.dispenseRequest.performer;\r\n                task.status = 'requested';\r\n            }\r\n            const input = {\r\n              type: {\r\n                coding:  [\r\n                  {\r\n                    system: 'http://snomed.info/sct',\r\n                    code: '16076005',\r\n                    display: 'Prescription'\r\n                  }\r\n                ]\r\n              },\r\n              valueReference: {\r\n                type: 'MedicationRequest',\r\n                reference: entry.fullUrl,\r\n                display: medicationRequest?.medicationCodeableConcept?.coding[0].display\r\n              }\r\n            };\r\n            task.input?.push(input);\r\n          }\r\n          if (resource?.identifier !== undefined) {\r\n              let identifier = '';\r\n              if (resource?.identifier.length !== undefined) {\r\n                identifier = this.getIdentifier(resource?.identifier[0]);\r\n              } else {\r\n                identifier = this.getIdentifier(resource?.identifier);\r\n              }\r\n              // @ts-ignore\r\n              entry.request = {\r\n                method : 'PUT',\r\n                url: resource?.resourceType + '?identifier=' + identifier\r\n              };\r\n              newBundle.entry?.push(entry);\r\n          } else {\r\n            // remove resource\r\n          }\r\n\r\n      }\r\n      if (practitionerRole !== '') {\r\n        console.log(practitionerRole);\r\n        for (const entry of bundle.entry) {\r\n          if (entry.fullUrl === practitionerRole) {\r\n            const resource = entry.resource as DomainResource;\r\n\r\n            if (resource.resourceType === 'PractitionerRole') {\r\n                // @ts-ignore\r\n              task.requester.display = (resource as PractitionerRole).practitioner.display;\r\n                // @ts-ignore\r\n              if (task.requester.display === undefined) {\r\n                  // @ts-ignore\r\n                  task.requester.display = (resource as PractitionerRole).identifier[0].value;\r\n                }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      console.log(task);\r\n      // @ts-ignore\r\n      const entry: BundleEntry = {\r\n        resource : task,\r\n        request : {\r\n          method : 'PUT',\r\n          url: 'Task?identifier=' + this.getIdentifier(task.identifier[0])\r\n        }\r\n      };\r\n      if (prescriptionorder) {\r\n        newBundle.entry?.push(entry);\r\n      }\r\n      console.log(newBundle);\r\n      this.http.post(environment.nhsd, JSON.stringify(newBundle), { headers: this.getHeaders() }).subscribe(\r\n          (result) => {\r\n            console.log('done post to hapi');\r\n            console.log(result);\r\n            this.medicationChange.emit({});\r\n          }\r\n      );\r\n    } else {\r\n    }\r\n  }\r\n\r\n\r\n  getHeaders(): HttpHeaders {\r\n\r\n    let headers = new HttpHeaders(\r\n    );\r\n\r\n    headers = headers.append('Content-Type', 'application/fhir+json');\r\n    headers = headers.append('Accept', 'application/fhir+json');\r\n    return headers;\r\n  }\r\n\r\n  getIdentifier(identifier: Identifier): string {\r\n    if (identifier.system !== undefined) {\r\n      return identifier.system + '|' + identifier.value;\r\n    } else {\r\n      return <string>identifier.value;\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {MatTableDataSource} from '@angular/material/table';\r\nimport {Task} from 'fhir/r4';\r\nimport {DatePipe} from \"@angular/common\";\r\nimport {FhirService} from \"../service/FhirService\";\r\nimport {MatDialog} from \"@angular/material/dialog\";\r\nimport {TdDialogService} from \"@covalent/core/dialogs\";\r\n\r\n@Component({\r\n  selector: 'app-gp-diary',\r\n  templateUrl: './gp-diary.component.html',\r\n  styleUrls: ['./gp-diary.component.scss']\r\n})\r\nexport class GpDiaryComponent implements OnInit {\r\n\r\n\r\n    datepipe: DatePipe = new DatePipe('en-GB');\r\n    displayedColumns: string[] = ['when', 'status', 'reason', 'notes'];\r\n\r\n    dataSource: any;\r\n    data: Task[] = [];\r\n\r\n\r\n  constructor(private fhir: FhirService,\r\n              private dialog: MatDialog,\r\n              private _dialogService: TdDialogService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n     this.dataSource = new MatTableDataSource <any>(this.data);\r\n     this.fhir.queryTasks();\r\n     this.fhir.taskChange.subscribe(() => {\r\n          this.dataSource = new MatTableDataSource(this.fhir.getTasks());\r\n      });\r\n  }\r\n  diary(): void {\r\n      const matDialogRef = this._dialogService.openPrompt({\r\n          title: 'Diary Entry (FHIR Task)',\r\n          message: 'Use this to add Tasks (Diary Entries) to GP workflow',\r\n          value: 'Asthma Medication Review',\r\n          cancelButton: 'Cancel',\r\n          acceptButton: 'Ok',\r\n      });\r\n      matDialogRef.afterClosed().subscribe(result => {\r\n          console.log(matDialogRef.componentInstance.value);\r\n      });\r\n  }\r\n\r\n}\r\n","<mat-card>\r\n    <mat-card-header><h2>GP Diary Entries (FHIR Task)</h2>\r\n        </mat-card-header>\r\n    <button mat-fab aria-label=\"Example icon button with a heart icon\" (click)=\"diary()\">\r\n        <mat-icon>note_add</mat-icon>\r\n    </button>\r\n    <table mat-table [dataSource]=\"dataSource\"  width=\"100%\">\r\n\r\n        <!--- Note that these columns can be defined in any order.\r\n              The actual rendered columns are set as a property on the row definition\" -->\r\n\r\n        <ng-container matColumnDef=\"status\">\r\n            <th mat-header-cell *matHeaderCellDef [style.width.px]=\"120\"> Status </th>\r\n            <td mat-cell *matCellDef=\"let element\"> {{element.status}} </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"medications\">\r\n            <th mat-header-cell *matHeaderCellDef> Medications </th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n                <ul>\r\n                    <ng-template ngFor let-item [ngForOf]=\"element.input\" let-i=\"index\" >\r\n                        <li>{{item.valueReference.display}}</li>\r\n                    </ng-template>\r\n                </ul>\r\n            </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"pharmacy\">\r\n            <th mat-header-cell *matHeaderCellDef> Pharmacy </th>\r\n            <td mat-cell *matCellDef=\"let element\"> {{element.owner?.identifier.value}} </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"requester\">\r\n            <th mat-header-cell *matHeaderCellDef> Requester </th>\r\n            <td mat-cell *matCellDef=\"let element\"> {{element.requester.display}} </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"authored\">\r\n            <th mat-header-cell *matHeaderCellDef> Authored </th>\r\n            <td mat-cell *matCellDef=\"let element\"> {{datepipe.transform(element.authoredOn, 'dd MMM yyyy HH:mm') }} </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"when\">\r\n            <th mat-header-cell *matHeaderCellDef [style.width.px]=\"120\"> When </th>\r\n            <td mat-cell *matCellDef=\"let element\"> {{datepipe.transform(element.executionPeriod.start, 'dd MMM yyyy HH:mm') }} </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"reason\">\r\n            <th mat-header-cell *matHeaderCellDef [style.width.px]=\"240\"> Reason </th>\r\n            <td mat-cell *matCellDef=\"let element\"> {{element.reasonCode.coding[0].display }} </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"notes\">\r\n            <th mat-header-cell *matHeaderCellDef> Notes </th>\r\n            <td mat-cell *matCellDef=\"let element\">  </td>\r\n        </ng-container>\r\n\r\n        <!-- Symbol Column -->\r\n        <ng-container matColumnDef=\"order_number\">\r\n            <th mat-header-cell *matHeaderCellDef > Order No. </th>\r\n            <td mat-cell *matCellDef=\"let element\"> {{element.identifier[0].value}} </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"return_order\">\r\n            <th mat-header-cell *matHeaderCellDef [style.width.px]=\"120\"> Cancel </th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n                <button color=\"warn\" *ngIf=\"element.status == 'accepted'\" mat-icon-button><mat-icon>remove_shopping_cart</mat-icon>Cancel</button>\r\n            </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"view_order\">\r\n            <th mat-header-cell *matHeaderCellDef [style.width.px]=\"120\"> View Order  </th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n                <button color=\"accent\" mat-icon-button routerLink=\"/details/123453-ABCDFE-12345\" ><mat-icon>inventory</mat-icon>View Details</button>\r\n            </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"track_order\">\r\n            <th mat-header-cell *matHeaderCellDef [style.width.px]=\"120\"> Track Package  </th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n                <button color=\"accent\" mat-icon-button routerLink=\"/details/123453-ABCDFE-12345\" ><mat-icon>local_shipping</mat-icon>Tracking</button>\r\n            </td>\r\n        </ng-container>\r\n\r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n    </table>\r\n</mat-card>\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport {MainComponent} from './main/main.component';\r\nimport {OrdersComponent} from './orders/orders.component';\r\nimport {CallbackComponent} from './callback/callback.component';\r\nimport {AuthGuard} from './service/auth-guard';\r\nimport {LoginComponent} from './login/login.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', canActivate: [AuthGuard], component: MainComponent,\r\n    children : [\r\n      {\r\n        path: '', component: OrdersComponent\r\n      }]},\r\n  {  path: 'callback', component : CallbackComponent},\r\n  {  path: 'login', component : LoginComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {environment} from '../../environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  constructor() { }\r\n  callback = document.baseURI + 'callback';\r\n\r\n\r\n  ngOnInit(): void {\r\n    window.location.href = environment.oauth2.auth + '?client_id=' + environment.oauth2.client_id +\r\n        '&response_type=code&redirect_uri=' + this.callback + '&state=123';\r\n  }\r\n\r\n}\r\n","Redirecting to login\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-main',\r\n  templateUrl: './main.component.html',\r\n  styleUrls: ['./main.component.scss']\r\n})\r\nexport class MainComponent implements OnInit {\r\n\r\n  opened = false;\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<mat-menu #menu=\"matMenu\">\r\n    <button mat-menu-item routerLink=\"/order\"><mat-icon>shopping_basket</mat-icon>My Tasks</button>\r\n    <button mat-menu-item routerLink=\"/search\"><mat-icon>add_shopping_cart</mat-icon>Search and Add Tasks</button>\r\n    <button mat-menu-item routerLink=\"/refill\"><mat-icon>reorder</mat-icon>Reorder Medications</button>\r\n</mat-menu>\r\n<mat-menu #dosmenu=\"matMenu\">\r\n    <button mat-menu-item routerLink=\"/patient\"><mat-icon>person</mat-icon>Patient</button>\r\n    <button mat-menu-item routerLink=\"/pharmacy\"><mat-icon>store</mat-icon>Pharmacy</button>\r\n</mat-menu>\r\n<td-layout class=\"layout-nav-demo\" sidenavWidth=\"280px\">\r\n    <td-navigation-drawer\r\n            flex\r\n            sidenavTitle=\"Menu\" >\r\n        <mat-list>\r\n        </mat-list>\r\n        <span>\r\n    </span>\r\n    </td-navigation-drawer>\r\n    <td-layout-nav-list navigationRoute=\"/\" mode=\"side\" [opened]=opened>\r\n\r\n        <div td-sidenav-content>\r\n\r\n\r\n        </div>\r\n        <div td-toolbar-content layout=\"row\" layout-align=\"start center\" flex>\r\n\r\n           <!-- <button mat-icon-button td-menu-button tdLayoutToggle>\r\n                <mat-icon>menu</mat-icon>\r\n            </button>\r\n-->\r\n            <span>Codename: Danube</span>\r\n            <span flex></span>\r\n\r\n           <!-- <button mat-icon-button [matMenuTriggerFor]=\"dosmenu\" matTooltip=\"Directory Services\"><mat-icon>search</mat-icon><mat-icon>arrow_drop_down</mat-icon></button>\r\n-->\r\n            <button mat-button  matTooltip=\"Orders\"><mat-icon>add_shopping_cart</mat-icon>Basket</button>\r\n\r\n        </div>\r\n        <router-outlet></router-outlet>\r\n    </td-layout-nav-list>\r\n</td-layout>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {MatTableDataSource} from '@angular/material/table';\r\nimport {FhirService} from '../service/FhirService';\r\nimport {MedicationRequest} from 'fhir/r4';\r\nimport {DatePipe} from '@angular/common';\r\nimport {MatDialog, MatDialogConfig} from \"@angular/material/dialog\";\r\nimport {TdDialogService, TdPromptDialogComponent} from \"@covalent/core/dialogs\";\r\n\r\n@Component({\r\n  selector: 'app-prescription-refill',\r\n  templateUrl: './prescription-refill.component.html',\r\n  styleUrls: ['./prescription-refill.component.scss']\r\n})\r\nexport class PrescriptionRefillComponent implements OnInit {\r\n\r\n\r\n\r\n    displayedColumns: string[] = ['authored', 'status', 'name',  'courseOfTherapy',  'quantity', 'unit', 'reorder_medication'];\r\n\r\n    dataSource: any;\r\n\r\n    data: MedicationRequest[] =  [];\r\n\r\n    datepipe: DatePipe = new DatePipe('en-GB');\r\n\r\n\r\n  constructor(private fhir: FhirService,\r\n              private dialog: MatDialog,\r\n              private _dialogService: TdDialogService) { }\r\n\r\n  ngOnInit(): void {\r\n      this.dataSource = new MatTableDataSource <any>(this.data);\r\n      this.fhir.queryMedicationRequests();\r\n      this.fhir.medicationChange.subscribe(() => {\r\n         this.dataSource = new MatTableDataSource(this.fhir.getMedicationRequests());\r\n      });\r\n  }\r\n  refill(resource: any): void {\r\n\r\n      const matDialogRef = this._dialogService.openPrompt({\r\n          title: 'Re-Order (FHIR Task)',\r\n          message: 'Why do you wish to re-order ' + resource?.medicationCodeableConcept?.coding[0].display,\r\n          value: '',\r\n          cancelButton: 'Cancel',\r\n          acceptButton: 'Ok',\r\n      });\r\n      matDialogRef.afterClosed().subscribe(result => {\r\n          console.log(matDialogRef.componentInstance.value);\r\n      });\r\n  }\r\n\r\n}\r\n","<mat-card>\r\n    <mat-card-header><h2>GP Medication Record (FHIR MedicationRequest)</h2></mat-card-header>\r\n    <table mat-table [dataSource]=\"dataSource\"  width=\"100%\">\r\n\r\n        <!--- Note that these columns can be defined in any order.\r\n              The actual rendered columns are set as a property on the row definition\" -->\r\n\r\n        <!-- Position Column -->\r\n        <ng-container matColumnDef=\"concept\">\r\n            <th mat-header-cell *matHeaderCellDef> Medication ID </th>\r\n            <td mat-cell *matCellDef=\"let element\"> {{element.concept}} </td>\r\n        </ng-container>\r\n\r\n        <!-- Name Column -->\r\n        <ng-container matColumnDef=\"name\">\r\n            <th mat-header-cell *matHeaderCellDef> Medication Name </th>\r\n            <td mat-cell *matCellDef=\"let element\"> {{element.medicationCodeableConcept.coding[0].display}} </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"status\">\r\n            <th mat-header-cell *matHeaderCellDef [style.width.px]=\"120\"> Status </th>\r\n            <td mat-cell *matCellDef=\"let element\"> {{element.status}}  </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"authored\">\r\n            <th mat-header-cell *matHeaderCellDef [style.width.px]=\"120\"> Authored </th>\r\n            <td mat-cell *matCellDef=\"let element\"> {{datepipe.transform(element.authoredOn, 'dd MMM yyyy') }} </td>\r\n        </ng-container>\r\n\r\n        <!-- Weight Column -->\r\n        <ng-container matColumnDef=\"quantity\">\r\n            <th mat-header-cell *matHeaderCellDef> Quantity </th>\r\n            <td mat-cell *matCellDef=\"let element\"> {{element.dispenseRequest.quantity.value}} </td>\r\n        </ng-container>\r\n\r\n\r\n        <ng-container matColumnDef=\"courseOfTherapy\">\r\n            <th mat-header-cell *matHeaderCellDef> Type </th>\r\n            <td mat-cell *matCellDef=\"let element\"> {{element.courseOfTherapyType.coding[0].display}} </td>\r\n        </ng-container>\r\n\r\n        <!-- Symbol Column -->\r\n        <ng-container matColumnDef=\"unit\">\r\n            <th mat-header-cell *matHeaderCellDef> Unit </th>\r\n            <td mat-cell *matCellDef=\"let element\"> {{element.dispenseRequest.quantity.unit}} </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"reorder_medication\">\r\n            <th mat-header-cell *matHeaderCellDef> Reorder </th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n                <button color=\"accent\" mat-icon-button (click)=\"refill(element)\"><mat-icon>add_shopping_cart</mat-icon>Reorder</button>\r\n            </td>\r\n        </ng-container>\r\n\r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n    </table>\r\n\r\n</mat-card>\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}