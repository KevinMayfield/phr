{"version":3,"sources":["node_modules/@angular/material/prebuilt-themes/indigo-pink.css","styles.scss","theme.scss","../node_modules/@angular/material/_theming.scss","../node_modules/@covalent/core/common/styles/core/_button.scss","../node_modules/@covalent/core/common/styles/_layout.scss","../node_modules/@covalent/highlight/_highlight-theme.scss","../node_modules/@covalent/core/typography/_all-typography.scss","../node_modules/@covalent/core/chips/_chips-theme.scss","../node_modules/@covalent/core/data-table/_data-table-theme.scss","../node_modules/@covalent/core/dialogs/_dialog-theme.scss","../node_modules/@covalent/core/expansion-panel/_expansion-panel-theme.scss","../node_modules/@covalent/core/json-formatter/_json-formatter-theme.scss","../node_modules/@covalent/core/message/_message-theme.scss","../node_modules/@covalent/core/paging/_paging-bar-theme.scss","../node_modules/@covalent/core/steps/_steps-theme.scss","../node_modules/@covalent/core/layout/_layout-theme.scss","../node_modules/@covalent/core/breadcrumbs/_breadcrumbs-theme.scss","../node_modules/@covalent/core/common/_common-theme.scss","../node_modules/@covalent/core/common/styles/_variables.scss","../node_modules/@covalent/core/file/_file-theme.scss","../node_modules/@covalent/core/loading/_loading-theme.scss","../node_modules/@covalent/core/notifications/_notification-count-theme.scss","../node_modules/@covalent/markdown/_markdown-theme.scss","../node_modules/@covalent/flavored-markdown/_flavored-markdown-theme.scss","../node_modules/@covalent/core/common/styles/utilities/_general.scss","../node_modules/@covalent/core/common/styles/utilities/_pad.scss","../node_modules/@covalent/core/common/styles/utilities/_pull.scss","../node_modules/@covalent/core/common/styles/utilities/_push.scss","../node_modules/@covalent/core/common/styles/utilities/_size.scss","../node_modules/@covalent/core/common/styles/utilities/_text.scss"],"names":[],"mappings":"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;ADkdJ;ACkqCE;EACE;AD/pCJ;ACssME;EACE;ADnsMJ;AC4/BE;EAII;AD5/BN;ACkvCE;EACE;AD/uCJ;ACivCI;EAEE;ADhvCN;ACovCI;EACE;ADlvCN;ACqvCI;EACE;EACA;ADnvCN;ACsvCI;EACE;ADpvCN;ACwvCE;EACE;ADrvCJ;ACwvCE;EACE;ADrvCJ;ACwvCE;EACE;ADrvCJ;ACiyCE;EACE;AD9xCJ;ACiyCE;EACE;AD9xCJ;ACi1CE;EACE;AD90CJ;ACg1CI;EACE;AD90CN;ACk1CE;EACE,cAZe;ADn0CnB;ACk1CE;;EAEE;AD/0CJ;ACu1CE;;;;EAIE;ADp1CJ;ACu1CE;;EAEE;ADp1CJ;ACy1CI;;EACE,mBAxCa;AD7yCnB;ACmkME;EAIE;EACA;ADnkMJ;AC0kMI;EAn4MF;AD6TF;ACskMI;EAn4MF;ADiUF;ACkkMI;EAn4MF;ADqUF;AC8jMI;EAn4MF;ADyUF;AC0jMI;EAn4MF;AD6UF;ACsjMI;EAn4MF;ADiVF;ACkjMI;EAn4MF;ADqVF;AC8iMI;EAn4MF;ADyVF;AC0iMI;EAn4MF;AD6VF;ACsiMI;EAn4MF;ADiWF;ACkiMI;EAn4MF;ADqWF;AC8hMI;EAn4MF;ADyWF;AC0hMI;EAn4MF;AD6WF;ACshMI;EAn4MF;ADiXF;ACkhMI;EAn4MF;ADqXF;AC8gMI;EAn4MF;ADyXF;AC0gMI;EAn4MF;AD6XF;ACsgMI;EAn4MF;ADiYF;ACkgMI;EAn4MF;ADqYF;AC8/LI;EAn4MF;ADyYF;AC0/LI;EAn4MF;AD6YF;ACs/LI;EAn4MF;ADiZF;ACk/LI;EAn4MF;ADqZF;AC8+LI;EAn4MF;ADyZF;AC0+LI;EAn4MF;AD6ZF;AC6+LI;EACE;AD1+LN;ACq+CE;EAEE;EACA;ADn+CJ;ACnZE;EAnBA;ADyaF;ACu+CI;EACE;ADr+CN;ACu+CM;EACE;ADr+CR;AComDE;EACE;EACA;ADjmDJ;ACjwBI;EAq2EE;EACA;ADjmDN;ACsmDI;EACE;EACA;ADnmDN;ACwmDI;EACE;EACA;ADrmDN;ACymDE;EACE;ADtmDJ;AC0mDI;EACE;ADvmDN;AC4mDI;EAWI;EAMF;ADxnDN;AC4nDE;EACE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;ADznDJ;AC4nDE;;EAEE;ADznDJ;AC8nDE;EAEE;AD5nDJ;AC69CE;EACE,WANmB;EAOnB,YAPmB;EAQnB,iBARmB;ADl9CvB;AC89CI;EACE;AD59CN;ACi+CI;EACE;AD/9CN;ACo+CI;EACE;ADl+CN;ACu+CI;EACE;EACA;ADr+CN;AC0+CI;EACE;ADx+CN;AC6+CI;EACE;EACA;AD3+CN;ACi/CM;EACE;AD/+CR;ACo/CM;EACE;EACA;ADl/CR;ACu/CM;EACE;ADr/CR;AC0/CM;EACE;EACA;ADx/CR;ACq7CE;EACE,WAPqB;EAQrB,YARqB;EASrB,iBATqB;ADz6CzB;ACs7CI;EACE;ADp7CN;ACy7CI;EACE;ADv7CN;AC47CI;EACE;AD17CN;AC+7CI;EACE;EACA;AD77CN;ACk8CI;EACE;ADh8CN;ACq8CI;EACE;EACA;ADn8CN;ACy8CM;EACE;ADv8CR;AC48CM;EACE;EACA;AD18CR;AC+8CM;EACE;AD78CR;ACk9CM;EACE;EACA;ADh9CR;AC64CE;EACE,WALmB;EAMnB,YANmB;EAOnB,iBAPmB;ADn4CvB;AC84CI;EACE;AD54CN;ACi5CI;EACE;AD/4CN;ACo5CI;EACE;ADl5CN;ACu5CI;EACE;EACA;ADr5CN;AC05CI;EACE;ADx5CN;AC65CI;EACE;EACA;AD35CN;ACi6CM;EACE;AD/5CR;ACo6CM;EACE;EACA;ADl6CR;ACu6CM;EACE;ADr6CR;AC06CM;EACE;EACA;ADx6CR;ACokDE;EAjqEA;EAmqEE;EACA;ADjkDJ;AC+rDE;EAKE;EACA;ADhsDJ;ACgqDE;EACE;AD9pDJ;ACgqDE;EACE;AD9pDJ;ACgqDE;EACE;AD9pDJ;ACkqDI;EAEE;ADjqDN;AC8lDE;EACE;AD5lDJ;AC+lDE;EACE;AD7lDJ;ACgmDE;EACE;AD9lDJ;ACimDE;EACE;AD/lDJ;ACgrDI;EACE,YAxGuB;EAyGvB;AD9qDN;ACkrDE;EACE;AD/qDJ;ACorDE;EACE;ADjrDJ;ACorDE;EAEE;EACA;ADlrDJ;ACunDE;EACE;ADrnDJ;ACunDE;EACE;ADrnDJ;ACunDE;EACE;ADrnDJ;ACynDI;EAEE;ADxnDN;AC2mDE;EACE;ADzmDJ;AC2mDE;EACE;ADzmDJ;AC2mDE;EACE;ADzmDJ;AC6mDI;EAEE;AD5mDN;AC0kDE;EAXA,oCADmB;AD3jDrB;AC2kDE;EAfA,0CADmB;ADxjDrB;AC4kDE;EAnBA,0CADmB;ADrjDrB;AC/pBE;EAnBA;ADsrBF;ACnqBE;EAnBA;AD0rBF;ACvqBE;EAnBA;AD6rBF;AC1qBE;EAnBA;ADgsBF;AC7qBE;EAnBA;ADosBF;ACjrBE;EAnBA;ADusBF;ACprBE;EAnBA;AD0sBF;AC+xDE;;EAz+EA;AD+sBF;AC+xDE;;EAEE;AD5xDJ;AC+xDE;EACE;AD5xDJ;AC8xDI;EACE;AD5xDN;ACgyDE;EACE;EACA;AD7xDJ;AC+xDI;EACE;AD7xDN;ACiyDE;EACE;AD9xDJ;ACiyDE;EACE;EACA;AD9xDJ;ACkyDI;EACE;EACA;EACA;AD/xDN;ACmyDE;EACE;EACA;ADhyDJ;ACkyDI;EACE;ADhyDN;ACoyDE;EACE;EACA;ADjyDJ;ACmyDI;EACE;ADjyDN;ACoyDI;EACE;ADlyDN;ACsyDE;;EAEE;ADnyDJ;ACozDI;EACE,iBALc;AD5yDpB;ACq1DE;EAEE;EACA;ADn1DJ;AChwBE;EAnBA;ADsxBF;ACnwBE;EAnBA;ADyxBF;ACq1DE;EACE;ADl1DJ;AC25DE;EACE;ADx5DJ;AC25DE;EACE,aAdoB;AD14DxB;AC25DE;EAGE;AD15DJ;AC65DE;EACE,yBAxBoB;ADl4DxB;AC85DI;EACE;AD35DN;AC85DI;EACE;AD55DN;AC+5DI;EACE;AD75DN;ACo6DM;EACE,yBAtCW;AD33DnB;ACs6DM;EACE,qBA5CW;ADx3DnB;ACw6DI;EACE;ADt6DN;AC46DE;EACE;ADz6DJ;AC86DI;;EACE;AD16DN;AC66DI;;EACE;AD16DN;AC66DI;;EACE;AD16DN;ACogEE;EA3CA,yBAwCwB;EAvCxB,0BAwCwB;AD7/D1B;ACu9DE;EACE,0BAqCsB;EApCtB;ADr9DJ;AC+/DM;EA11FJ;AD81BF;ACggEM;EACE;AD9/DR;ACkgEI;EACE;ADhgEN;ACmgEI;EACE;ADjgEN;ACsgEI;EAlEF,yBAwBwE;EAvBxE,0BAuBiC;ADv9DnC;ACk8DE;EACE,0BAoB+B;EAnB/B;ADh8DJ;ACq9DE;EATA,oCADmB;ADx8DrB;AC8/DI;EAtEF,yBAwBwE;EAvBxE,YAuBiC;AD58DnC;ACu7DE;EACE,YAoB+B;EAnB/B;ADr7DJ;AC08DE;EATA,0CADmB;AD77DrB;ACu/DI;EA1EF,yBAwBwE;EAvBxE,YAuBiC;ADj8DnC;AC46DE;EACE,YAoB+B;EAnB/B;AD16DJ;AC+7DE;EATA,0CADmB;ADl7DrB;ACwkEE;EACE;ADrkEJ;ACwkEE;;;;EAIE;ADrkEJ;ACwkEE;;EAEE;ADrkEJ;ACwkEE;EACE;ADrkEJ;ACwkEE;EACE;ADrkEJ;AC+qEE;EACE;AD5qEJ;ACirEE;;;EAGE;AD9qEJ;ACirEE;EACE;AD9qEJ;ACirEE;EACE;AD9qEJ;ACirEE;EACE;AD9qEJ;ACirEE;;EAEE;EACA;AD9qEJ;ACwoEE;EA2CI,0BAlCa;AD7oEnB;ACmrEE;EACE,0BAvCe;ADzoEnB;ACmrEE;EAOI;ADtrEN;AC4nEE;EAqEI;AD7rEN;ACwnEE;EA8EM;ADlsER;ACmxEE;EACE,kCAtMA;AD1kEJ;ACmxEE;;EAEE,kCAViB;ADtwErB;ACmxEE;;EAEE;ADhxEJ;ACmxEE;;EAEE;ADhxEJ;ACmxEE;;EAEE,mBAxBc;ADxvElB;ACmxEE;;EAEE,mBA5BuB;ADpvE3B;ACmjEE;EACE;EACA;ADhjEJ;ACmjEE;EAII;ADnjEN;AC4jEE;EACE;ADzjEJ;AC0kEE;;;EARM;AD5jER;ACgqEE;EAjqGA;EAmqGE;EACA;AD7pEJ;AC6tEE;EACE,iCAtMA;ADrhEJ;AC8tEE;;EAEE,kCAViB;ADltErB;AC+tEE;;EAEE;AD7tEJ;ACguEE;;EAEE;AD9tEJ;ACiuEE;;EAEE,mBAxBc;ADvsElB;ACkuEE;;EAEE,mBA5BuB;ADpsE3B;ACmgEE;EACE;EACA;ADjgEJ;ACogEE;EAII;ADrgEN;AC8gEE;EACE;AD5gEJ;AC6hEE;;;EARM;ADhhER;ACurEE;EACE,kCAtMA;AD/+DJ;ACwrEE;;EAEE,kCAViB;AD5qErB;ACyrEE;;EAEE;ADvrEJ;AC0rEE;;EAEE;ADxrEJ;AC2rEE;;EAEE,mBAxBc;ADjqElB;AC4rEE;;EAEE,mBA5BuB;AD9pE3B;AC69DE;EACE;EACA;AD39DJ;AC89DE;EAII;AD/9DN;ACw+DE;EACE;ADt+DJ;ACu/DE;;;EARM;AD1+DR;AC4lEE;EA/qGA;ADulCF;AC4lEE;EACE;ADzlEJ;AC2lEI;EACE;ADzlEN;AC4lEI;EACE;AD1lEN;AC8lEE;EACE;AD3lEJ;AC8rEE;EAnyGA;EAqyGE;EACA;AD3rEJ;AC4zDE;EACE;ADzzDJ;AC4zDE;EACE;ADzzDJ;AC8vEE;EAEE;EACA;AD5vEJ;ACrmCE;EAnBA;AD2nCF;AC4vEE;EACE;ADzvEJ;ACgwEM;EACE;AD7vER;ACowEE;EACE;IAEE;EDlwEJ;AACF;ACqwEE;EACE;ADnwEJ;ACswEE;;EAEE;ADnwEJ;ACswEE;EACE;ADnwEJ;ACqwEI;;EAEE;ADnwEN;AC+xEI;EACE,YALe;ADvxErB;AC8xEM;EACE,YAVY;ADlxEpB;ACi1JE;EACE,yBAXY;ADn0JhB;ACi1JE;EACE,yBAfY;AD/zJhB;ACi1JE;EACE,cAlBoB;AD5zJxB;ACg1JI;EACE,cAhBqB;AD9zJ3B;ACi1JI;EACE,cAnBmB;AD5zJzB;ACm1JE;EACE,cA7BqB;ADnzJzB;ACm1JE;EACE,qCA9BqB;ADlzJzB;ACo1JI;EACE,yBAhCsB;ADjzJ5B;ACm1JM;EACE,yBArCmB;AD5yJ3B;ACo1JM;EACE,yBAxCiB;AD1yJzB;ACw1JI;EACE,cA9CsB;ADvyJ5B;ACw1JI;EACE,cApDqB;ADlyJ3B;ACy1JI;EACE,cAvDmB;ADhyJzB;AC+1JI;EACE,cAhEmB;AD5xJzB;AC81JM;;EAEE,cApEiB;ADxxJzB;ACg2JI;;EAEE,yBA1EmB;ADpxJzB;ACk2JE;EACE,cA/EqB;ADhxJzB;AC23II;EACE,0BALU;ADn3IhB;AC23II;EACE,0BATU;ADh3IhB;AC43II;EACE,qCAZc;AD92IpB;AC63II;EA5/DF;EACA;EACA;AD93EF;AC6sJI;EACE,qCAJc;ADtsJpB;AC6sJI;EAr1EF;EACA;EACA;ADr3EF;ACwuII;EACE,qCAPc;AD9tIpB;ACwuII;EACE,qCAVuB;AD5tI7B;ACyuII;EACE,qCAbc;AD1tIpB;AC2uIM;EACE,0BAjBiB;ADxtIzB;AC4uIM;EACE;AD1uIR;ACiiJI;EACE,0BATY;ADrhJlB;ACiiJI;EACE,0BAZkB;ADnhJxB;ACmiJM;EACE,cAhBkB;ADjhJ1B;ACoiJM;EACE,cAnBiB;AD/gJzB;ACqiJM;EACE,cAtBe;AD7gJvB;ACyiJM;EACE,cA7Be;AD1gJvB;AC4iJM;EACE,0BAxCiB;ADlgJzB;AC6iJM;EACE,0BAtCmB;ADrgJ3B;AC2xEI;EACE;ADxxEN;AC2xEI;EACE;ADzxEN;AC4xEI;EACE;AD1xEN;ACu4EE;EACE;ADp4EJ;ACu4EE;;EAEE;ADp4EJ;ACu4EE;EACE;ADp4EJ;AC20EE;EA4DI;ADp4EN;ACw0EE;EA4DI;ADp4EN;ACw0EE;EA4DI;ADp4EN;AC40EE;EAwDI;ADj4EN;AC60EE;EAoDI;AD93EN;AC80EE;EAgDI;AD33EN;AC84EE;EACE;AD34EJ;AC84EE;;EAEE;AD34EJ;AC84EE;EACE;AD34EJ;ACi8EI;EACE;AD97EN;ACi8EI;EACE;AD/7EN;ACk8EI;EACE;ADh8EN;ACo8EE;EACE;ADj8EJ;ACu8EI;;;;;EACE;ADh8EN;ACq8EI;EACE;ADl8EN;AC2hFE;EAEE;ADzhFJ;AC11CE;EAnBA;ADg3CF;ACyhFE;EACE;EACA;ADthFJ;ACyhFM;;EAGE;ADxhFR;AC6hFE;;EAEE;AD1hFJ;ACiiFI;;;;EACE;AD3hFN;AC0lFE;EACE;ADvlFJ;AC0lFE;;EAEE;ADvlFJ;AC0lFE;;EAEE;EACA;ADvlFJ;AC0lFE;;EAEE;ADvlFJ;AC2lFI;;;;EAIE;ADxlFN;AC6mFI;EACE,gBAJK;ADtmFX;AC4oFE;EACE;ADzoFJ;AC4oFE;EACE;ADzoFJ;AC4oFE;EACE;ADzoFJ;AC6oFI;EACE;AD1oFN;AC6oFI;EACE;AD3oFN;AC8oFI;EACE;AD5oFN;ACipFI;EACE;AD9oFN;ACipFI;EACE;AD/oFN;ACkpFI;EACE;ADhpFN;ACwrFI;EACE;ADrrFN;ACwrFI;EACE;ADtrFN;ACyrFI;EACE;ADvrFN;AC6uFE;EACE;AD1uFJ;ACqtFE;EACE;ADltFJ;ACqtFE;;EAIE;ADrtFJ;AC6sFE;EACE;AD3sFJ;AC8sFE;;EAIE;AD9sFJ;ACssFE;EACE;ADpsFJ;ACusFE;;EAIE;ADvsFJ;ACwuFM;;EAEE;ADtuFR;ACyuFM;;EAEE;ADvuFR;AC0uFM;EACE;ADxuFR;AC8uFI;EACE;AD5uFN;AC6xFE;EACE;AD1xFJ;AC6xFE;EACE;AD1xFJ;AC6xFE;EACE;AD1xFJ;AC6xFE;EACE;AD1xFJ;AC6xFE;EACE;AD1xFJ;ACv/CE;EAnBA;AD6gDF;AC0xFI;EACE;ADxxFN;AC8xFM;EACE;AD3xFR;AC8xFM;EACE;AD5xFR;AC+xFM;EACE;AD7xFR;ACiyFI;EACE;AD/xFN;ACkyFI;EACE;ADhyFN;AC01FE;EACE,yBALmC;EAMnC;ADv1FJ;AC01FE;EACE,uBAXwB;EAYxB;ADv1FJ;ACy1FI;EACE,uBAb2B;AD10FjC;AC01FI;EAv4IF;ADgjDF;AC81FE;EACE,2CAvBmB;ADp0FvB;AC61FI;EACE,0CA1BiB;EA2BjB;AD31FN;AC+1FE;EACE,0CAhCmB;EAiCnB;AD51FJ;AC81FI;EACE;EACA,2CArCiB;ADvzFvB;ACg2FE;EAQI;ADp2FN;AC84FI;EACE;AD34FN;AC84FI;EAGE;AD94FN;ACi5FI;EAGE;ADj5FN;ACo4FI;EACE;ADl4FN;ACq4FI;EAGE;ADr4FN;ACw4FI;EAGE;ADx4FN;AC23FI;EACE;ADz3FN;AC43FI;EAGE;AD53FN;AC+3FI;EAGE;AD/3FN;ACo6FI;EAGE,uBAhBqB;ADp5F3B;ACw6FE;EA5gJA;EA8gJE;ADr6FJ;ACw6FE;EACE,qCA3BoB;AD14FxB;ACo/FE;EACE,qCAVqB;ADv+FzB;ACw8FE;;;EAGE;ADr8FJ;ACw8FE;EACE;ADt8FJ;ACy8FE;EAGE,wCADQ;ADx8FZ;AC47FE;;;EAGE;ADz7FJ;AC47FE;EACE;AD17FJ;AC67FE;EAGE,uCADQ;AD57FZ;ACg7FE;;;EAGE;AD76FJ;ACg7FE;EACE;AD96FJ;ACi7FE;EAGE,wCADQ;ADh7FZ;AC89FI;;EACE,qCA3B2B;AD/7FjC;AC+9FI;;;EAGE,qCAlCwB;AD17F9B;ACg+FM;EACE,qCAvCsB;ADv7F9B;ACo+FI;EAGE,qCADQ;ADl+Fd;AC6+FM;;EAEE,qCA3DqC;ADh7F7C;AC++FQ;;EAEE,qCAhEyC;AD76FnD;ACm/FM;EACE,iCA3EiB;EA4EjB;ADj/FR;ACs/FQ;EACE,iCAjFuB;ADn6FjC;ACu/FQ;EACE,iCApFoB;ADj6F9B;AC2/FE;EACE,gCAvFsB;ADj6F1B;ACigGE;EACE;EAIA;ADjgGJ;AC2gGE;EACE;ADxgGJ;ACgmGI;EAGE;AD/lGN;ACqmGI;EACE;IACE;EDnmGN;AACF;ACsmGI;;EAIE;ADtmGN;ACymGI;EAGE;EACA;ADzmGN;AC4mGI;;;EAGE;EACA;AD1mGN;AC8mGM;EACE;AD5mGR;AC+mGM;;;EAGE;EACA;AD7mGR;ACknGM;EACE;ADhnGR;ACmnGM;;;EAGE;EACA;ADjnGR;ACqnGI;EACE;EACA;ADnnGN;ACsnGI;EACE;ADpnGN;ACunGI;EACE;ADrnGN;ACynGE;EACE;ADtnGJ;ACynGE;EACE;ADtnGJ;ACynGE;;;EAGE;ADtnGJ;AC6pGI;EACE,YALK;ADrpGX;AC6pGI;;EAEE;AD1pGN;AC+pGI;EACE;EACA;AD5pGN;ACiqGM;EACE;AD9pGR;ACmqGI;EACE;ADhqGN;ACgsGE;EAYI;ADxsGN;ACqvGE;;EAEE,4CAJc;AD9uGlB;ACsvGI;;EAEE,yCAVY;EAWZ;ADnvGN;ACuvGE;EACE;ADpvGJ;ACsvGI;EACE;ADpvGN;ACwvGE;EACE;ADrvGJ;ACwvGE;EACE;ADrvGJ;ACyvGE;;EAEE;EACA;ADtvGJ;ACkyGM;;;;;EACE;AD3xGR;ACgxGE;EACE;AD9wGJ;AC6wGE;EACE;AD3wGJ;ACoxGM;;;;;EACE;AD9wGR;ACmwGE;EACE;ADjwGJ;ACgwGE;EACE;AD9vGJ;ACuwGM;;;;;EACE;ADjwGR;ACsvGE;EACE;ADpvGJ;ACmvGE;EACE;ADjvGJ;AC0vGM;;;;;EACE;ADpvGR;AC4vGE;EACE;AD1vGJ;AC8vGE;EACE;AD5vGJ;AC8vGI;EACE;AD5vGN;ACiwGE;EACE;AD/vGJ;ACkwGE;EACE;ADhwGJ;ACqwGE;EACE;ADnwGJ;ACiuGM;;;;;EACE;AD3tGR;ACmuGE;EACE;ADjuGJ;ACquGE;EACE;ADnuGJ;ACquGI;EACE;ADnuGN;ACwuGE;EACE;ADtuGJ;ACyuGE;EACE;ADvuGJ;AC4uGE;EACE;AD1uGJ;ACwsGM;;;;;EACE;ADlsGR;AC0sGE;EACE;ADxsGJ;AC4sGE;EACE;AD1sGJ;AC4sGI;EACE;AD1sGN;AC+sGE;EACE;AD7sGJ;ACgtGE;EACE;AD9sGJ;ACmtGE;EACE;ADjtGJ;ACu0GE;EACE;EACA;ADp0GJ;ACs0GI;EApCF;EACA;AD/xGF;ACs0GI;EAxCF;EACA;AD3xGF;ACs0GI;EA5CF;EACA;ADvxGF;AC2xGE;;;EAGE;ADzxGJ;AC4xGE;;;;;EAKE;AD1xGJ;AC6xGE;EACE;AD3xGJ;AC8vGE;EACE,gBA4Ee;ADv0GnB;AC6vGE;EACE,YAyEe;ADn0GnB;AC+0GI;EAzFF;IACE,gBA8Ec;EDh0GhB;;ECovGA;IACE,YA2Ec;ED5zGhB;AACF;ACg3GE;EACE;AD92GJ;AC6wIE;EACE;AD1wIJ;AC6wIE;;EAEE;AD1wIJ;ACgyII;EACE,gBAJK;ADzxIX;ACs5GE;EAGE;EACA;EAh5KF;AD4/DF;ACy5GE;EACE;ADt5GJ;AKv9EE;EACE;AL09EJ;AM3/EE;EAEI;EACA;AN6/EN;AOjgFE;EAEI;EACA;EACA;EAGF;APigFJ;AO//EE;EAEI;EACA;EACA;APigFN;AO9/EE;EAEI;EACA;EACA;APggFN;AQnhFE;EAEI;EACA;EACA;ARqhFN;AQlhFE;EAEI;EACA;EACA;EAGF;ARkhFJ;AS9hFE;EAEI;EACA;EACA;ATgiFN;AS7hFE;EAEI;EACA;EACA;AT+hFN;AU5iFE;EAEI;EACA;AV8iFN;AWjjFE;EAEI;EACA;EACA;EAGF;AXijFJ;AW/iFE;EAEI;EACA;AXijFN;AY7jFE;EAEI;EACA;AZ+jFN;AajkFE;EAEI;EACA;EACA;AbmkFN;AahkFE;EAEI;EACA;EAGF;AbgkFJ;Ac5kFI;EAEI;EACA;Ad8kFR;Ac3kFI;EAEI;EACA;EACA;EAGF;Ad0kFN;AcxkFI;EAEI;EACA;EACA;EAGF;AdukFN;Ae/lFI;EACE;EACA;AfkmFN;AgB/lFI;;EACE;AhBmmFN;AgBlmFM;;EACE;AhBqmFR;AgBhmFI;EACE;AhBmmFN;Ac7kFE;EACE;AdglFJ;Ac7kFE;EACE;AdglFJ;Ac/kFI;EACE;EACA;AdilFN;AcvkFI;;;;;;EbicF;Ea9bI;Ad8kFN;AcnkFM;;;;;;;;;;;EAEE;Ad+kFR;AczkFI;;EACE;EACA;EACA;Ad6kFN;Ac1kFE;EbqaA;ADyqEF;Ac3kFE;EACE;EACA;EbgaF;AD+qEF;Ac7kFI;EACE;Ad+kFN;Ac9kFM;;EAEE;AdglFR;Ac7kFI;EACE;Ad+kFN;Ac9kFM;;EAEE;AdglFR;Ac7kFI;EACE;Ad+kFN;Ac9kFM;;EAEE;AdglFR;AanqFI;;;EAGE,YI1BI;AjBgsFV;AanqFI;EACE;AbqqFN;AanqFI;EACE;AbqqFN;Aa/pFQ;EACE;AbiqFV;Aa5pFM;EACE;Ab8pFR;Aa5pFM;EAEE;Ab6pFR;Aa1pFQ;EACE;Ab4pFV;Aa1pFQ;EACE;Ab4pFV;AazpFU;EAEE;Ab0pFZ;AatpFU;EAEE;AbupFZ;AanpFM;EACE;AbqpFR;AalpFI;EACE;AbopFN;AanpFM;EACE;AbqpFR;AanpFM;EACE;AbqpFR;AanpFM;EACE;AbqpFR;AalpFI;EACE;AbopFN;AalpFI;EACE;AbopFN;AajpFI;EACE;AbmpFN;AajpFI;EACE;AbmpFN;AS9tFI;EACE;ATiuFN;AS/tFQ;EACE,mBQ5BA;AjB6vFV;AS7tFQ;EACE,gBQjCA;AjBgwFV;ASztFE;ER+cA;EQ5cE;AT2tFJ;ASztFM;EAEE;AT0tFR;ASvtFQ;EACE;ATytFV;ASttFU;EAEE;ATutFZ;ASltFI;EACE;ATotFN;AShtFM;;;EAEE;ATmtFR;AShtFI;EACE;ATktFN;AMvwFI;EACE;EACA;AN0wFN;AMxwFQ;EACE;AN0wFV;AMxwFQ;EACE;AN0wFV;AMzwFU;;EAEE;AN2wFZ;AMxwFQ;EACE;AN0wFV;AMzwFU;;EAEE;AN2wFZ;AMxwFQ;EACE;AN0wFV;AMzwFU;;EAEE;AN2wFZ;AMvwFM;EACE;ANywFR;AMxwFQ;EACE;AN0wFV;AMtwFI;EACE;ANwwFN;AMrwFM;EACE;ANuwFR;AMnwFM;EACE;ANqwFR;AMjwFM;EACE;ANmwFR;AM/vFM;EACE;ANiwFR;AM/vFM;EACE;ANiwFR;AkB10FM;EACE;AlB60FR;AkBz0FE;EACE;;GAAA;AlB80FJ;AkB30FI;EACE;EjBweJ;ADs2EF;AQt0FE;EACE;ARy0FJ;AUl1FI;;;;EAIE;AVq1FN;AUj1FQ;EAEE;AVk1FV;AUh1FQ;EACE;AVk1FV;AU90FI;EACE;AVg1FN;AU70FM;EACE;AV+0FR;AU70FM;EACE;AV+0FR;AU70FM;EACE;AV+0FR;AU70FM;;EAEE;AV+0FR;AU70FM;EACE;AV+0FR;AU70FM;EACE;AV+0FR;AYp3FI;EAEE;AZs3FN;AmBv4FI;EACE;AnB04FN;AO52FE;EACE;AP+2FJ;AO72FE;EACE;APg3FJ;AO72FI;EACE;EACA;APg3FN;AO52FM;EACE;AP82FR;AOz2FI;;EAEE;AP42FN;AO12FI;;EAEE;AP42FN;AO32FM;;EACE;AP82FR;AOz2FQ;EACE;AP22FV;AOv2FI;EACE;APy2FN;AOx2FM;EACE;AP02FR;AOv2FQ;EACE;APy2FV;AOt2FM;EAEE;APu2FR;AOn2FM;EACE;APq2FR;AOn2FM;EACE;APq2FR;AOj2FM;EACE;APm2FR;AO/1FE;EACE;EACA;APk2FJ;AOh2FE;EACE;EAKA;AP+1FJ;AoBp8FE;EnBgfA;ADw9EF;AoBt8FI;EACE;EACA;ApBw8FN;AoBt8FI;EACE;EACA;ApBw8FN;AoBt8FI;EACE;EACA;ApBw8FN;AWp8FI;EACE;EACA;AXu8FN;AWr8FI;EACE;EACA;AXu8FN;AWr8FI;EACE;EACA;AXu8FN;AqBr+FI;EACE;ArBw+FN;AqBt+FI;;EAEE;ArBw+FN;AqBt+FI;;;;EAIE;ArBw+FN;AqBt+FI;EACE;ArBw+FN;AqBt+FI;EACE;EACA;ArBw+FN;AqBr+FM;;EAEE;ArBu+FR;AqBr+FM;EACE;ArBu+FR;AqBt+FQ;EACE;ArBw+FV;AqBp+FI;EACE;ArBs+FN;AqBp+FI;EACE;ArBs+FN;AqBp+FI;;EAEE;ArBs+FN;AqBp+FI;EACE;EACA;EACA;EACA;ArBs+FN;AIrhGE;EACE;AJwhGJ;AIvhGI;EACE,YH2kBe;AD88ErB;AIvhGI;EACE,YHwkBe;ADi9ErB;AIthGI;;EAEE;AJwhGN;AIrhGI;;;;EAIE;AJuhGN;AIphGI;EACE;AJshGN;AInhGI;;EAGE;AJohGN;AIjhGI;;;;EAIE;AJmhGN;AIhhGI;;;EAGE;AJkhGN;AI/gGI;EACE;AJihGN;AI9gGI;;;;;;;EAOE;AJghGN;AI7gGI;EACE;AJ+gGN;AI5gGI;;EAEE;AJ8gGN;AI3gGI;EACE;AJ6gGN;AI1gGI;EACE;AJ4gGN;AIzgGI;EACE;AJ2gGN;AIxgGI;;EAEE;AJ0gGN;AIvgGI;EACE;EACA;AJygGN;AsB9lGI;EACE;EACA;AtBimGN;AsB5lGQ;EACE;AtB8lGV;AuB1mGI;EACE;AvB6mGN;AuB3mGI;EACE;AvB6mGN;AuB3mGI;EACE;AvB6mGN;AuB3mGI;EACE;AvB6mGN;AuB3mGI;EACE;AvB6mGN;AuB3mGI;EACE;AvB6mGN;AuB3mGI;EACE;AvB6mGN;AuB3mGI;EACE;AvB6mGN;AuB3mGI;EACE;AvB6mGN;AuB3mGI;EACE;AvB6mGN;AuB3mGI;EACE;AvB6mGN;AuB3mGI;EACE;AvB6mGN;AuB3mGI;EACE;AvB6mGN;AuB3mGI;EACE;EACA;AvB6mGN;AuB3mGI;EACE;AvB6mGN;AwB3pGE;EACE;AxB8pGJ;AwB5pGE;EACE;AxB8pGJ;AwB5pGE;EACE;AxB8pGJ;AwB5pGE;EACE;AxB8pGJ;AwB5pGE;EACE;AxB8pGJ;AwB5pGE;EACE;AxB8pGJ;AwB5pGE;EACE;AxB8pGJ;AwB5pGE;EACE;AxB8pGJ;AwBprGE;EACE;AxBsrGJ;AwBprGE;EACE;AxBsrGJ;AwBprGE;EACE;AxBsrGJ;AwBprGE;EACE;AxBsrGJ;AwBprGE;EACE;AxBsrGJ;AwBprGE;EACE;AxBsrGJ;AwBprGE;EACE;AxBsrGJ;AwBprGE;EACE;AxBsrGJ;AwB5sGE;EACE;AxB8sGJ;AwB5sGE;EACE;AxB8sGJ;AwB5sGE;EACE;AxB8sGJ;AwB5sGE;EACE;AxB8sGJ;AwB5sGE;EACE;AxB8sGJ;AwB5sGE;EACE;AxB8sGJ;AwB5sGE;EACE;AxB8sGJ;AwB5sGE;EACE;AxB8sGJ;AwBpuGE;EACE;AxBsuGJ;AwBpuGE;EACE;AxBsuGJ;AwBpuGE;EACE;AxBsuGJ;AwBpuGE;EACE;AxBsuGJ;AwBpuGE;EACE;AxBsuGJ;AwBpuGE;EACE;AxBsuGJ;AwBpuGE;EACE;AxBsuGJ;AwBpuGE;EACE;AxBsuGJ;AwB5vGE;EACE;AxB8vGJ;AwB5vGE;EACE;AxB8vGJ;AwB5vGE;EACE;AxB8vGJ;AwB5vGE;EACE;AxB8vGJ;AwB5vGE;EACE;AxB8vGJ;AwB5vGE;EACE;AxB8vGJ;AwB5vGE;EACE;AxB8vGJ;AwB5vGE;EACE;AxB8vGJ;AyBpxGE;EACE;AzBuxGJ;AyBrxGE;EACE;AzBuxGJ;AyBrxGE;EACE;AzBuxGJ;AyBrxGE;EACE;AzBuxGJ;AyBrxGE;EACE;AzBuxGJ;AyBrxGE;EACE;AzBuxGJ;AyBrxGE;EACE;AzBuxGJ;AyBrxGE;EACE;AzBuxGJ;AyB7yGE;EACE;AzB+yGJ;AyB7yGE;EACE;AzB+yGJ;AyB7yGE;EACE;AzB+yGJ;AyB7yGE;EACE;AzB+yGJ;AyB7yGE;EACE;AzB+yGJ;AyB7yGE;EACE;AzB+yGJ;AyB7yGE;EACE;AzB+yGJ;AyB7yGE;EACE;AzB+yGJ;AyBr0GE;EACE;AzBu0GJ;AyBr0GE;EACE;AzBu0GJ;AyBr0GE;EACE;AzBu0GJ;AyBr0GE;EACE;AzBu0GJ;AyBr0GE;EACE;AzBu0GJ;AyBr0GE;EACE;AzBu0GJ;AyBr0GE;EACE;AzBu0GJ;AyBr0GE;EACE;AzBu0GJ;AyB71GE;EACE;AzB+1GJ;AyB71GE;EACE;AzB+1GJ;AyB71GE;EACE;AzB+1GJ;AyB71GE;EACE;AzB+1GJ;AyB71GE;EACE;AzB+1GJ;AyB71GE;EACE;AzB+1GJ;AyB71GE;EACE;AzB+1GJ;AyB71GE;EACE;AzB+1GJ;AyBr3GE;EACE;AzBu3GJ;AyBr3GE;EACE;AzBu3GJ;AyBr3GE;EACE;AzBu3GJ;AyBr3GE;EACE;AzBu3GJ;AyBr3GE;EACE;AzBu3GJ;AyBr3GE;EACE;AzBu3GJ;AyBr3GE;EACE;AzBu3GJ;AyBr3GE;EACE;AzBu3GJ;A0B74GE;EACE;A1Bg5GJ;A0B94GE;EACE;A1Bg5GJ;A0B94GE;EACE;A1Bg5GJ;A0B94GE;EACE;A1Bg5GJ;A0B94GE;EACE;A1Bg5GJ;A0B94GE;EACE;A1Bg5GJ;A0B94GE;EACE;A1Bg5GJ;A0B94GE;EACE;A1Bg5GJ;A0Bt6GE;EACE;A1Bw6GJ;A0Bt6GE;EACE;A1Bw6GJ;A0Bt6GE;EACE;A1Bw6GJ;A0Bt6GE;EACE;A1Bw6GJ;A0Bt6GE;EACE;A1Bw6GJ;A0Bt6GE;EACE;A1Bw6GJ;A0Bt6GE;EACE;A1Bw6GJ;A0Bt6GE;EACE;A1Bw6GJ;A0B97GE;EACE;A1Bg8GJ;A0B97GE;EACE;A1Bg8GJ;A0B97GE;EACE;A1Bg8GJ;A0B97GE;EACE;A1Bg8GJ;A0B97GE;EACE;A1Bg8GJ;A0B97GE;EACE;A1Bg8GJ;A0B97GE;EACE;A1Bg8GJ;A0B97GE;EACE;A1Bg8GJ;A0Bt9GE;EACE;A1Bw9GJ;A0Bt9GE;EACE;A1Bw9GJ;A0Bt9GE;EACE;A1Bw9GJ;A0Bt9GE;EACE;A1Bw9GJ;A0Bt9GE;EACE;A1Bw9GJ;A0Bt9GE;EACE;A1Bw9GJ;A0Bt9GE;EACE;A1Bw9GJ;A0Bt9GE;EACE;A1Bw9GJ;A0B9+GE;EACE;A1Bg/GJ;A0B9+GE;EACE;A1Bg/GJ;A0B9+GE;EACE;A1Bg/GJ;A0B9+GE;EACE;A1Bg/GJ;A0B9+GE;EACE;A1Bg/GJ;A0B9+GE;EACE;A1Bg/GJ;A0B9+GE;EACE;A1Bg/GJ;A0B9+GE;EACE;A1Bg/GJ;A2BngHI;EACE;EACA;A3BsgHN;A2BxgHI;EACE;EACA;A3B2gHN;A2B7gHI;EACE;EACA;A3BghHN;A2BlhHI;EACE;EACA;A3BqhHN;A2BvhHI;EACE;EACA;A3B0hHN;A2B5hHI;EACE;EACA;A3B+hHN;A2BjiHI;EACE;EACA;A3BoiHN;A2BtiHI;EACE;EACA;A3ByiHN;A2B3iHI;EACE;EACA;A3B8iHN;A2BhjHI;EACE;EACA;A3BmjHN;A2B9iHI;EACE;EACA;A3BijHN;A2BnjHI;EACE;EACA;A3BsjHN;A2BxjHI;EACE;EACA;A3B2jHN;A2B7jHI;EACE;EACA;A3BgkHN;A2BlkHI;EACE;EACA;A3BqkHN;A2BvkHI;EACE;EACA;A3B0kHN;A2B5kHI;EACE;EACA;A3B+kHN;A2BjlHI;EACE;EACA;A3BolHN;A2BtlHI;EACE;EACA;A3BylHN;A2B3lHI;EACE;EACA;A3B8lHN;A2BzlHI;EACE;EACA;A3B4lHN;A2B9lHI;EACE;EACA;A3BimHN;A2BnmHI;EACE;EACA;A3BsmHN;A2BxmHI;EACE;EACA;A3B2mHN;A2B7mHI;EACE;EACA;A3BgnHN;A2BlnHI;EACE;EACA;A3BqnHN;A2BvnHI;EACE;EACA;A3B0nHN;A2B5nHI;EACE;EACA;A3B+nHN;A2BjoHI;EACE;EACA;A3BooHN;A2BtoHI;EACE;EACA;A3ByoHN;A4BrpHM;;;;;;EACE;A5B6pHR;A4B1pHI;EACE;A5B4pHN;A4B1pHI;EACE;A5B4pHN;A4B1pHI;EACE;A5B4pHN;A4B1pHI;EACE;A5B4pHN;A4B1pHI;;;;EAIE;A5B4pHN;A4B1pHI;EACE;EACA;EACA;A5B4pHN;A4B1pHI;EACE;A5B4pHN;A4B1pHI;EACE;A5B4pHN;A4B1pHI;EACE;A5B4pHN;A4B1pHI;EACE;A5B4pHN;A4B1pHI;EACE;A5B4pHN;A4B1pHI;EACE;A5B4pHN;A4B1pHI;EACE;A5B4pHN;A4B1pHI;EACE;A5B4pHN;A4B1pHI;EACE;A5B4pHN;A4B1pHI;EACE;A5B4pHN;A4B1pHI;EACE;A5B4pHN;A4B1pHI;EACE;A5B4pHN;A4B1pHI;EACE;A5B4pHN;A4B1pHI;EACE;EACA;EACA;A5B4pHN;A4B1pHI;EACE;A5B4pHN;AGlwGE;;;CAAA;AAncE;EACE;AH4sHN;AG1rHI;EACE;AH6rHN;AG9rHI;EACE;AHisHN;AGlsHI;EACE;AHqsHN;AGtsHI;EACE;AHysHN;AG1sHI;EACE;AH6sHN;AG9sHI;EACE;AHitHN;AGltHI;EACE;AHqtHN;AGttHI;EACE;AHytHN;AG1tHI;EACE;AH6tHN;AG9tHI;EACE;AHiuHN;AGluHI;EACE;AHquHN;AGtuHI;EACE;AHyuHN;AG1uHI;EACE;AH6uHN;AG9uHI;EACE;AHivHN;AGlvHI;EACE;AHqvHN;AGtvHI;EACE;AHyvHN;AG1vHI;EACE;AH6vHN;AG9vHI;EACE;AHiwHN;AGlwHI;EACE;AHqwHN;AGtwHI;EACE;AHywHN;AG1wHI;EACE;AH6wHN;AG9wHI;EACE;AHixHN;AGlxHI;EACE;AHqxHN;AGtxHI;EACE;AHyxHN;AG1xHI;EACE;AH6xHN;AG9xHI;EACE;AHiyHN;AGlyHI;EACE;AHqyHN;AGtyHI;EACE;AHyyHN;AG1yHI;EACE;AH6yHN;AG9yHI;EACE;AHizHN;AGlzHI;EACE;AHqzHN;AGtzHI;EACE;AHyzHN;AG1zHI;EACE;AH6zHN;AG9zHI;EACE;AHi0HN;AGl0HI;EACE;AHq0HN;AGt0HI;EACE;AHy0HN;AG10HI;EACE;AH60HN;AG90HI;EACE;AHi1HN;AGl1HI;EACE;AHq1HN;AGt1HI;EACE;AHy1HN;AG11HI;EACE;AH61HN;AGr0HI;EACE;AHw0HN;AGz0HI;EACE;AH40HN;AG70HI;EACE;AHg1HN;AGj1HI;EACE;AHo1HN;AGr1HI;EACE;AHw1HN;AGz1HI;EACE;AH41HN;AG71HI;EACE;AHg2HN;AGj2HI;EACE;AHo2HN;AGr2HI;EACE;AHw2HN;AGz2HI;EACE;AH42HN;AG72HI;EACE;AHg3HN;AGj3HI;EACE;AHo3HN;AGr3HI;EACE;AHw3HN;AGz3HI;EACE;AH43HN;AG73HI;EACE;AHg4HN;AGj4HI;EACE;AHo4HN;AGr4HI;EACE;AHw4HN;AGz4HI;EACE;AH44HN;AG74HI;EACE;AHg5HN;AGj5HI;EACE;AHo5HN;AGl4HI;EACE;AHq4HN;AGn3HI;EACE;AHs3HN;AGtrHE;;EAGE;EACA;EACA;AHwrHJ;AGrrHE;;;;;EAKE;AHwrHJ;AGprHE;;;;;EAKE;AHurHJ;AGnrHE;;;;;EAKE;AHsrHJ;AGlrHE;;;;;EAKE;AHqrHJ;AGjrHE;;;;;EAKE;AHorHJ;AG3qHE;;;;;EAKE;EACA;AH8qHJ;AG1qHE;;;;;EAKE;EACA;EACA;AH6qHJ;AG1qHI;;;;;EACE;EACA;AHgrHN;AG3qHE;;;;;EAKE;EACA;AH8qHJ;AG1qHE;;;;;EAKE;EACA;AH6qHJ;AGzqHE;;;;;EAKE;EACA;AH4qHJ;AGn7HE;EACE;EACA;AHs7HJ;AG76HE;EACE;IACE;EHg7HJ;AACF;AG76HE;;EAEE;EACA;AH+6HJ;AG76HE;;EAEE;EACA;AHg7HJ;AG96HE;;EAEE;EACA;AHi7HJ;AG/6HE;;EAEE;EACA;AHk7HJ;AGh7HE;;EAEE;EACA;AHm7HJ;AGj7HE;;EAEE;EACA;AHo7HJ;AG76HI;EACE;EACA;EACA;EACA;AHg7HN;AG76HI;;EAEE;EACA;EACA;EACA;AHg7HN;AG76HI;;EAEE;EACA;EACA;EACA;AHg7HN;AGp8HI;EACE;EACA;EACA;EACA;AHu8HN;AGp8HI;;EAEE;EACA;EACA;EACA;AHu8HN;AGp8HI;;EAEE;EACA;EACA;EACA;AHu8HN;AG39HI;EACE;EACA;EACA;EACA;AH89HN;AG39HI;;EAEE;EACA;EACA;EACA;AH89HN;AG39HI;;EAEE;EACA;EACA;EACA;AH89HN;AGl/HI;EACE;EACA;EACA;EACA;AHq/HN;AGl/HI;;EAEE;EACA;EACA;EACA;AHq/HN;AGl/HI;;EAEE;EACA;EACA;EACA;AHq/HN;AGzgII;EACE;EACA;EACA;EACA;AH4gIN;AGzgII;;EAEE;EACA;EACA;EACA;AH4gIN;AGzgII;;EAEE;EACA;EACA;EACA;AH4gIN;AGhiII;EACE;EACA;EACA;EACA;AHmiIN;AGhiII;;EAEE;EACA;EACA;EACA;AHmiIN;AGhiII;;EAEE;EACA;EACA;EACA;AHmiIN;AGvjII;EACE;EACA;EACA;EACA;AH0jIN;AGvjII;;EAEE;EACA;EACA;EACA;AH0jIN;AGvjII;;EAEE;EACA;EACA;EACA;AH0jIN;AG9kII;EACE;EACA;EACA;EACA;AHilIN;AG9kII;;EAEE;EACA;EACA;EACA;AHilIN;AG9kII;;EAEE;EACA;EACA;EACA;AHilIN;AGrmII;EACE;EACA;EACA;EACA;AHwmIN;AGrmII;;EAEE;EACA;EACA;EACA;AHwmIN;AGrmII;;EAEE;EACA;EACA;EACA;AHwmIN;AG5nII;EACE;EACA;EACA;EACA;AH+nIN;AG5nII;;EAEE;EACA;EACA;EACA;AH+nIN;AG5nII;;EAEE;EACA;EACA;EACA;AH+nIN;AGnpII;EACE;EACA;EACA;EACA;AHspIN;AGnpII;;EAEE;EACA;EACA;EACA;AHspIN;AGnpII;;EAEE;EACA;EACA;EACA;AHspIN;AG1qII;EACE;EACA;EACA;EACA;AH6qIN;AG1qII;;EAEE;EACA;EACA;EACA;AH6qIN;AG1qII;;EAEE;EACA;EACA;EACA;AH6qIN;AGjsII;EACE;EACA;EACA;EACA;AHosIN;AGjsII;;EAEE;EACA;EACA;EACA;AHosIN;AGjsII;;EAEE;EACA;EACA;EACA;AHosIN;AGxtII;EACE;EACA;EACA;EACA;AH2tIN;AGxtII;;EAEE;EACA;EACA;EACA;AH2tIN;AGxtII;;EAEE;EACA;EACA;EACA;AH2tIN;AG/uII;EACE;EACA;EACA;EACA;AHkvIN;AG/uII;;EAEE;EACA;EACA;EACA;AHkvIN;AG/uII;;EAEE;EACA;EACA;EACA;AHkvIN;AGtwII;EACE;EACA;EACA;EACA;AHywIN;AGtwII;;EAEE;EACA;EACA;EACA;AHywIN;AGtwII;;EAEE;EACA;EACA;EACA;AHywIN;AG7xII;EACE;EACA;EACA;EACA;AHgyIN;AG7xII;;EAEE;EACA;EACA;EACA;AHgyIN;AG7xII;;EAEE;EACA;EACA;EACA;AHgyIN;AGpzII;EACE;EACA;EACA;EACA;AHuzIN;AGpzII;;EAEE;EACA;EACA;EACA;AHuzIN;AGpzII;;EAEE;EACA;EACA;EACA;AHuzIN;AG30II;EACE;EACA;EACA;EACA;AH80IN;AG30II;;EAEE;EACA;EACA;EACA;AH80IN;AG30II;;EAEE;EACA;EACA;EACA;AH80IN;AGl2II;EACE;EACA;EACA;EACA;AHq2IN;AGl2II;;EAEE;EACA;EACA;EACA;AHq2IN;AGl2II;;EAEE;EACA;EACA;EACA;AHq2IN;AGz3II;EACE;EACA;EACA;EACA;AH43IN;AGz3II;;EAEE;EACA;EACA;EACA;AH43IN;AGz3II;;EAEE;EACA;EACA;EACA;AH43IN;AGt3II;;;;EAEE;EACA;EACA;EACA;AH23IN;AGz3II;;;;EAEE;EACA;EACA;EACA;AH63IN;AG33II;;;;EAEE;EACA;EACA;EACA;AH+3IN;AG73II;;;;EAEE;EACA;EACA;EACA;AHi4IN;AG53II;;;;EAEE;EACA;EACA;EACA;AHi4IN;AG/3II;;;;EAEE;EACA;EACA;EACA;AHm4IN;AGj4II;;;;EAEE;EACA;EACA;EACA;AHq4IN;AGn4II;;;;EAEE;EACA;EACA;EACA;AHu4IN;AGziJE;;;EAGE;EAKA;AH4iJJ;AG1iJE;EACE;AH6iJJ;AG3iJE;EACE;AH8iJJ;AGrxIE;;EAEE;AHwxIJ;AGtxIE;;;;;EAKE;AHyxIJ;AGvxIE;;EAEE;AH0xIJ;AGvxIE;;EAEE;AH0xIJ;AGvxIE;;;;;EAKE;AH0xIJ;AGvxIE;;EAEE;AH0xIJ;AGvxIE;EACE;AH0xIJ;AGvxIE;EACE;AH0xIJ;AGvxIE;EACE;EACA;EACA;EACA;AH0xIJ;AGpwIE;;;;;;;;;;;CAAA;AAaA;EAII;;IACE;EHowIN;;EG9sJE;IACE;EHitJJ;;EGltJE;IACE;EHqtJJ;;EGttJE;IACE;EHytJJ;;EG1tJE;IACE;EH6tJJ;;EG9tJE;IACE;EHiuJJ;;EGluJE;IACE;EHquJJ;;EGtuJE;IACE;EHyuJJ;;EG1uJE;IACE;EH6uJJ;;EG9uJE;IACE;EHivJJ;;EGlvJE;IACE;EHqvJJ;;EGtvJE;IACE;EHyvJJ;;EG1vJE;IACE;EH6vJJ;;EG9vJE;IACE;EHiwJJ;;EGlwJE;IACE;EHqwJJ;;EGtwJE;IACE;EHywJJ;;EG1wJE;IACE;EH6wJJ;;EG9wJE;IACE;EHixJJ;;EGlxJE;IACE;EHqxJJ;;EGtxJE;IACE;EHyxJJ;;EG1xJE;IACE;EH6xJJ;;EG9xJE;IACE;EHiyJJ;;EGlyJE;IACE;EHqyJJ;;EGtyJE;IACE;EHyyJJ;;EG1yJE;IACE;EH6yJJ;;EG9yJE;IACE;EHizJJ;;EGlzJE;IACE;EHqzJJ;;EGtzJE;IACE;EHyzJJ;;EG1zJE;IACE;EH6zJJ;;EG9zJE;IACE;EHi0JJ;;EGl0JE;IACE;EHq0JJ;;EGt0JE;IACE;EHy0JJ;;EG10JE;IACE;EH60JJ;;EG90JE;IACE;EHi1JJ;;EGl1JE;IACE;EHq1JJ;;EGt1JE;IACE;EHy1JJ;;EG11JE;IACE;EH61JJ;;EG91JE;IACE;EHi2JJ;;EGl2JE;IACE;EHq2JJ;;EGt2JE;IACE;EHy2JJ;;EG12JE;IACE;EH62JJ;;EG92JE;IACE;EHi3JJ;;EGz1JE;IACE;EH41JJ;;EG71JE;IACE;EHg2JJ;;EGj2JE;IACE;EHo2JJ;;EGr2JE;IACE;EHw2JJ;;EGz2JE;IACE;EH42JJ;;EG72JE;IACE;EHg3JJ;;EGj3JE;IACE;EHo3JJ;;EGr3JE;IACE;EHw3JJ;;EGz3JE;IACE;EH43JJ;;EG73JE;IACE;EHg4JJ;;EGj4JE;IACE;EHo4JJ;;EGr4JE;IACE;EHw4JJ;;EGz4JE;IACE;EH44JJ;;EG74JE;IACE;EHg5JJ;;EGj5JE;IACE;EHo5JJ;;EGr5JE;IACE;EHw5JJ;;EGz5JE;IACE;EH45JJ;;EG75JE;IACE;EHg6JJ;;EGj6JE;IACE;EHo6JJ;;EGr6JE;IACE;EHw6JJ;;EGt5JE;IACE;EHy5JJ;;EGv4JE;IACE;EH04JJ;;EG1sJA;;IAGE;IACA;IACA;EH4sJF;;EGzsJA;;;;;IAKE;EH4sJF;;EGxsJA;;;;;IAKE;EH2sJF;;EGvsJA;;;;;IAKE;EH0sJF;;EGtsJA;;;;;IAKE;EHysJF;;EGrsJA;;;;;IAKE;EHwsJF;;EG/rJA;;;;;IAKE;IACA;EHksJF;;EG9rJA;;;;;IAKE;IACA;IACA;EHisJF;EG9rJE;;;;;IACE;IACA;EHosJJ;;EG/rJA;;;;;IAKE;IACA;EHksJF;;EG9rJA;;;;;IAKE;IACA;EHisJF;;EG7rJA;;;;;IAKE;IACA;EHgsJF;;EGv8JA;IACE;IACA;EH08JF;AACF;AGl8JE;EACE;IACE;EHo8JJ;AACF;AGrnJE;EA5UA;;IAEE;IACA;EHo8JF;AACF;AG5nJE;EAvUA;;IAEE;IACA;EHs8JF;AACF;AGnoJE;EAlUA;;IAEE;IACA;EHw8JF;AACF;AG1oJE;EA7TA;;IAEE;IACA;EH08JF;AACF;AGjpJE;EAxTA;;IAEE;IACA;EH48JF;AACF;AGxpJE;EAnTA;;IAEE;IACA;EH88JF;AACF;AG/pJE;EAzSE;IACE;IACA;IACA;IACA;EH28JJ;AACF;AGvqJE;EAlSE;;IAEE;IACA;IACA;IACA;EH48JJ;AACF;AGhrJE;EA1RE;;IAEE;IACA;IACA;IACA;EH68JJ;AACF;AGzrJE;EAzSE;IACE;IACA;IACA;IACA;EHq+JJ;AACF;AGjsJE;EAlSE;;IAEE;IACA;IACA;IACA;EHs+JJ;AACF;AG1sJE;EA1RE;;IAEE;IACA;IACA;IACA;EHu+JJ;AACF;AGntJE;EAzSE;IACE;IACA;IACA;IACA;EH+/JJ;AACF;AG3tJE;EAlSE;;IAEE;IACA;IACA;IACA;EHggKJ;AACF;AGpuJE;EA1RE;;IAEE;IACA;IACA;IACA;EHigKJ;AACF;AG7uJE;EAzSE;IACE;IACA;IACA;IACA;EHyhKJ;AACF;AGrvJE;EAlSE;;IAEE;IACA;IACA;IACA;EH0hKJ;AACF;AG9vJE;EA1RE;;IAEE;IACA;IACA;IACA;EH2hKJ;AACF;AGvwJE;EAzSE;IACE;IACA;IACA;IACA;EHmjKJ;AACF;AG/wJE;EAlSE;;IAEE;IACA;IACA;IACA;EHojKJ;AACF;AGxxJE;EA1RE;;IAEE;IACA;IACA;IACA;EHqjKJ;AACF;AGjyJE;EAzSE;IACE;IACA;IACA;IACA;EH6kKJ;AACF;AGzyJE;EAlSE;;IAEE;IACA;IACA;IACA;EH8kKJ;AACF;AGlzJE;EA1RE;;IAEE;IACA;IACA;IACA;EH+kKJ;AACF;AG3zJE;EAzSE;IACE;IACA;IACA;IACA;EHumKJ;AACF;AGn0JE;EAlSE;;IAEE;IACA;IACA;IACA;EHwmKJ;AACF;AG50JE;EA1RE;;IAEE;IACA;IACA;IACA;EHymKJ;AACF;AGr1JE;EAzSE;IACE;IACA;IACA;IACA;EHioKJ;AACF;AG71JE;EAlSE;;IAEE;IACA;IACA;IACA;EHkoKJ;AACF;AGt2JE;EA1RE;;IAEE;IACA;IACA;IACA;EHmoKJ;AACF;AG/2JE;EAzSE;IACE;IACA;IACA;IACA;EH2pKJ;AACF;AGv3JE;EAlSE;;IAEE;IACA;IACA;IACA;EH4pKJ;AACF;AGh4JE;EA1RE;;IAEE;IACA;IACA;IACA;EH6pKJ;AACF;AGz4JE;EAzSE;IACE;IACA;IACA;IACA;EHqrKJ;AACF;AGj5JE;EAlSE;;IAEE;IACA;IACA;IACA;EHsrKJ;AACF;AG15JE;EA1RE;;IAEE;IACA;IACA;IACA;EHurKJ;AACF;AGn6JE;EAzSE;IACE;IACA;IACA;IACA;EH+sKJ;AACF;AG36JE;EAlSE;;IAEE;IACA;IACA;IACA;EHgtKJ;AACF;AGp7JE;EA1RE;;IAEE;IACA;IACA;IACA;EHitKJ;AACF;AG77JE;EAzSE;IACE;IACA;IACA;IACA;EHyuKJ;AACF;AGr8JE;EAlSE;;IAEE;IACA;IACA;IACA;EH0uKJ;AACF;AG98JE;EA1RE;;IAEE;IACA;IACA;IACA;EH2uKJ;AACF;AGv9JE;EAzSE;IACE;IACA;IACA;IACA;EHmwKJ;AACF;AG/9JE;EAlSE;;IAEE;IACA;IACA;IACA;EHowKJ;AACF;AGx+JE;EA1RE;;IAEE;IACA;IACA;IACA;EHqwKJ;AACF;AGj/JE;EAzSE;IACE;IACA;IACA;IACA;EH6xKJ;AACF;AGz/JE;EAlSE;;IAEE;IACA;IACA;IACA;EH8xKJ;AACF;AGlgKE;EA1RE;;IAEE;IACA;IACA;IACA;EH+xKJ;AACF;AG3gKE;EAzSE;IACE;IACA;IACA;IACA;EHuzKJ;AACF;AGnhKE;EAlSE;;IAEE;IACA;IACA;IACA;EHwzKJ;AACF;AG5hKE;EA1RE;;IAEE;IACA;IACA;IACA;EHyzKJ;AACF;AGriKE;EAzSE;IACE;IACA;IACA;IACA;EHi1KJ;AACF;AG7iKE;EAlSE;;IAEE;IACA;IACA;IACA;EHk1KJ;AACF;AGtjKE;EA1RE;;IAEE;IACA;IACA;IACA;EHm1KJ;AACF;AG/jKE;EAzSE;IACE;IACA;IACA;IACA;EH22KJ;AACF;AGvkKE;EAlSE;;IAEE;IACA;IACA;IACA;EH42KJ;AACF;AGhlKE;EA1RE;;IAEE;IACA;IACA;IACA;EH62KJ;AACF;AGzlKE;EAzSE;IACE;IACA;IACA;IACA;EHq4KJ;AACF;AGjmKE;EAlSE;;IAEE;IACA;IACA;IACA;EHs4KJ;AACF;AG1mKE;EA1RE;;IAEE;IACA;IACA;IACA;EHu4KJ;AACF;AGnnKE;EAzSE;IACE;IACA;IACA;IACA;EH+5KJ;AACF;AG3nKE;EAlSE;;IAEE;IACA;IACA;IACA;EHg6KJ;AACF;AGpoKE;EA1RE;;IAEE;IACA;IACA;IACA;EHi6KJ;AACF;AG7oKE;EAzSE;IACE;IACA;IACA;IACA;EHy7KJ;AACF;AGrpKE;EAlSE;;IAEE;IACA;IACA;IACA;EH07KJ;AACF;AG9pKE;EA1RE;;IAEE;IACA;IACA;IACA;EH27KJ;AACF;AGvqKE;EAzSE;IACE;IACA;IACA;IACA;EHm9KJ;AACF;AG/qKE;EAlSE;;IAEE;IACA;IACA;IACA;EHo9KJ;AACF;AGxrKE;EA1RE;;IAEE;IACA;IACA;IACA;EHq9KJ;AACF;AGjsKE;EA/QE;;;;IAEE;IACA;IACA;IACA;EHq9KJ;EGn9KE;;;;IAEE;IACA;IACA;IACA;EHu9KJ;EGr9KE;;;;IAEE;IACA;IACA;IACA;EHy9KJ;EGv9KE;;;;IAEE;IACA;IACA;IACA;EH29KJ;AACF;AGvuKE;EAhPE;;;;IAEE;IACA;IACA;IACA;EH49KJ;EG19KE;;;;IAEE;IACA;IACA;IACA;EH89KJ;EG59KE;;;;IAEE;IACA;IACA;IACA;EHg+KJ;EG99KE;;;;IAEE;IACA;IACA;IACA;EHk+KJ;AACF;AG7wKE;EAxXA;;;IAGE;IAKA;EHwoLF;AACF;AGzxKE;EA9WA;IACE;EH0oLF;AACF;AG9xKE;EA3WA;IACE;EH4oLF;AACF;AGxxKE;EAhdE;IACE;EH2uLJ;;EG5uLE;IACE;EH+uLJ;;EGhvLE;IACE;EHmvLJ;;EGpvLE;IACE;EHuvLJ;;EGxvLE;IACE;EH2vLJ;;EG5vLE;IACE;EH+vLJ;;EGhwLE;IACE;EHmwLJ;;EGpwLE;IACE;EHuwLJ;;EGxwLE;IACE;EH2wLJ;;EG5wLE;IACE;EH+wLJ;;EGhxLE;IACE;EHmxLJ;;EGpxLE;IACE;EHuxLJ;;EGxxLE;IACE;EH2xLJ;;EG5xLE;IACE;EH+xLJ;;EGhyLE;IACE;EHmyLJ;;EGpyLE;IACE;EHuyLJ;;EGxyLE;IACE;EH2yLJ;;EG5yLE;IACE;EH+yLJ;;EGhzLE;IACE;EHmzLJ;;EGpzLE;IACE;EHuzLJ;;EGxzLE;IACE;EH2zLJ;;EG5zLE;IACE;EH+zLJ;;EGh0LE;IACE;EHm0LJ;;EGp0LE;IACE;EHu0LJ;;EGx0LE;IACE;EH20LJ;;EG50LE;IACE;EH+0LJ;;EGh1LE;IACE;EHm1LJ;;EGp1LE;IACE;EHu1LJ;;EGx1LE;IACE;EH21LJ;;EG51LE;IACE;EH+1LJ;;EGh2LE;IACE;EHm2LJ;;EGp2LE;IACE;EHu2LJ;;EGx2LE;IACE;EH22LJ;;EG52LE;IACE;EH+2LJ;;EGh3LE;IACE;EHm3LJ;;EGp3LE;IACE;EHu3LJ;;EGx3LE;IACE;EH23LJ;;EG53LE;IACE;EH+3LJ;;EGh4LE;IACE;EHm4LJ;;EGp4LE;IACE;EHu4LJ;;EGx4LE;IACE;EH24LJ;;EGn3LE;IACE;EHs3LJ;;EGv3LE;IACE;EH03LJ;;EG33LE;IACE;EH83LJ;;EG/3LE;IACE;EHk4LJ;;EGn4LE;IACE;EHs4LJ;;EGv4LE;IACE;EH04LJ;;EG34LE;IACE;EH84LJ;;EG/4LE;IACE;EHk5LJ;;EGn5LE;IACE;EHs5LJ;;EGv5LE;IACE;EH05LJ;;EG35LE;IACE;EH85LJ;;EG/5LE;IACE;EHk6LJ;;EGn6LE;IACE;EHs6LJ;;EGv6LE;IACE;EH06LJ;;EG36LE;IACE;EH86LJ;;EG/6LE;IACE;EHk7LJ;;EGn7LE;IACE;EHs7LJ;;EGv7LE;IACE;EH07LJ;;EG37LE;IACE;EH87LJ;;EG/7LE;IACE;EHk8LJ;;EGh7LE;IACE;EHm7LJ;;EGj6LE;IACE;EHo6LJ;;EGpuLA;;IAGE;IACA;IACA;EHsuLF;;EGnuLA;;;;;IAKE;EHsuLF;;EGluLA;;;;;IAKE;EHquLF;;EGjuLA;;;;;IAKE;EHouLF;;EGhuLA;;;;;IAKE;EHmuLF;;EG/tLA;;;;;IAKE;EHkuLF;;EGztLA;;;;;IAKE;IACA;EH4tLF;;EGxtLA;;;;;IAKE;IACA;IACA;EH2tLF;EGxtLE;;;;;IACE;IACA;EH8tLJ;;EGztLA;;;;;IAKE;IACA;EH4tLF;;EGxtLA;;;;;IAKE;IACA;EH2tLF;;EGvtLA;;;;;IAKE;IACA;EH0tLF;;EGj+LA;IACE;IACA;EHo+LF;AACF;AG59LE;EACE;IACE;EH89LJ;AACF;AGpoLE;EAvVA;;IAEE;IACA;EH89LF;AACF;AG3oLE;EAlVA;;IAEE;IACA;EHg+LF;AACF;AGlpLE;EA7UA;;IAEE;IACA;EHk+LF;AACF;AGzpLE;EAxUA;;IAEE;IACA;EHo+LF;AACF;AGhqLE;EAnUA;;IAEE;IACA;EHs+LF;AACF;AGvqLE;EA9TA;;IAEE;IACA;EHw+LF;AACF;AG9qLE;EApTE;IACE;IACA;IACA;IACA;EHq+LJ;AACF;AGtrLE;EA7SE;;IAEE;IACA;IACA;IACA;EHs+LJ;AACF;AG/rLE;EArSE;;IAEE;IACA;IACA;IACA;EHu+LJ;AACF;AGxsLE;EApTE;IACE;IACA;IACA;IACA;EH+/LJ;AACF;AGhtLE;EA7SE;;IAEE;IACA;IACA;IACA;EHggMJ;AACF;AGztLE;EArSE;;IAEE;IACA;IACA;IACA;EHigMJ;AACF;AGluLE;EApTE;IACE;IACA;IACA;IACA;EHyhMJ;AACF;AG1uLE;EA7SE;;IAEE;IACA;IACA;IACA;EH0hMJ;AACF;AGnvLE;EArSE;;IAEE;IACA;IACA;IACA;EH2hMJ;AACF;AG5vLE;EApTE;IACE;IACA;IACA;IACA;EHmjMJ;AACF;AGpwLE;EA7SE;;IAEE;IACA;IACA;IACA;EHojMJ;AACF;AG7wLE;EArSE;;IAEE;IACA;IACA;IACA;EHqjMJ;AACF;AGtxLE;EApTE;IACE;IACA;IACA;IACA;EH6kMJ;AACF;AG9xLE;EA7SE;;IAEE;IACA;IACA;IACA;EH8kMJ;AACF;AGvyLE;EArSE;;IAEE;IACA;IACA;IACA;EH+kMJ;AACF;AGhzLE;EApTE;IACE;IACA;IACA;IACA;EHumMJ;AACF;AGxzLE;EA7SE;;IAEE;IACA;IACA;IACA;EHwmMJ;AACF;AGj0LE;EArSE;;IAEE;IACA;IACA;IACA;EHymMJ;AACF;AG10LE;EApTE;IACE;IACA;IACA;IACA;EHioMJ;AACF;AGl1LE;EA7SE;;IAEE;IACA;IACA;IACA;EHkoMJ;AACF;AG31LE;EArSE;;IAEE;IACA;IACA;IACA;EHmoMJ;AACF;AGp2LE;EApTE;IACE;IACA;IACA;IACA;EH2pMJ;AACF;AG52LE;EA7SE;;IAEE;IACA;IACA;IACA;EH4pMJ;AACF;AGr3LE;EArSE;;IAEE;IACA;IACA;IACA;EH6pMJ;AACF;AG93LE;EApTE;IACE;IACA;IACA;IACA;EHqrMJ;AACF;AGt4LE;EA7SE;;IAEE;IACA;IACA;IACA;EHsrMJ;AACF;AG/4LE;EArSE;;IAEE;IACA;IACA;IACA;EHurMJ;AACF;AGx5LE;EApTE;IACE;IACA;IACA;IACA;EH+sMJ;AACF;AGh6LE;EA7SE;;IAEE;IACA;IACA;IACA;EHgtMJ;AACF;AGz6LE;EArSE;;IAEE;IACA;IACA;IACA;EHitMJ;AACF;AGl7LE;EApTE;IACE;IACA;IACA;IACA;EHyuMJ;AACF;AG17LE;EA7SE;;IAEE;IACA;IACA;IACA;EH0uMJ;AACF;AGn8LE;EArSE;;IAEE;IACA;IACA;IACA;EH2uMJ;AACF;AG58LE;EApTE;IACE;IACA;IACA;IACA;EHmwMJ;AACF;AGp9LE;EA7SE;;IAEE;IACA;IACA;IACA;EHowMJ;AACF;AG79LE;EArSE;;IAEE;IACA;IACA;IACA;EHqwMJ;AACF;AGt+LE;EApTE;IACE;IACA;IACA;IACA;EH6xMJ;AACF;AG9+LE;EA7SE;;IAEE;IACA;IACA;IACA;EH8xMJ;AACF;AGv/LE;EArSE;;IAEE;IACA;IACA;IACA;EH+xMJ;AACF;AGhgME;EApTE;IACE;IACA;IACA;IACA;EHuzMJ;AACF;AGxgME;EA7SE;;IAEE;IACA;IACA;IACA;EHwzMJ;AACF;AGjhME;EArSE;;IAEE;IACA;IACA;IACA;EHyzMJ;AACF;AG1hME;EApTE;IACE;IACA;IACA;IACA;EHi1MJ;AACF;AGliME;EA7SE;;IAEE;IACA;IACA;IACA;EHk1MJ;AACF;AG3iME;EArSE;;IAEE;IACA;IACA;IACA;EHm1MJ;AACF;AGpjME;EApTE;IACE;IACA;IACA;IACA;EH22MJ;AACF;AG5jME;EA7SE;;IAEE;IACA;IACA;IACA;EH42MJ;AACF;AGrkME;EArSE;;IAEE;IACA;IACA;IACA;EH62MJ;AACF;AG9kME;EApTE;IACE;IACA;IACA;IACA;EHq4MJ;AACF;AGtlME;EA7SE;;IAEE;IACA;IACA;IACA;EHs4MJ;AACF;AG/lME;EArSE;;IAEE;IACA;IACA;IACA;EHu4MJ;AACF;AGxmME;EApTE;IACE;IACA;IACA;IACA;EH+5MJ;AACF;AGhnME;EA7SE;;IAEE;IACA;IACA;IACA;EHg6MJ;AACF;AGznME;EArSE;;IAEE;IACA;IACA;IACA;EHi6MJ;AACF;AGloME;EApTE;IACE;IACA;IACA;IACA;EHy7MJ;AACF;AG1oME;EA7SE;;IAEE;IACA;IACA;IACA;EH07MJ;AACF;AGnpME;EArSE;;IAEE;IACA;IACA;IACA;EH27MJ;AACF;AG5pME;EApTE;IACE;IACA;IACA;IACA;EHm9MJ;AACF;AGpqME;EA7SE;;IAEE;IACA;IACA;IACA;EHo9MJ;AACF;AG7qME;EArSE;;IAEE;IACA;IACA;IACA;EHq9MJ;AACF;AGtrME;EApTE;IACE;IACA;IACA;IACA;EH6+MJ;AACF;AG9rME;EA7SE;;IAEE;IACA;IACA;IACA;EH8+MJ;AACF;AGvsME;EArSE;;IAEE;IACA;IACA;IACA;EH++MJ;AACF;AGhtME;EA1RE;;;;IAEE;IACA;IACA;IACA;EH++MJ;EG7+ME;;;;IAEE;IACA;IACA;IACA;EHi/MJ;EG/+ME;;;;IAEE;IACA;IACA;IACA;EHm/MJ;EGj/ME;;;;IAEE;IACA;IACA;IACA;EHq/MJ;AACF;AGtvME;EA3PE;;;;IAEE;IACA;IACA;IACA;EHs/MJ;EGp/ME;;;;IAEE;IACA;IACA;IACA;EHw/MJ;EGt/ME;;;;IAEE;IACA;IACA;IACA;EH0/MJ;EGx/ME;;;;IAEE;IACA;IACA;IACA;EH4/MJ;AACF;AG5xME;EAnYA;;;IAGE;IAKA;EHkqNF;AACF;AGxyME;EAzXA;IACE;EHoqNF;AACF;AG7yME;EAtXA;IACE;EHsqNF;AACF;AG7yME;EAII;;IACE;EH6yMN;;EG1yME;IACE;EH6yMJ;;EG3wNE;IACE;EH8wNJ;;EG/wNE;IACE;EHkxNJ;;EGnxNE;IACE;EHsxNJ;;EGvxNE;IACE;EH0xNJ;;EG3xNE;IACE;EH8xNJ;;EG/xNE;IACE;EHkyNJ;;EGnyNE;IACE;EHsyNJ;;EGvyNE;IACE;EH0yNJ;;EG3yNE;IACE;EH8yNJ;;EG/yNE;IACE;EHkzNJ;;EGnzNE;IACE;EHszNJ;;EGvzNE;IACE;EH0zNJ;;EG3zNE;IACE;EH8zNJ;;EG/zNE;IACE;EHk0NJ;;EGn0NE;IACE;EHs0NJ;;EGv0NE;IACE;EH00NJ;;EG30NE;IACE;EH80NJ;;EG/0NE;IACE;EHk1NJ;;EGn1NE;IACE;EHs1NJ;;EGv1NE;IACE;EH01NJ;;EG31NE;IACE;EH81NJ;;EG/1NE;IACE;EHk2NJ;;EGn2NE;IACE;EHs2NJ;;EGv2NE;IACE;EH02NJ;;EG32NE;IACE;EH82NJ;;EG/2NE;IACE;EHk3NJ;;EGn3NE;IACE;EHs3NJ;;EGv3NE;IACE;EH03NJ;;EG33NE;IACE;EH83NJ;;EG/3NE;IACE;EHk4NJ;;EGn4NE;IACE;EHs4NJ;;EGv4NE;IACE;EH04NJ;;EG34NE;IACE;EH84NJ;;EG/4NE;IACE;EHk5NJ;;EGn5NE;IACE;EHs5NJ;;EGv5NE;IACE;EH05NJ;;EG35NE;IACE;EH85NJ;;EG/5NE;IACE;EHk6NJ;;EGn6NE;IACE;EHs6NJ;;EGv6NE;IACE;EH06NJ;;EG36NE;IACE;EH86NJ;;EGt5NE;IACE;EHy5NJ;;EG15NE;IACE;EH65NJ;;EG95NE;IACE;EHi6NJ;;EGl6NE;IACE;EHq6NJ;;EGt6NE;IACE;EHy6NJ;;EG16NE;IACE;EH66NJ;;EG96NE;IACE;EHi7NJ;;EGl7NE;IACE;EHq7NJ;;EGt7NE;IACE;EHy7NJ;;EG17NE;IACE;EH67NJ;;EG97NE;IACE;EHi8NJ;;EGl8NE;IACE;EHq8NJ;;EGt8NE;IACE;EHy8NJ;;EG18NE;IACE;EH68NJ;;EG98NE;IACE;EHi9NJ;;EGl9NE;IACE;EHq9NJ;;EGt9NE;IACE;EHy9NJ;;EG19NE;IACE;EH69NJ;;EG99NE;IACE;EHi+NJ;;EGl+NE;IACE;EHq+NJ;;EGn9NE;IACE;EHs9NJ;;EGp8NE;IACE;EHu8NJ;;EGvwNA;;IAGE;IACA;IACA;EHywNF;;EGtwNA;;;;;IAKE;EHywNF;;EGrwNA;;;;;IAKE;EHwwNF;;EGpwNA;;;;;IAKE;EHuwNF;;EGnwNA;;;;;IAKE;EHswNF;;EGlwNA;;;;;IAKE;EHqwNF;;EG5vNA;;;;;IAKE;IACA;EH+vNF;;EG3vNA;;;;;IAKE;IACA;IACA;EH8vNF;EG3vNE;;;;;IACE;IACA;EHiwNJ;;EG5vNA;;;;;IAKE;IACA;EH+vNF;;EG3vNA;;;;;IAKE;IACA;EH8vNF;;EG1vNA;;;;;IAKE;IACA;EH6vNF;;EGpgOA;IACE;IACA;EHugOF;AACF;AG//NE;EACE;IACE;EHigOJ;AACF;AGlqNE;EA5VA;;IAEE;IACA;EHigOF;AACF;AGzqNE;EAvVA;;IAEE;IACA;EHmgOF;AACF;AGhrNE;EAlVA;;IAEE;IACA;EHqgOF;AACF;AGvrNE;EA7UA;;IAEE;IACA;EHugOF;AACF;AG9rNE;EAxUA;;IAEE;IACA;EHygOF;AACF;AGrsNE;EAnUA;;IAEE;IACA;EH2gOF;AACF;AG5sNE;EAzTE;IACE;IACA;IACA;IACA;EHwgOJ;AACF;AGptNE;EAlTE;;IAEE;IACA;IACA;IACA;EHygOJ;AACF;AG7tNE;EA1SE;;IAEE;IACA;IACA;IACA;EH0gOJ;AACF;AGtuNE;EAzTE;IACE;IACA;IACA;IACA;EHkiOJ;AACF;AG9uNE;EAlTE;;IAEE;IACA;IACA;IACA;EHmiOJ;AACF;AGvvNE;EA1SE;;IAEE;IACA;IACA;IACA;EHoiOJ;AACF;AGhwNE;EAzTE;IACE;IACA;IACA;IACA;EH4jOJ;AACF;AGxwNE;EAlTE;;IAEE;IACA;IACA;IACA;EH6jOJ;AACF;AGjxNE;EA1SE;;IAEE;IACA;IACA;IACA;EH8jOJ;AACF;AG1xNE;EAzTE;IACE;IACA;IACA;IACA;EHslOJ;AACF;AGlyNE;EAlTE;;IAEE;IACA;IACA;IACA;EHulOJ;AACF;AG3yNE;EA1SE;;IAEE;IACA;IACA;IACA;EHwlOJ;AACF;AGpzNE;EAzTE;IACE;IACA;IACA;IACA;EHgnOJ;AACF;AG5zNE;EAlTE;;IAEE;IACA;IACA;IACA;EHinOJ;AACF;AGr0NE;EA1SE;;IAEE;IACA;IACA;IACA;EHknOJ;AACF;AG90NE;EAzTE;IACE;IACA;IACA;IACA;EH0oOJ;AACF;AGt1NE;EAlTE;;IAEE;IACA;IACA;IACA;EH2oOJ;AACF;AG/1NE;EA1SE;;IAEE;IACA;IACA;IACA;EH4oOJ;AACF;AGx2NE;EAzTE;IACE;IACA;IACA;IACA;EHoqOJ;AACF;AGh3NE;EAlTE;;IAEE;IACA;IACA;IACA;EHqqOJ;AACF;AGz3NE;EA1SE;;IAEE;IACA;IACA;IACA;EHsqOJ;AACF;AGl4NE;EAzTE;IACE;IACA;IACA;IACA;EH8rOJ;AACF;AG14NE;EAlTE;;IAEE;IACA;IACA;IACA;EH+rOJ;AACF;AGn5NE;EA1SE;;IAEE;IACA;IACA;IACA;EHgsOJ;AACF;AG55NE;EAzTE;IACE;IACA;IACA;IACA;EHwtOJ;AACF;AGp6NE;EAlTE;;IAEE;IACA;IACA;IACA;EHytOJ;AACF;AG76NE;EA1SE;;IAEE;IACA;IACA;IACA;EH0tOJ;AACF;AGt7NE;EAzTE;IACE;IACA;IACA;IACA;EHkvOJ;AACF;AG97NE;EAlTE;;IAEE;IACA;IACA;IACA;EHmvOJ;AACF;AGv8NE;EA1SE;;IAEE;IACA;IACA;IACA;EHovOJ;AACF;AGh9NE;EAzTE;IACE;IACA;IACA;IACA;EH4wOJ;AACF;AGx9NE;EAlTE;;IAEE;IACA;IACA;IACA;EH6wOJ;AACF;AGj+NE;EA1SE;;IAEE;IACA;IACA;IACA;EH8wOJ;AACF;AG1+NE;EAzTE;IACE;IACA;IACA;IACA;EHsyOJ;AACF;AGl/NE;EAlTE;;IAEE;IACA;IACA;IACA;EHuyOJ;AACF;AG3/NE;EA1SE;;IAEE;IACA;IACA;IACA;EHwyOJ;AACF;AGpgOE;EAzTE;IACE;IACA;IACA;IACA;EHg0OJ;AACF;AG5gOE;EAlTE;;IAEE;IACA;IACA;IACA;EHi0OJ;AACF;AGrhOE;EA1SE;;IAEE;IACA;IACA;IACA;EHk0OJ;AACF;AG9hOE;EAzTE;IACE;IACA;IACA;IACA;EH01OJ;AACF;AGtiOE;EAlTE;;IAEE;IACA;IACA;IACA;EH21OJ;AACF;AG/iOE;EA1SE;;IAEE;IACA;IACA;IACA;EH41OJ;AACF;AGxjOE;EAzTE;IACE;IACA;IACA;IACA;EHo3OJ;AACF;AGhkOE;EAlTE;;IAEE;IACA;IACA;IACA;EHq3OJ;AACF;AGzkOE;EA1SE;;IAEE;IACA;IACA;IACA;EHs3OJ;AACF;AGllOE;EAzTE;IACE;IACA;IACA;IACA;EH84OJ;AACF;AG1lOE;EAlTE;;IAEE;IACA;IACA;IACA;EH+4OJ;AACF;AGnmOE;EA1SE;;IAEE;IACA;IACA;IACA;EHg5OJ;AACF;AG5mOE;EAzTE;IACE;IACA;IACA;IACA;EHw6OJ;AACF;AGpnOE;EAlTE;;IAEE;IACA;IACA;IACA;EHy6OJ;AACF;AG7nOE;EA1SE;;IAEE;IACA;IACA;IACA;EH06OJ;AACF;AGtoOE;EAzTE;IACE;IACA;IACA;IACA;EHk8OJ;AACF;AG9oOE;EAlTE;;IAEE;IACA;IACA;IACA;EHm8OJ;AACF;AGvpOE;EA1SE;;IAEE;IACA;IACA;IACA;EHo8OJ;AACF;AGhqOE;EAzTE;IACE;IACA;IACA;IACA;EH49OJ;AACF;AGxqOE;EAlTE;;IAEE;IACA;IACA;IACA;EH69OJ;AACF;AGjrOE;EA1SE;;IAEE;IACA;IACA;IACA;EH89OJ;AACF;AG1rOE;EAzTE;IACE;IACA;IACA;IACA;EHs/OJ;AACF;AGlsOE;EAlTE;;IAEE;IACA;IACA;IACA;EHu/OJ;AACF;AG3sOE;EA1SE;;IAEE;IACA;IACA;IACA;EHw/OJ;AACF;AGptOE;EAzTE;IACE;IACA;IACA;IACA;EHghPJ;AACF;AG5tOE;EAlTE;;IAEE;IACA;IACA;IACA;EHihPJ;AACF;AGruOE;EA1SE;;IAEE;IACA;IACA;IACA;EHkhPJ;AACF;AG9uOE;EA/RE;;;;IAEE;IACA;IACA;IACA;EHkhPJ;EGhhPE;;;;IAEE;IACA;IACA;IACA;EHohPJ;EGlhPE;;;;IAEE;IACA;IACA;IACA;EHshPJ;EGphPE;;;;IAEE;IACA;IACA;IACA;EHwhPJ;AACF;AGpxOE;EAhQE;;;;IAEE;IACA;IACA;IACA;EHyhPJ;EGvhPE;;;;IAEE;IACA;IACA;IACA;EH2hPJ;EGzhPE;;;;IAEE;IACA;IACA;IACA;EH6hPJ;EG3hPE;;;;IAEE;IACA;IACA;IACA;EH+hPJ;AACF;AG1zOE;EAxYA;;;IAGE;IAKA;EHqsPF;AACF;AGt0OE;EA9XA;IACE;EHusPF;AACF;AG30OE;EA3XA;IACE;EHysPF;AACF;AGl0OE;EAneE;IACE;EHwyPJ;;EGzyPE;IACE;EH4yPJ;;EG7yPE;IACE;EHgzPJ;;EGjzPE;IACE;EHozPJ;;EGrzPE;IACE;EHwzPJ;;EGzzPE;IACE;EH4zPJ;;EG7zPE;IACE;EHg0PJ;;EGj0PE;IACE;EHo0PJ;;EGr0PE;IACE;EHw0PJ;;EGz0PE;IACE;EH40PJ;;EG70PE;IACE;EHg1PJ;;EGj1PE;IACE;EHo1PJ;;EGr1PE;IACE;EHw1PJ;;EGz1PE;IACE;EH41PJ;;EG71PE;IACE;EHg2PJ;;EGj2PE;IACE;EHo2PJ;;EGr2PE;IACE;EHw2PJ;;EGz2PE;IACE;EH42PJ;;EG72PE;IACE;EHg3PJ;;EGj3PE;IACE;EHo3PJ;;EGr3PE;IACE;EHw3PJ;;EGz3PE;IACE;EH43PJ;;EG73PE;IACE;EHg4PJ;;EGj4PE;IACE;EHo4PJ;;EGr4PE;IACE;EHw4PJ;;EGz4PE;IACE;EH44PJ;;EG74PE;IACE;EHg5PJ;;EGj5PE;IACE;EHo5PJ;;EGr5PE;IACE;EHw5PJ;;EGz5PE;IACE;EH45PJ;;EG75PE;IACE;EHg6PJ;;EGj6PE;IACE;EHo6PJ;;EGr6PE;IACE;EHw6PJ;;EGz6PE;IACE;EH46PJ;;EG76PE;IACE;EHg7PJ;;EGj7PE;IACE;EHo7PJ;;EGr7PE;IACE;EHw7PJ;;EGz7PE;IACE;EH47PJ;;EG77PE;IACE;EHg8PJ;;EGj8PE;IACE;EHo8PJ;;EGr8PE;IACE;EHw8PJ;;EGh7PE;IACE;EHm7PJ;;EGp7PE;IACE;EHu7PJ;;EGx7PE;IACE;EH27PJ;;EG57PE;IACE;EH+7PJ;;EGh8PE;IACE;EHm8PJ;;EGp8PE;IACE;EHu8PJ;;EGx8PE;IACE;EH28PJ;;EG58PE;IACE;EH+8PJ;;EGh9PE;IACE;EHm9PJ;;EGp9PE;IACE;EHu9PJ;;EGx9PE;IACE;EH29PJ;;EG59PE;IACE;EH+9PJ;;EGh+PE;IACE;EHm+PJ;;EGp+PE;IACE;EHu+PJ;;EGx+PE;IACE;EH2+PJ;;EG5+PE;IACE;EH++PJ;;EGh/PE;IACE;EHm/PJ;;EGp/PE;IACE;EHu/PJ;;EGx/PE;IACE;EH2/PJ;;EG5/PE;IACE;EH+/PJ;;EG7+PE;IACE;EHg/PJ;;EG99PE;IACE;EHi+PJ;;EGjyPA;;IAGE;IACA;IACA;EHmyPF;;EGhyPA;;;;;IAKE;EHmyPF;;EG/xPA;;;;;IAKE;EHkyPF;;EG9xPA;;;;;IAKE;EHiyPF;;EG7xPA;;;;;IAKE;EHgyPF;;EG5xPA;;;;;IAKE;EH+xPF;;EGtxPA;;;;;IAKE;IACA;EHyxPF;;EGrxPA;;;;;IAKE;IACA;IACA;EHwxPF;EGrxPE;;;;;IACE;IACA;EH2xPJ;;EGtxPA;;;;;IAKE;IACA;EHyxPF;;EGrxPA;;;;;IAKE;IACA;EHwxPF;;EGpxPA;;;;;IAKE;IACA;EHuxPF;;EG9hQA;IACE;IACA;EHiiQF;AACF;AGzhQE;EACE;IACE;EH2hQJ;AACF;AG9qPE;EA1WA;;IAEE;IACA;EH2hQF;AACF;AGrrPE;EArWA;;IAEE;IACA;EH6hQF;AACF;AG5rPE;EAhWA;;IAEE;IACA;EH+hQF;AACF;AGnsPE;EA3VA;;IAEE;IACA;EHiiQF;AACF;AG1sPE;EAtVA;;IAEE;IACA;EHmiQF;AACF;AGjtPE;EAjVA;;IAEE;IACA;EHqiQF;AACF;AGxtPE;EAvUE;IACE;IACA;IACA;IACA;EHkiQJ;AACF;AGhuPE;EAhUE;;IAEE;IACA;IACA;IACA;EHmiQJ;AACF;AGzuPE;EAxTE;;IAEE;IACA;IACA;IACA;EHoiQJ;AACF;AGlvPE;EAvUE;IACE;IACA;IACA;IACA;EH4jQJ;AACF;AG1vPE;EAhUE;;IAEE;IACA;IACA;IACA;EH6jQJ;AACF;AGnwPE;EAxTE;;IAEE;IACA;IACA;IACA;EH8jQJ;AACF;AG5wPE;EAvUE;IACE;IACA;IACA;IACA;EHslQJ;AACF;AGpxPE;EAhUE;;IAEE;IACA;IACA;IACA;EHulQJ;AACF;AG7xPE;EAxTE;;IAEE;IACA;IACA;IACA;EHwlQJ;AACF;AGtyPE;EAvUE;IACE;IACA;IACA;IACA;EHgnQJ;AACF;AG9yPE;EAhUE;;IAEE;IACA;IACA;IACA;EHinQJ;AACF;AGvzPE;EAxTE;;IAEE;IACA;IACA;IACA;EHknQJ;AACF;AGh0PE;EAvUE;IACE;IACA;IACA;IACA;EH0oQJ;AACF;AGx0PE;EAhUE;;IAEE;IACA;IACA;IACA;EH2oQJ;AACF;AGj1PE;EAxTE;;IAEE;IACA;IACA;IACA;EH4oQJ;AACF;AG11PE;EAvUE;IACE;IACA;IACA;IACA;EHoqQJ;AACF;AGl2PE;EAhUE;;IAEE;IACA;IACA;IACA;EHqqQJ;AACF;AG32PE;EAxTE;;IAEE;IACA;IACA;IACA;EHsqQJ;AACF;AGp3PE;EAvUE;IACE;IACA;IACA;IACA;EH8rQJ;AACF;AG53PE;EAhUE;;IAEE;IACA;IACA;IACA;EH+rQJ;AACF;AGr4PE;EAxTE;;IAEE;IACA;IACA;IACA;EHgsQJ;AACF;AG94PE;EAvUE;IACE;IACA;IACA;IACA;EHwtQJ;AACF;AGt5PE;EAhUE;;IAEE;IACA;IACA;IACA;EHytQJ;AACF;AG/5PE;EAxTE;;IAEE;IACA;IACA;IACA;EH0tQJ;AACF;AGx6PE;EAvUE;IACE;IACA;IACA;IACA;EHkvQJ;AACF;AGh7PE;EAhUE;;IAEE;IACA;IACA;IACA;EHmvQJ;AACF;AGz7PE;EAxTE;;IAEE;IACA;IACA;IACA;EHovQJ;AACF;AGl8PE;EAvUE;IACE;IACA;IACA;IACA;EH4wQJ;AACF;AG18PE;EAhUE;;IAEE;IACA;IACA;IACA;EH6wQJ;AACF;AGn9PE;EAxTE;;IAEE;IACA;IACA;IACA;EH8wQJ;AACF;AG59PE;EAvUE;IACE;IACA;IACA;IACA;EHsyQJ;AACF;AGp+PE;EAhUE;;IAEE;IACA;IACA;IACA;EHuyQJ;AACF;AG7+PE;EAxTE;;IAEE;IACA;IACA;IACA;EHwyQJ;AACF;AGt/PE;EAvUE;IACE;IACA;IACA;IACA;EHg0QJ;AACF;AG9/PE;EAhUE;;IAEE;IACA;IACA;IACA;EHi0QJ;AACF;AGvgQE;EAxTE;;IAEE;IACA;IACA;IACA;EHk0QJ;AACF;AGhhQE;EAvUE;IACE;IACA;IACA;IACA;EH01QJ;AACF;AGxhQE;EAhUE;;IAEE;IACA;IACA;IACA;EH21QJ;AACF;AGjiQE;EAxTE;;IAEE;IACA;IACA;IACA;EH41QJ;AACF;AG1iQE;EAvUE;IACE;IACA;IACA;IACA;EHo3QJ;AACF;AGljQE;EAhUE;;IAEE;IACA;IACA;IACA;EHq3QJ;AACF;AG3jQE;EAxTE;;IAEE;IACA;IACA;IACA;EHs3QJ;AACF;AGpkQE;EAvUE;IACE;IACA;IACA;IACA;EH84QJ;AACF;AG5kQE;EAhUE;;IAEE;IACA;IACA;IACA;EH+4QJ;AACF;AGrlQE;EAxTE;;IAEE;IACA;IACA;IACA;EHg5QJ;AACF;AG9lQE;EAvUE;IACE;IACA;IACA;IACA;EHw6QJ;AACF;AGtmQE;EAhUE;;IAEE;IACA;IACA;IACA;EHy6QJ;AACF;AG/mQE;EAxTE;;IAEE;IACA;IACA;IACA;EH06QJ;AACF;AGxnQE;EAvUE;IACE;IACA;IACA;IACA;EHk8QJ;AACF;AGhoQE;EAhUE;;IAEE;IACA;IACA;IACA;EHm8QJ;AACF;AGzoQE;EAxTE;;IAEE;IACA;IACA;IACA;EHo8QJ;AACF;AGlpQE;EAvUE;IACE;IACA;IACA;IACA;EH49QJ;AACF;AG1pQE;EAhUE;;IAEE;IACA;IACA;IACA;EH69QJ;AACF;AGnqQE;EAxTE;;IAEE;IACA;IACA;IACA;EH89QJ;AACF;AG5qQE;EAvUE;IACE;IACA;IACA;IACA;EHs/QJ;AACF;AGprQE;EAhUE;;IAEE;IACA;IACA;IACA;EHu/QJ;AACF;AG7rQE;EAxTE;;IAEE;IACA;IACA;IACA;EHw/QJ;AACF;AGtsQE;EAvUE;IACE;IACA;IACA;IACA;EHghRJ;AACF;AG9sQE;EAhUE;;IAEE;IACA;IACA;IACA;EHihRJ;AACF;AGvtQE;EAxTE;;IAEE;IACA;IACA;IACA;EHkhRJ;AACF;AGhuQE;EAvUE;IACE;IACA;IACA;IACA;EH0iRJ;AACF;AGxuQE;EAhUE;;IAEE;IACA;IACA;IACA;EH2iRJ;AACF;AGjvQE;EAxTE;;IAEE;IACA;IACA;IACA;EH4iRJ;AACF;AG1vQE;EA7SE;;;;IAEE;IACA;IACA;IACA;EH4iRJ;EG1iRE;;;;IAEE;IACA;IACA;IACA;EH8iRJ;EG5iRE;;;;IAEE;IACA;IACA;IACA;EHgjRJ;EG9iRE;;;;IAEE;IACA;IACA;IACA;EHkjRJ;AACF;AGhyQE;EA9QE;;;;IAEE;IACA;IACA;IACA;EHmjRJ;EGjjRE;;;;IAEE;IACA;IACA;IACA;EHqjRJ;EGnjRE;;;;IAEE;IACA;IACA;IACA;EHujRJ;EGrjRE;;;;IAEE;IACA;IACA;IACA;EHyjRJ;AACF;AGt0QE;EAtZA;;;IAGE;IAKA;EH+tRF;AACF;AGl1QE;EA5YA;IACE;EHiuRF;AACF;AGv1QE;EAzYA;IACE;EHmuRF;AACF;AGv1QE;EAKI;;;IACE;EHu1QN;;EGp1QE;IACE;EHu1QJ;;EGz0RE;IACE;EH40RJ;;EG70RE;IACE;EHg1RJ;;EGj1RE;IACE;EHo1RJ;;EGr1RE;IACE;EHw1RJ;;EGz1RE;IACE;EH41RJ;;EG71RE;IACE;EHg2RJ;;EGj2RE;IACE;EHo2RJ;;EGr2RE;IACE;EHw2RJ;;EGz2RE;IACE;EH42RJ;;EG72RE;IACE;EHg3RJ;;EGj3RE;IACE;EHo3RJ;;EGr3RE;IACE;EHw3RJ;;EGz3RE;IACE;EH43RJ;;EG73RE;IACE;EHg4RJ;;EGj4RE;IACE;EHo4RJ;;EGr4RE;IACE;EHw4RJ;;EGz4RE;IACE;EH44RJ;;EG74RE;IACE;EHg5RJ;;EGj5RE;IACE;EHo5RJ;;EGr5RE;IACE;EHw5RJ;;EGz5RE;IACE;EH45RJ;;EG75RE;IACE;EHg6RJ;;EGj6RE;IACE;EHo6RJ;;EGr6RE;IACE;EHw6RJ;;EGz6RE;IACE;EH46RJ;;EG76RE;IACE;EHg7RJ;;EGj7RE;IACE;EHo7RJ;;EGr7RE;IACE;EHw7RJ;;EGz7RE;IACE;EH47RJ;;EG77RE;IACE;EHg8RJ;;EGj8RE;IACE;EHo8RJ;;EGr8RE;IACE;EHw8RJ;;EGz8RE;IACE;EH48RJ;;EG78RE;IACE;EHg9RJ;;EGj9RE;IACE;EHo9RJ;;EGr9RE;IACE;EHw9RJ;;EGz9RE;IACE;EH49RJ;;EG79RE;IACE;EHg+RJ;;EGj+RE;IACE;EHo+RJ;;EGr+RE;IACE;EHw+RJ;;EGz+RE;IACE;EH4+RJ;;EGp9RE;IACE;EHu9RJ;;EGx9RE;IACE;EH29RJ;;EG59RE;IACE;EH+9RJ;;EGh+RE;IACE;EHm+RJ;;EGp+RE;IACE;EHu+RJ;;EGx+RE;IACE;EH2+RJ;;EG5+RE;IACE;EH++RJ;;EGh/RE;IACE;EHm/RJ;;EGp/RE;IACE;EHu/RJ;;EGx/RE;IACE;EH2/RJ;;EG5/RE;IACE;EH+/RJ;;EGhgSE;IACE;EHmgSJ;;EGpgSE;IACE;EHugSJ;;EGxgSE;IACE;EH2gSJ;;EG5gSE;IACE;EH+gSJ;;EGhhSE;IACE;EHmhSJ;;EGphSE;IACE;EHuhSJ;;EGxhSE;IACE;EH2hSJ;;EG5hSE;IACE;EH+hSJ;;EGhiSE;IACE;EHmiSJ;;EGjhSE;IACE;EHohSJ;;EGlgSE;IACE;EHqgSJ;;EGr0RA;;IAGE;IACA;IACA;EHu0RF;;EGp0RA;;;;;IAKE;EHu0RF;;EGn0RA;;;;;IAKE;EHs0RF;;EGl0RA;;;;;IAKE;EHq0RF;;EGj0RA;;;;;IAKE;EHo0RF;;EGh0RA;;;;;IAKE;EHm0RF;;EG1zRA;;;;;IAKE;IACA;EH6zRF;;EGzzRA;;;;;IAKE;IACA;IACA;EH4zRF;EGzzRE;;;;;IACE;IACA;EH+zRJ;;EG1zRA;;;;;IAKE;IACA;EH6zRF;;EGzzRA;;;;;IAKE;IACA;EH4zRF;;EGxzRA;;;;;IAKE;IACA;EH2zRF;;EGlkSA;IACE;IACA;EHqkSF;AACF;AG7jSE;EACE;IACE;EH+jSJ;AACF;AG7sRE;EA/WA;;IAEE;IACA;EH+jSF;AACF;AGptRE;EA1WA;;IAEE;IACA;EHikSF;AACF;AG3tRE;EArWA;;IAEE;IACA;EHmkSF;AACF;AGluRE;EAhWA;;IAEE;IACA;EHqkSF;AACF;AGzuRE;EA3VA;;IAEE;IACA;EHukSF;AACF;AGhvRE;EAtVA;;IAEE;IACA;EHykSF;AACF;AGvvRE;EA5UE;IACE;IACA;IACA;IACA;EHskSJ;AACF;AG/vRE;EArUE;;IAEE;IACA;IACA;IACA;EHukSJ;AACF;AGxwRE;EA7TE;;IAEE;IACA;IACA;IACA;EHwkSJ;AACF;AGjxRE;EA5UE;IACE;IACA;IACA;IACA;EHgmSJ;AACF;AGzxRE;EArUE;;IAEE;IACA;IACA;IACA;EHimSJ;AACF;AGlyRE;EA7TE;;IAEE;IACA;IACA;IACA;EHkmSJ;AACF;AG3yRE;EA5UE;IACE;IACA;IACA;IACA;EH0nSJ;AACF;AGnzRE;EArUE;;IAEE;IACA;IACA;IACA;EH2nSJ;AACF;AG5zRE;EA7TE;;IAEE;IACA;IACA;IACA;EH4nSJ;AACF;AGr0RE;EA5UE;IACE;IACA;IACA;IACA;EHopSJ;AACF;AG70RE;EArUE;;IAEE;IACA;IACA;IACA;EHqpSJ;AACF;AGt1RE;EA7TE;;IAEE;IACA;IACA;IACA;EHspSJ;AACF;AG/1RE;EA5UE;IACE;IACA;IACA;IACA;EH8qSJ;AACF;AGv2RE;EArUE;;IAEE;IACA;IACA;IACA;EH+qSJ;AACF;AGh3RE;EA7TE;;IAEE;IACA;IACA;IACA;EHgrSJ;AACF;AGz3RE;EA5UE;IACE;IACA;IACA;IACA;EHwsSJ;AACF;AGj4RE;EArUE;;IAEE;IACA;IACA;IACA;EHysSJ;AACF;AG14RE;EA7TE;;IAEE;IACA;IACA;IACA;EH0sSJ;AACF;AGn5RE;EA5UE;IACE;IACA;IACA;IACA;EHkuSJ;AACF;AG35RE;EArUE;;IAEE;IACA;IACA;IACA;EHmuSJ;AACF;AGp6RE;EA7TE;;IAEE;IACA;IACA;IACA;EHouSJ;AACF;AG76RE;EA5UE;IACE;IACA;IACA;IACA;EH4vSJ;AACF;AGr7RE;EArUE;;IAEE;IACA;IACA;IACA;EH6vSJ;AACF;AG97RE;EA7TE;;IAEE;IACA;IACA;IACA;EH8vSJ;AACF;AGv8RE;EA5UE;IACE;IACA;IACA;IACA;EHsxSJ;AACF;AG/8RE;EArUE;;IAEE;IACA;IACA;IACA;EHuxSJ;AACF;AGx9RE;EA7TE;;IAEE;IACA;IACA;IACA;EHwxSJ;AACF;AGj+RE;EA5UE;IACE;IACA;IACA;IACA;EHgzSJ;AACF;AGz+RE;EArUE;;IAEE;IACA;IACA;IACA;EHizSJ;AACF;AGl/RE;EA7TE;;IAEE;IACA;IACA;IACA;EHkzSJ;AACF;AG3/RE;EA5UE;IACE;IACA;IACA;IACA;EH00SJ;AACF;AGngSE;EArUE;;IAEE;IACA;IACA;IACA;EH20SJ;AACF;AG5gSE;EA7TE;;IAEE;IACA;IACA;IACA;EH40SJ;AACF;AGrhSE;EA5UE;IACE;IACA;IACA;IACA;EHo2SJ;AACF;AG7hSE;EArUE;;IAEE;IACA;IACA;IACA;EHq2SJ;AACF;AGtiSE;EA7TE;;IAEE;IACA;IACA;IACA;EHs2SJ;AACF;AG/iSE;EA5UE;IACE;IACA;IACA;IACA;EH83SJ;AACF;AGvjSE;EArUE;;IAEE;IACA;IACA;IACA;EH+3SJ;AACF;AGhkSE;EA7TE;;IAEE;IACA;IACA;IACA;EHg4SJ;AACF;AGzkSE;EA5UE;IACE;IACA;IACA;IACA;EHw5SJ;AACF;AGjlSE;EArUE;;IAEE;IACA;IACA;IACA;EHy5SJ;AACF;AG1lSE;EA7TE;;IAEE;IACA;IACA;IACA;EH05SJ;AACF;AGnmSE;EA5UE;IACE;IACA;IACA;IACA;EHk7SJ;AACF;AG3mSE;EArUE;;IAEE;IACA;IACA;IACA;EHm7SJ;AACF;AGpnSE;EA7TE;;IAEE;IACA;IACA;IACA;EHo7SJ;AACF;AG7nSE;EA5UE;IACE;IACA;IACA;IACA;EH48SJ;AACF;AGroSE;EArUE;;IAEE;IACA;IACA;IACA;EH68SJ;AACF;AG9oSE;EA7TE;;IAEE;IACA;IACA;IACA;EH88SJ;AACF;AGvpSE;EA5UE;IACE;IACA;IACA;IACA;EHs+SJ;AACF;AG/pSE;EArUE;;IAEE;IACA;IACA;IACA;EHu+SJ;AACF;AGxqSE;EA7TE;;IAEE;IACA;IACA;IACA;EHw+SJ;AACF;AGjrSE;EA5UE;IACE;IACA;IACA;IACA;EHggTJ;AACF;AGzrSE;EArUE;;IAEE;IACA;IACA;IACA;EHigTJ;AACF;AGlsSE;EA7TE;;IAEE;IACA;IACA;IACA;EHkgTJ;AACF;AG3sSE;EA5UE;IACE;IACA;IACA;IACA;EH0hTJ;AACF;AGntSE;EArUE;;IAEE;IACA;IACA;IACA;EH2hTJ;AACF;AG5tSE;EA7TE;;IAEE;IACA;IACA;IACA;EH4hTJ;AACF;AGruSE;EA5UE;IACE;IACA;IACA;IACA;EHojTJ;AACF;AG7uSE;EArUE;;IAEE;IACA;IACA;IACA;EHqjTJ;AACF;AGtvSE;EA7TE;;IAEE;IACA;IACA;IACA;EHsjTJ;AACF;AG/vSE;EA5UE;IACE;IACA;IACA;IACA;EH8kTJ;AACF;AGvwSE;EArUE;;IAEE;IACA;IACA;IACA;EH+kTJ;AACF;AGhxSE;EA7TE;;IAEE;IACA;IACA;IACA;EHglTJ;AACF;AGzxSE;EAlTE;;;;IAEE;IACA;IACA;IACA;EHglTJ;EG9kTE;;;;IAEE;IACA;IACA;IACA;EHklTJ;EGhlTE;;;;IAEE;IACA;IACA;IACA;EHolTJ;EGllTE;;;;IAEE;IACA;IACA;IACA;EHslTJ;AACF;AG/zSE;EAnRE;;;;IAEE;IACA;IACA;IACA;EHulTJ;EGrlTE;;;;IAEE;IACA;IACA;IACA;EHylTJ;EGvlTE;;;;IAEE;IACA;IACA;IACA;EH2lTJ;EGzlTE;;;;IAEE;IACA;IACA;IACA;EH6lTJ;AACF;AGr2SE;EA3ZA;;;IAGE;IAKA;EHmwTF;AACF;AGj3SE;EAjZA;IACE;EHqwTF;AACF;AGt3SE;EA9YA;IACE;EHuwTF;AACF;AG52SE;EAvfE;IACE;EHs2TJ;;EGv2TE;IACE;EH02TJ;;EG32TE;IACE;EH82TJ;;EG/2TE;IACE;EHk3TJ;;EGn3TE;IACE;EHs3TJ;;EGv3TE;IACE;EH03TJ;;EG33TE;IACE;EH83TJ;;EG/3TE;IACE;EHk4TJ;;EGn4TE;IACE;EHs4TJ;;EGv4TE;IACE;EH04TJ;;EG34TE;IACE;EH84TJ;;EG/4TE;IACE;EHk5TJ;;EGn5TE;IACE;EHs5TJ;;EGv5TE;IACE;EH05TJ;;EG35TE;IACE;EH85TJ;;EG/5TE;IACE;EHk6TJ;;EGn6TE;IACE;EHs6TJ;;EGv6TE;IACE;EH06TJ;;EG36TE;IACE;EH86TJ;;EG/6TE;IACE;EHk7TJ;;EGn7TE;IACE;EHs7TJ;;EGv7TE;IACE;EH07TJ;;EG37TE;IACE;EH87TJ;;EG/7TE;IACE;EHk8TJ;;EGn8TE;IACE;EHs8TJ;;EGv8TE;IACE;EH08TJ;;EG38TE;IACE;EH88TJ;;EG/8TE;IACE;EHk9TJ;;EGn9TE;IACE;EHs9TJ;;EGv9TE;IACE;EH09TJ;;EG39TE;IACE;EH89TJ;;EG/9TE;IACE;EHk+TJ;;EGn+TE;IACE;EHs+TJ;;EGv+TE;IACE;EH0+TJ;;EG3+TE;IACE;EH8+TJ;;EG/+TE;IACE;EHk/TJ;;EGn/TE;IACE;EHs/TJ;;EGv/TE;IACE;EH0/TJ;;EG3/TE;IACE;EH8/TJ;;EG//TE;IACE;EHkgUJ;;EGngUE;IACE;EHsgUJ;;EG9+TE;IACE;EHi/TJ;;EGl/TE;IACE;EHq/TJ;;EGt/TE;IACE;EHy/TJ;;EG1/TE;IACE;EH6/TJ;;EG9/TE;IACE;EHigUJ;;EGlgUE;IACE;EHqgUJ;;EGtgUE;IACE;EHygUJ;;EG1gUE;IACE;EH6gUJ;;EG9gUE;IACE;EHihUJ;;EGlhUE;IACE;EHqhUJ;;EGthUE;IACE;EHyhUJ;;EG1hUE;IACE;EH6hUJ;;EG9hUE;IACE;EHiiUJ;;EGliUE;IACE;EHqiUJ;;EGtiUE;IACE;EHyiUJ;;EG1iUE;IACE;EH6iUJ;;EG9iUE;IACE;EHijUJ;;EGljUE;IACE;EHqjUJ;;EGtjUE;IACE;EHyjUJ;;EG1jUE;IACE;EH6jUJ;;EG3iUE;IACE;EH8iUJ;;EG5hUE;IACE;EH+hUJ;;EG/1TA;;IAGE;IACA;IACA;EHi2TF;;EG91TA;;;;;IAKE;EHi2TF;;EG71TA;;;;;IAKE;EHg2TF;;EG51TA;;;;;IAKE;EH+1TF;;EG31TA;;;;;IAKE;EH81TF;;EG11TA;;;;;IAKE;EH61TF;;EGp1TA;;;;;IAKE;IACA;EHu1TF;;EGn1TA;;;;;IAKE;IACA;IACA;EHs1TF;EGn1TE;;;;;IACE;IACA;EHy1TJ;;EGp1TA;;;;;IAKE;IACA;EHu1TF;;EGn1TA;;;;;IAKE;IACA;EHs1TF;;EGl1TA;;;;;IAKE;IACA;EHq1TF;;EG5lUA;IACE;IACA;EH+lUF;AACF;AGvlUE;EACE;IACE;EHylUJ;AACF;AGxtTE;EA9XA;;IAEE;IACA;EHylUF;AACF;AG/tTE;EAzXA;;IAEE;IACA;EH2lUF;AACF;AGtuTE;EApXA;;IAEE;IACA;EH6lUF;AACF;AG7uTE;EA/WA;;IAEE;IACA;EH+lUF;AACF;AGpvTE;EA1WA;;IAEE;IACA;EHimUF;AACF;AG3vTE;EArWA;;IAEE;IACA;EHmmUF;AACF;AGlwTE;EA3VE;IACE;IACA;IACA;IACA;EHgmUJ;AACF;AG1wTE;EApVE;;IAEE;IACA;IACA;IACA;EHimUJ;AACF;AGnxTE;EA5UE;;IAEE;IACA;IACA;IACA;EHkmUJ;AACF;AG5xTE;EA3VE;IACE;IACA;IACA;IACA;EH0nUJ;AACF;AGpyTE;EApVE;;IAEE;IACA;IACA;IACA;EH2nUJ;AACF;AG7yTE;EA5UE;;IAEE;IACA;IACA;IACA;EH4nUJ;AACF;AGtzTE;EA3VE;IACE;IACA;IACA;IACA;EHopUJ;AACF;AG9zTE;EApVE;;IAEE;IACA;IACA;IACA;EHqpUJ;AACF;AGv0TE;EA5UE;;IAEE;IACA;IACA;IACA;EHspUJ;AACF;AGh1TE;EA3VE;IACE;IACA;IACA;IACA;EH8qUJ;AACF;AGx1TE;EApVE;;IAEE;IACA;IACA;IACA;EH+qUJ;AACF;AGj2TE;EA5UE;;IAEE;IACA;IACA;IACA;EHgrUJ;AACF;AG12TE;EA3VE;IACE;IACA;IACA;IACA;EHwsUJ;AACF;AGl3TE;EApVE;;IAEE;IACA;IACA;IACA;EHysUJ;AACF;AG33TE;EA5UE;;IAEE;IACA;IACA;IACA;EH0sUJ;AACF;AGp4TE;EA3VE;IACE;IACA;IACA;IACA;EHkuUJ;AACF;AG54TE;EApVE;;IAEE;IACA;IACA;IACA;EHmuUJ;AACF;AGr5TE;EA5UE;;IAEE;IACA;IACA;IACA;EHouUJ;AACF;AG95TE;EA3VE;IACE;IACA;IACA;IACA;EH4vUJ;AACF;AGt6TE;EApVE;;IAEE;IACA;IACA;IACA;EH6vUJ;AACF;AG/6TE;EA5UE;;IAEE;IACA;IACA;IACA;EH8vUJ;AACF;AGx7TE;EA3VE;IACE;IACA;IACA;IACA;EHsxUJ;AACF;AGh8TE;EApVE;;IAEE;IACA;IACA;IACA;EHuxUJ;AACF;AGz8TE;EA5UE;;IAEE;IACA;IACA;IACA;EHwxUJ;AACF;AGl9TE;EA3VE;IACE;IACA;IACA;IACA;EHgzUJ;AACF;AG19TE;EApVE;;IAEE;IACA;IACA;IACA;EHizUJ;AACF;AGn+TE;EA5UE;;IAEE;IACA;IACA;IACA;EHkzUJ;AACF;AG5+TE;EA3VE;IACE;IACA;IACA;IACA;EH00UJ;AACF;AGp/TE;EApVE;;IAEE;IACA;IACA;IACA;EH20UJ;AACF;AG7/TE;EA5UE;;IAEE;IACA;IACA;IACA;EH40UJ;AACF;AGtgUE;EA3VE;IACE;IACA;IACA;IACA;EHo2UJ;AACF;AG9gUE;EApVE;;IAEE;IACA;IACA;IACA;EHq2UJ;AACF;AGvhUE;EA5UE;;IAEE;IACA;IACA;IACA;EHs2UJ;AACF;AGhiUE;EA3VE;IACE;IACA;IACA;IACA;EH83UJ;AACF;AGxiUE;EApVE;;IAEE;IACA;IACA;IACA;EH+3UJ;AACF;AGjjUE;EA5UE;;IAEE;IACA;IACA;IACA;EHg4UJ;AACF;AG1jUE;EA3VE;IACE;IACA;IACA;IACA;EHw5UJ;AACF;AGlkUE;EApVE;;IAEE;IACA;IACA;IACA;EHy5UJ;AACF;AG3kUE;EA5UE;;IAEE;IACA;IACA;IACA;EH05UJ;AACF;AGplUE;EA3VE;IACE;IACA;IACA;IACA;EHk7UJ;AACF;AG5lUE;EApVE;;IAEE;IACA;IACA;IACA;EHm7UJ;AACF;AGrmUE;EA5UE;;IAEE;IACA;IACA;IACA;EHo7UJ;AACF;AG9mUE;EA3VE;IACE;IACA;IACA;IACA;EH48UJ;AACF;AGtnUE;EApVE;;IAEE;IACA;IACA;IACA;EH68UJ;AACF;AG/nUE;EA5UE;;IAEE;IACA;IACA;IACA;EH88UJ;AACF;AGxoUE;EA3VE;IACE;IACA;IACA;IACA;EHs+UJ;AACF;AGhpUE;EApVE;;IAEE;IACA;IACA;IACA;EHu+UJ;AACF;AGzpUE;EA5UE;;IAEE;IACA;IACA;IACA;EHw+UJ;AACF;AGlqUE;EA3VE;IACE;IACA;IACA;IACA;EHggVJ;AACF;AG1qUE;EApVE;;IAEE;IACA;IACA;IACA;EHigVJ;AACF;AGnrUE;EA5UE;;IAEE;IACA;IACA;IACA;EHkgVJ;AACF;AG5rUE;EA3VE;IACE;IACA;IACA;IACA;EH0hVJ;AACF;AGpsUE;EApVE;;IAEE;IACA;IACA;IACA;EH2hVJ;AACF;AG7sUE;EA5UE;;IAEE;IACA;IACA;IACA;EH4hVJ;AACF;AGttUE;EA3VE;IACE;IACA;IACA;IACA;EHojVJ;AACF;AG9tUE;EApVE;;IAEE;IACA;IACA;IACA;EHqjVJ;AACF;AGvuUE;EA5UE;;IAEE;IACA;IACA;IACA;EHsjVJ;AACF;AGhvUE;EA3VE;IACE;IACA;IACA;IACA;EH8kVJ;AACF;AGxvUE;EApVE;;IAEE;IACA;IACA;IACA;EH+kVJ;AACF;AGjwUE;EA5UE;;IAEE;IACA;IACA;IACA;EHglVJ;AACF;AG1wUE;EA3VE;IACE;IACA;IACA;IACA;EHwmVJ;AACF;AGlxUE;EApVE;;IAEE;IACA;IACA;IACA;EHymVJ;AACF;AG3xUE;EA5UE;;IAEE;IACA;IACA;IACA;EH0mVJ;AACF;AGpyUE;EAjUE;;;;IAEE;IACA;IACA;IACA;EH0mVJ;EGxmVE;;;;IAEE;IACA;IACA;IACA;EH4mVJ;EG1mVE;;;;IAEE;IACA;IACA;IACA;EH8mVJ;EG5mVE;;;;IAEE;IACA;IACA;IACA;EHgnVJ;AACF;AG10UE;EAlSE;;;;IAEE;IACA;IACA;IACA;EHinVJ;EG/mVE;;;;IAEE;IACA;IACA;IACA;EHmnVJ;EGjnVE;;;;IAEE;IACA;IACA;IACA;EHqnVJ;EGnnVE;;;;IAEE;IACA;IACA;IACA;EHunVJ;AACF;AGh3UE;EA1aA;;;IAGE;IAKA;EH6xVF;AACF;AG53UE;EAhaA;IACE;EH+xVF;AACF;AGj4UE;EA7ZA;IACE;EHiyVF;AACF;AGj4UE;EAMI;;;;IACE;EHi4UN;;EG93UE;IACE;EHi4UJ;;EGx4VE;IACE;EH24VJ;;EG54VE;IACE;EH+4VJ;;EGh5VE;IACE;EHm5VJ;;EGp5VE;IACE;EHu5VJ;;EGx5VE;IACE;EH25VJ;;EG55VE;IACE;EH+5VJ;;EGh6VE;IACE;EHm6VJ;;EGp6VE;IACE;EHu6VJ;;EGx6VE;IACE;EH26VJ;;EG56VE;IACE;EH+6VJ;;EGh7VE;IACE;EHm7VJ;;EGp7VE;IACE;EHu7VJ;;EGx7VE;IACE;EH27VJ;;EG57VE;IACE;EH+7VJ;;EGh8VE;IACE;EHm8VJ;;EGp8VE;IACE;EHu8VJ;;EGx8VE;IACE;EH28VJ;;EG58VE;IACE;EH+8VJ;;EGh9VE;IACE;EHm9VJ;;EGp9VE;IACE;EHu9VJ;;EGx9VE;IACE;EH29VJ;;EG59VE;IACE;EH+9VJ;;EGh+VE;IACE;EHm+VJ;;EGp+VE;IACE;EHu+VJ;;EGx+VE;IACE;EH2+VJ;;EG5+VE;IACE;EH++VJ;;EGh/VE;IACE;EHm/VJ;;EGp/VE;IACE;EHu/VJ;;EGx/VE;IACE;EH2/VJ;;EG5/VE;IACE;EH+/VJ;;EGhgWE;IACE;EHmgWJ;;EGpgWE;IACE;EHugWJ;;EGxgWE;IACE;EH2gWJ;;EG5gWE;IACE;EH+gWJ;;EGhhWE;IACE;EHmhWJ;;EGphWE;IACE;EHuhWJ;;EGxhWE;IACE;EH2hWJ;;EG5hWE;IACE;EH+hWJ;;EGhiWE;IACE;EHmiWJ;;EGpiWE;IACE;EHuiWJ;;EGxiWE;IACE;EH2iWJ;;EGnhWE;IACE;EHshWJ;;EGvhWE;IACE;EH0hWJ;;EG3hWE;IACE;EH8hWJ;;EG/hWE;IACE;EHkiWJ;;EGniWE;IACE;EHsiWJ;;EGviWE;IACE;EH0iWJ;;EG3iWE;IACE;EH8iWJ;;EG/iWE;IACE;EHkjWJ;;EGnjWE;IACE;EHsjWJ;;EGvjWE;IACE;EH0jWJ;;EG3jWE;IACE;EH8jWJ;;EG/jWE;IACE;EHkkWJ;;EGnkWE;IACE;EHskWJ;;EGvkWE;IACE;EH0kWJ;;EG3kWE;IACE;EH8kWJ;;EG/kWE;IACE;EHklWJ;;EGnlWE;IACE;EHslWJ;;EGvlWE;IACE;EH0lWJ;;EG3lWE;IACE;EH8lWJ;;EG/lWE;IACE;EHkmWJ;;EGhlWE;IACE;EHmlWJ;;EGjkWE;IACE;EHokWJ;;EGp4VA;;IAGE;IACA;IACA;EHs4VF;;EGn4VA;;;;;IAKE;EHs4VF;;EGl4VA;;;;;IAKE;EHq4VF;;EGj4VA;;;;;IAKE;EHo4VF;;EGh4VA;;;;;IAKE;EHm4VF;;EG/3VA;;;;;IAKE;EHk4VF;;EGz3VA;;;;;IAKE;IACA;EH43VF;;EGx3VA;;;;;IAKE;IACA;IACA;EH23VF;EGx3VE;;;;;IACE;IACA;EH83VJ;;EGz3VA;;;;;IAKE;IACA;EH43VF;;EGx3VA;;;;;IAKE;IACA;EH23VF;;EGv3VA;;;;;IAKE;IACA;EH03VF;;EGjoWA;IACE;IACA;EHooWF;AACF;AG5nWE;EACE;IACE;EH8nWJ;AACF;AGxvVE;EAnYA;;IAEE;IACA;EH8nWF;AACF;AG/vVE;EA9XA;;IAEE;IACA;EHgoWF;AACF;AGtwVE;EAzXA;;IAEE;IACA;EHkoWF;AACF;AG7wVE;EApXA;;IAEE;IACA;EHooWF;AACF;AGpxVE;EA/WA;;IAEE;IACA;EHsoWF;AACF;AG3xVE;EA1WA;;IAEE;IACA;EHwoWF;AACF;AGlyVE;EAhWE;IACE;IACA;IACA;IACA;EHqoWJ;AACF;AG1yVE;EAzVE;;IAEE;IACA;IACA;IACA;EHsoWJ;AACF;AGnzVE;EAjVE;;IAEE;IACA;IACA;IACA;EHuoWJ;AACF;AG5zVE;EAhWE;IACE;IACA;IACA;IACA;EH+pWJ;AACF;AGp0VE;EAzVE;;IAEE;IACA;IACA;IACA;EHgqWJ;AACF;AG70VE;EAjVE;;IAEE;IACA;IACA;IACA;EHiqWJ;AACF;AGt1VE;EAhWE;IACE;IACA;IACA;IACA;EHyrWJ;AACF;AG91VE;EAzVE;;IAEE;IACA;IACA;IACA;EH0rWJ;AACF;AGv2VE;EAjVE;;IAEE;IACA;IACA;IACA;EH2rWJ;AACF;AGh3VE;EAhWE;IACE;IACA;IACA;IACA;EHmtWJ;AACF;AGx3VE;EAzVE;;IAEE;IACA;IACA;IACA;EHotWJ;AACF;AGj4VE;EAjVE;;IAEE;IACA;IACA;IACA;EHqtWJ;AACF;AG14VE;EAhWE;IACE;IACA;IACA;IACA;EH6uWJ;AACF;AGl5VE;EAzVE;;IAEE;IACA;IACA;IACA;EH8uWJ;AACF;AG35VE;EAjVE;;IAEE;IACA;IACA;IACA;EH+uWJ;AACF;AGp6VE;EAhWE;IACE;IACA;IACA;IACA;EHuwWJ;AACF;AG56VE;EAzVE;;IAEE;IACA;IACA;IACA;EHwwWJ;AACF;AGr7VE;EAjVE;;IAEE;IACA;IACA;IACA;EHywWJ;AACF;AG97VE;EAhWE;IACE;IACA;IACA;IACA;EHiyWJ;AACF;AGt8VE;EAzVE;;IAEE;IACA;IACA;IACA;EHkyWJ;AACF;AG/8VE;EAjVE;;IAEE;IACA;IACA;IACA;EHmyWJ;AACF;AGx9VE;EAhWE;IACE;IACA;IACA;IACA;EH2zWJ;AACF;AGh+VE;EAzVE;;IAEE;IACA;IACA;IACA;EH4zWJ;AACF;AGz+VE;EAjVE;;IAEE;IACA;IACA;IACA;EH6zWJ;AACF;AGl/VE;EAhWE;IACE;IACA;IACA;IACA;EHq1WJ;AACF;AG1/VE;EAzVE;;IAEE;IACA;IACA;IACA;EHs1WJ;AACF;AGngWE;EAjVE;;IAEE;IACA;IACA;IACA;EHu1WJ;AACF;AG5gWE;EAhWE;IACE;IACA;IACA;IACA;EH+2WJ;AACF;AGphWE;EAzVE;;IAEE;IACA;IACA;IACA;EHg3WJ;AACF;AG7hWE;EAjVE;;IAEE;IACA;IACA;IACA;EHi3WJ;AACF;AGtiWE;EAhWE;IACE;IACA;IACA;IACA;EHy4WJ;AACF;AG9iWE;EAzVE;;IAEE;IACA;IACA;IACA;EH04WJ;AACF;AGvjWE;EAjVE;;IAEE;IACA;IACA;IACA;EH24WJ;AACF;AGhkWE;EAhWE;IACE;IACA;IACA;IACA;EHm6WJ;AACF;AGxkWE;EAzVE;;IAEE;IACA;IACA;IACA;EHo6WJ;AACF;AGjlWE;EAjVE;;IAEE;IACA;IACA;IACA;EHq6WJ;AACF;AG1lWE;EAhWE;IACE;IACA;IACA;IACA;EH67WJ;AACF;AGlmWE;EAzVE;;IAEE;IACA;IACA;IACA;EH87WJ;AACF;AG3mWE;EAjVE;;IAEE;IACA;IACA;IACA;EH+7WJ;AACF;AGpnWE;EAhWE;IACE;IACA;IACA;IACA;EHu9WJ;AACF;AG5nWE;EAzVE;;IAEE;IACA;IACA;IACA;EHw9WJ;AACF;AGroWE;EAjVE;;IAEE;IACA;IACA;IACA;EHy9WJ;AACF;AG9oWE;EAhWE;IACE;IACA;IACA;IACA;EHi/WJ;AACF;AGtpWE;EAzVE;;IAEE;IACA;IACA;IACA;EHk/WJ;AACF;AG/pWE;EAjVE;;IAEE;IACA;IACA;IACA;EHm/WJ;AACF;AGxqWE;EAhWE;IACE;IACA;IACA;IACA;EH2gXJ;AACF;AGhrWE;EAzVE;;IAEE;IACA;IACA;IACA;EH4gXJ;AACF;AGzrWE;EAjVE;;IAEE;IACA;IACA;IACA;EH6gXJ;AACF;AGlsWE;EAhWE;IACE;IACA;IACA;IACA;EHqiXJ;AACF;AG1sWE;EAzVE;;IAEE;IACA;IACA;IACA;EHsiXJ;AACF;AGntWE;EAjVE;;IAEE;IACA;IACA;IACA;EHuiXJ;AACF;AG5tWE;EAhWE;IACE;IACA;IACA;IACA;EH+jXJ;AACF;AGpuWE;EAzVE;;IAEE;IACA;IACA;IACA;EHgkXJ;AACF;AG7uWE;EAjVE;;IAEE;IACA;IACA;IACA;EHikXJ;AACF;AGtvWE;EAhWE;IACE;IACA;IACA;IACA;EHylXJ;AACF;AG9vWE;EAzVE;;IAEE;IACA;IACA;IACA;EH0lXJ;AACF;AGvwWE;EAjVE;;IAEE;IACA;IACA;IACA;EH2lXJ;AACF;AGhxWE;EAhWE;IACE;IACA;IACA;IACA;EHmnXJ;AACF;AGxxWE;EAzVE;;IAEE;IACA;IACA;IACA;EHonXJ;AACF;AGjyWE;EAjVE;;IAEE;IACA;IACA;IACA;EHqnXJ;AACF;AG1yWE;EAhWE;IACE;IACA;IACA;IACA;EH6oXJ;AACF;AGlzWE;EAzVE;;IAEE;IACA;IACA;IACA;EH8oXJ;AACF;AG3zWE;EAjVE;;IAEE;IACA;IACA;IACA;EH+oXJ;AACF;AGp0WE;EAtUE;;;;IAEE;IACA;IACA;IACA;EH+oXJ;EG7oXE;;;;IAEE;IACA;IACA;IACA;EHipXJ;EG/oXE;;;;IAEE;IACA;IACA;IACA;EHmpXJ;EGjpXE;;;;IAEE;IACA;IACA;IACA;EHqpXJ;AACF;AG12WE;EAvSE;;;;IAEE;IACA;IACA;IACA;EHspXJ;EGppXE;;;;IAEE;IACA;IACA;IACA;EHwpXJ;EGtpXE;;;;IAEE;IACA;IACA;IACA;EH0pXJ;EGxpXE;;;;IAEE;IACA;IACA;IACA;EH4pXJ;AACF;AGh5WE;EA/aA;;;IAGE;IAKA;EHk0XF;AACF;AG55WE;EAraA;IACE;EHo0XF;AACF;AGj6WE;EAlaA;IACE;EHs0XF;AACF;AGr5WE;EA7gBE;IACE;EHq6XJ;;EGt6XE;IACE;EHy6XJ;;EG16XE;IACE;EH66XJ;;EG96XE;IACE;EHi7XJ;;EGl7XE;IACE;EHq7XJ;;EGt7XE;IACE;EHy7XJ;;EG17XE;IACE;EH67XJ;;EG97XE;IACE;EHi8XJ;;EGl8XE;IACE;EHq8XJ;;EGt8XE;IACE;EHy8XJ;;EG18XE;IACE;EH68XJ;;EG98XE;IACE;EHi9XJ;;EGl9XE;IACE;EHq9XJ;;EGt9XE;IACE;EHy9XJ;;EG19XE;IACE;EH69XJ;;EG99XE;IACE;EHi+XJ;;EGl+XE;IACE;EHq+XJ;;EGt+XE;IACE;EHy+XJ;;EG1+XE;IACE;EH6+XJ;;EG9+XE;IACE;EHi/XJ;;EGl/XE;IACE;EHq/XJ;;EGt/XE;IACE;EHy/XJ;;EG1/XE;IACE;EH6/XJ;;EG9/XE;IACE;EHigYJ;;EGlgYE;IACE;EHqgYJ;;EGtgYE;IACE;EHygYJ;;EG1gYE;IACE;EH6gYJ;;EG9gYE;IACE;EHihYJ;;EGlhYE;IACE;EHqhYJ;;EGthYE;IACE;EHyhYJ;;EG1hYE;IACE;EH6hYJ;;EG9hYE;IACE;EHiiYJ;;EGliYE;IACE;EHqiYJ;;EGtiYE;IACE;EHyiYJ;;EG1iYE;IACE;EH6iYJ;;EG9iYE;IACE;EHijYJ;;EGljYE;IACE;EHqjYJ;;EGtjYE;IACE;EHyjYJ;;EG1jYE;IACE;EH6jYJ;;EG9jYE;IACE;EHikYJ;;EGlkYE;IACE;EHqkYJ;;EG7iYE;IACE;EHgjYJ;;EGjjYE;IACE;EHojYJ;;EGrjYE;IACE;EHwjYJ;;EGzjYE;IACE;EH4jYJ;;EG7jYE;IACE;EHgkYJ;;EGjkYE;IACE;EHokYJ;;EGrkYE;IACE;EHwkYJ;;EGzkYE;IACE;EH4kYJ;;EG7kYE;IACE;EHglYJ;;EGjlYE;IACE;EHolYJ;;EGrlYE;IACE;EHwlYJ;;EGzlYE;IACE;EH4lYJ;;EG7lYE;IACE;EHgmYJ;;EGjmYE;IACE;EHomYJ;;EGrmYE;IACE;EHwmYJ;;EGzmYE;IACE;EH4mYJ;;EG7mYE;IACE;EHgnYJ;;EGjnYE;IACE;EHonYJ;;EGrnYE;IACE;EHwnYJ;;EGznYE;IACE;EH4nYJ;;EG1mYE;IACE;EH6mYJ;;EG3lYE;IACE;EH8lYJ;;EG95XA;;IAGE;IACA;IACA;EHg6XF;;EG75XA;;;;;IAKE;EHg6XF;;EG55XA;;;;;IAKE;EH+5XF;;EG35XA;;;;;IAKE;EH85XF;;EG15XA;;;;;IAKE;EH65XF;;EGz5XA;;;;;IAKE;EH45XF;;EGn5XA;;;;;IAKE;IACA;EHs5XF;;EGl5XA;;;;;IAKE;IACA;IACA;EHq5XF;EGl5XE;;;;;IACE;IACA;EHw5XJ;;EGn5XA;;;;;IAKE;IACA;EHs5XF;;EGl5XA;;;;;IAKE;IACA;EHq5XF;;EGj5XA;;;;;IAKE;IACA;EHo5XF;;EG3pYA;IACE;IACA;EH8pYF;AACF;AGtpYE;EACE;IACE;EHwpYJ;AACF;AGjwXE;EApZA;;IAEE;IACA;EHwpYF;AACF;AGxwXE;EA/YA;;IAEE;IACA;EH0pYF;AACF;AG/wXE;EA1YA;;IAEE;IACA;EH4pYF;AACF;AGtxXE;EArYA;;IAEE;IACA;EH8pYF;AACF;AG7xXE;EAhYA;;IAEE;IACA;EHgqYF;AACF;AGpyXE;EA3XA;;IAEE;IACA;EHkqYF;AACF;AG3yXE;EAjXE;IACE;IACA;IACA;IACA;EH+pYJ;AACF;AGnzXE;EA1WE;;IAEE;IACA;IACA;IACA;EHgqYJ;AACF;AG5zXE;EAlWE;;IAEE;IACA;IACA;IACA;EHiqYJ;AACF;AGr0XE;EAjXE;IACE;IACA;IACA;IACA;EHyrYJ;AACF;AG70XE;EA1WE;;IAEE;IACA;IACA;IACA;EH0rYJ;AACF;AGt1XE;EAlWE;;IAEE;IACA;IACA;IACA;EH2rYJ;AACF;AG/1XE;EAjXE;IACE;IACA;IACA;IACA;EHmtYJ;AACF;AGv2XE;EA1WE;;IAEE;IACA;IACA;IACA;EHotYJ;AACF;AGh3XE;EAlWE;;IAEE;IACA;IACA;IACA;EHqtYJ;AACF;AGz3XE;EAjXE;IACE;IACA;IACA;IACA;EH6uYJ;AACF;AGj4XE;EA1WE;;IAEE;IACA;IACA;IACA;EH8uYJ;AACF;AG14XE;EAlWE;;IAEE;IACA;IACA;IACA;EH+uYJ;AACF;AGn5XE;EAjXE;IACE;IACA;IACA;IACA;EHuwYJ;AACF;AG35XE;EA1WE;;IAEE;IACA;IACA;IACA;EHwwYJ;AACF;AGp6XE;EAlWE;;IAEE;IACA;IACA;IACA;EHywYJ;AACF;AG76XE;EAjXE;IACE;IACA;IACA;IACA;EHiyYJ;AACF;AGr7XE;EA1WE;;IAEE;IACA;IACA;IACA;EHkyYJ;AACF;AG97XE;EAlWE;;IAEE;IACA;IACA;IACA;EHmyYJ;AACF;AGv8XE;EAjXE;IACE;IACA;IACA;IACA;EH2zYJ;AACF;AG/8XE;EA1WE;;IAEE;IACA;IACA;IACA;EH4zYJ;AACF;AGx9XE;EAlWE;;IAEE;IACA;IACA;IACA;EH6zYJ;AACF;AGj+XE;EAjXE;IACE;IACA;IACA;IACA;EHq1YJ;AACF;AGz+XE;EA1WE;;IAEE;IACA;IACA;IACA;EHs1YJ;AACF;AGl/XE;EAlWE;;IAEE;IACA;IACA;IACA;EHu1YJ;AACF;AG3/XE;EAjXE;IACE;IACA;IACA;IACA;EH+2YJ;AACF;AGngYE;EA1WE;;IAEE;IACA;IACA;IACA;EHg3YJ;AACF;AG5gYE;EAlWE;;IAEE;IACA;IACA;IACA;EHi3YJ;AACF;AGrhYE;EAjXE;IACE;IACA;IACA;IACA;EHy4YJ;AACF;AG7hYE;EA1WE;;IAEE;IACA;IACA;IACA;EH04YJ;AACF;AGtiYE;EAlWE;;IAEE;IACA;IACA;IACA;EH24YJ;AACF;AG/iYE;EAjXE;IACE;IACA;IACA;IACA;EHm6YJ;AACF;AGvjYE;EA1WE;;IAEE;IACA;IACA;IACA;EHo6YJ;AACF;AGhkYE;EAlWE;;IAEE;IACA;IACA;IACA;EHq6YJ;AACF;AGzkYE;EAjXE;IACE;IACA;IACA;IACA;EH67YJ;AACF;AGjlYE;EA1WE;;IAEE;IACA;IACA;IACA;EH87YJ;AACF;AG1lYE;EAlWE;;IAEE;IACA;IACA;IACA;EH+7YJ;AACF;AGnmYE;EAjXE;IACE;IACA;IACA;IACA;EHu9YJ;AACF;AG3mYE;EA1WE;;IAEE;IACA;IACA;IACA;EHw9YJ;AACF;AGpnYE;EAlWE;;IAEE;IACA;IACA;IACA;EHy9YJ;AACF;AG7nYE;EAjXE;IACE;IACA;IACA;IACA;EHi/YJ;AACF;AGroYE;EA1WE;;IAEE;IACA;IACA;IACA;EHk/YJ;AACF;AG9oYE;EAlWE;;IAEE;IACA;IACA;IACA;EHm/YJ;AACF;AGvpYE;EAjXE;IACE;IACA;IACA;IACA;EH2gZJ;AACF;AG/pYE;EA1WE;;IAEE;IACA;IACA;IACA;EH4gZJ;AACF;AGxqYE;EAlWE;;IAEE;IACA;IACA;IACA;EH6gZJ;AACF;AGjrYE;EAjXE;IACE;IACA;IACA;IACA;EHqiZJ;AACF;AGzrYE;EA1WE;;IAEE;IACA;IACA;IACA;EHsiZJ;AACF;AGlsYE;EAlWE;;IAEE;IACA;IACA;IACA;EHuiZJ;AACF;AG3sYE;EAjXE;IACE;IACA;IACA;IACA;EH+jZJ;AACF;AGntYE;EA1WE;;IAEE;IACA;IACA;IACA;EHgkZJ;AACF;AG5tYE;EAlWE;;IAEE;IACA;IACA;IACA;EHikZJ;AACF;AGruYE;EAjXE;IACE;IACA;IACA;IACA;EHylZJ;AACF;AG7uYE;EA1WE;;IAEE;IACA;IACA;IACA;EH0lZJ;AACF;AGtvYE;EAlWE;;IAEE;IACA;IACA;IACA;EH2lZJ;AACF;AG/vYE;EAjXE;IACE;IACA;IACA;IACA;EHmnZJ;AACF;AGvwYE;EA1WE;;IAEE;IACA;IACA;IACA;EHonZJ;AACF;AGhxYE;EAlWE;;IAEE;IACA;IACA;IACA;EHqnZJ;AACF;AGzxYE;EAjXE;IACE;IACA;IACA;IACA;EH6oZJ;AACF;AGjyYE;EA1WE;;IAEE;IACA;IACA;IACA;EH8oZJ;AACF;AG1yYE;EAlWE;;IAEE;IACA;IACA;IACA;EH+oZJ;AACF;AGnzYE;EAjXE;IACE;IACA;IACA;IACA;EHuqZJ;AACF;AG3zYE;EA1WE;;IAEE;IACA;IACA;IACA;EHwqZJ;AACF;AGp0YE;EAlWE;;IAEE;IACA;IACA;IACA;EHyqZJ;AACF;AG70YE;EAvVE;;;;IAEE;IACA;IACA;IACA;EHyqZJ;EGvqZE;;;;IAEE;IACA;IACA;IACA;EH2qZJ;EGzqZE;;;;IAEE;IACA;IACA;IACA;EH6qZJ;EG3qZE;;;;IAEE;IACA;IACA;IACA;EH+qZJ;AACF;AGn3YE;E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;IACA;IACA;IACA;EHq4aJ;AACF;AGzhaE;EA1WE;;IAEE;IACA;IACA;IACA;EHs4aJ;AACF;AGliaE;EAlWE;;IAEE;IACA;IACA;IACA;EHu4aJ;AACF;AG3iaE;EAjXE;IACE;IACA;IACA;IACA;EH+5aJ;AACF;AGnjaE;EA1WE;;IAEE;IACA;IACA;IACA;EHg6aJ;AACF;AG5jaE;EAlWE;;IAEE;IACA;IACA;IACA;EHi6aJ;AACF;AGrkaE;EAjXE;IACE;IACA;IACA;IACA;EHy7aJ;AACF;AG7kaE;EA1WE;;IAEE;IACA;IACA;IACA;EH07aJ;AACF;AGtlaE;EAlWE;;IAEE;IACA;IACA;IACA;EH27aJ;AACF;AG/laE;EAjXE;IACE;IACA;IACA;IACA;EHm9aJ;AACF;AGvmaE;EA1WE;;IAEE;IACA;IACA;IACA;EHo9aJ;AACF;AGhnaE;EAlWE;;IAEE;IACA;IACA;IACA;EHq9aJ;AACF;AGznaE;EAjXE;IACE;IACA;IACA;IACA;EH6+aJ;AACF;AGjoaE;EA1WE;;IAEE;IACA;IACA;IACA;EH8+aJ;AACF;AG1oaE;EAlWE;;IAEE;IACA;IACA;IACA;EH++aJ;AACF;AGnpaE;EAjXE;IACE;IACA;IACA;IACA;EHugbJ;AACF;AG3paE;EA1WE;;IAEE;IACA;IACA;IACA;EHwgbJ;AACF;AGpqaE;EAlWE;;IAEE;IACA;IACA;IACA;EHygbJ;AACF;AG7qaE;EAjXE;IACE;IACA;IACA;IACA;EHiibJ;AACF;AGrraE;EA1WE;;IAEE;IACA;IACA;IACA;EHkibJ;AACF;AG9raE;EAlWE;;IAEE;IACA;IACA;IACA;EHmibJ;AACF;AGvsaE;EAjXE;IACE;IACA;IACA;IACA;EH2jbJ;AACF;AG/saE;EA1WE;;IAEE;IACA;IACA;IACA;EH4jbJ;AACF;AGxtaE;EAlWE;;IAEE;IACA;IACA;IACA;EH6jbJ;AACF;AGjuaE;EAjXE;IACE;IACA;IACA;IACA;EHqlbJ;AACF;AGzuaE;EA1WE;;IAEE;IACA;IACA;IACA;EHslbJ;AACF;AGlvaE;EAlWE;;IAEE;IACA;IACA;IACA;EHulbJ;AACF;AG3vaE;EAjXE;IACE;IACA;IACA;IACA;EH+mbJ;AACF;AGnwaE;EA1WE;;IAEE;IACA;IACA;IACA;EHgnbJ;AACF;AG5waE;EAlWE;;IAEE;IACA;IACA;IACA;EHinbJ;AACF;AGrxaE;EAjXE;IACE;IACA;IACA;IACA;EHyobJ;AACF;AG7xaE;EA1WE;;IAEE;IACA;IACA;IACA;EH0obJ;AACF;AGtyaE;EAlWE;;IAEE;IACA;IACA;IACA;EH2obJ;AACF;AG/yaE;EAjXE;IACE;IACA;IACA;IACA;EHmqbJ;AACF;AGvzaE;EA1WE;;IAEE;IACA;IACA;IACA;EHoqbJ;AACF;AGh0aE;EAlWE;;IAEE;IACA;IACA;IACA;EHqqbJ;AACF;AGz0aE;EAjXE;IACE;IACA;IACA;IACA;EH6rbJ;AACF;AGj1aE;EA1WE;;IAEE;IACA;IACA;IACA;EH8rbJ;AACF;AG11aE;EAlWE;;IAEE;IACA;IACA;IACA;EH+rbJ;AACF;AGn2aE;EAjXE;IACE;IACA;IACA;IACA;EHutbJ;AACF;AG32aE;EA1WE;;IAEE;IACA;IACA;IACA;EHwtbJ;AACF;AGp3aE;EAlWE;;IAEE;IACA;IACA;IACA;EHytbJ;AACF;AG73aE;EAjXE;IACE;IACA;IACA;IACA;EHivbJ;AACF;AGr4aE;EA1WE;;IAEE;IACA;IACA;IACA;EHkvbJ;AACF;AG94aE;EAlWE;;IAEE;IACA;IACA;IACA;EHmvbJ;AACF;AGv5aE;EAjXE;IACE;IACA;IACA;IACA;EH2wbJ;AACF;AG/5aE;EA1WE;;IAEE;IACA;IACA;IACA;EH4wbJ;AACF;AGx6aE;EAlWE;;IAEE;IACA;IACA;IACA;EH6wbJ;AACF;AGj7aE;EAvVE;;;;IAEE;IACA;IACA;IACA;EH6wbJ;EG3wbE;;;;IAEE;IACA;IACA;IACA;EH+wbJ;EG7wbE;;;;IAEE;IACA;IACA;IACA;EHixbJ;EG/wbE;;;;IAEE;IACA;IACA;IACA;EHmxbJ;AACF;AGv9aE;EAxTE;;;;IAEE;IACA;IACA;IACA;EHoxbJ;EGlxbE;;;;IAEE;IACA;IACA;IACA;EHsxbJ;EGpxbE;;;;IAEE;IACA;IACA;IACA;EHwxbJ;EGtxbE;;;;IAEE;IACA;IACA;IACA;EH0xbJ;AACF;AG7/aE;EAhcA;;;IAGE;IAKA;EHg8bF;AACF;AGzgbE;EAtbA;IACE;EHk8bF;AACF;AG9gbE;EAnbA;IACE;EHo8bF;AACF;AGnhbE;EAWI;;;;;IACE;EH+gbN;AACF;AG5hbE;EAeE;IACE;EHghbJ;AACF;AAtjcA;AAQgB;EACQ;EACA;AAijcxB;AA/icgB;EACQ;AAijcxB;AA3icA;EACQ;AA8icR;AA3icQ;EAEQ;AA6ichB;AA1icA;EACQ;AA6icR;AC35YE;EAII;AD25YN;ACrqYE;EACE;ADuqYJ;ACrqYI;EAEE;ADsqYN;AClqYI;EACE;ADoqYN;ACjqYI;EACE;EACA;ADmqYN;AChqYI;EACE;ADkqYN;AC9pYE;EACE;ADgqYJ;AC7pYE;EACE;AD+pYJ;AC5pYE;EACE;AD8pYJ;AClnYE;EACE;ADonYJ;ACjnYE;EACE;ADmnYJ;AChkYE;EACE;ADkkYJ;AChkYI;EACE;ADkkYN;AC9jYE;EACE,cAZe;AD4kYnB;AC7jYE;;EAEE;AD+jYJ;ACvjYE;;;;EAIE;ADyjYJ;ACtjYE;;EAEE;ADwjYJ;ACnjYI;;EACE,mBAxCa;AD8lYnB;ACx0OE;EAIE;EACA;ADu0OJ;ACh0OI;EAn4MF;ADssbF;ACn0OI;EAn4MF;ADysbF;ACt0OI;EAn4MF;AD4sbF;ACz0OI;EAn4MF;AD+sbF;AC50OI;EAn4MF;ADktbF;AC/0OI;EAn4MF;ADqtbF;ACl1OI;EAn4MF;ADwtbF;ACr1OI;EAn4MF;AD2tbF;ACx1OI;EAn4MF;AD8tbF;AC31OI;EAn4MF;ADiubF;AC91OI;EAn4MF;ADoubF;ACj2OI;EAn4MF;ADuubF;ACp2OI;EAn4MF;AD0ubF;ACv2OI;EAn4MF;AD6ubF;AC12OI;EAn4MF;ADgvbF;AC72OI;EAn4MF;ADmvbF;ACh3OI;EAn4MF;ADsvbF;ACn3OI;EAn4MF;ADyvbF;ACt3OI;EAn4MF;AD4vbF;ACz3OI;EAn4MF;AD+vbF;AC53OI;EAn4MF;ADkwbF;AC/3OI;EAn4MF;ADqwbF;ACl4OI;EAn4MF;ADwwbF;ACr4OI;EAn4MF;AD2wbF;ACx4OI;EAn4MF;AD8wbF;ACp4OI;EACE;ADs4ON;AC34XE;EAEE;EACA;AD64XJ;ACnwbE;EAnBA;ADyxbF;ACz4XI;EACE;AD24XN;ACz4XM;EACE;AD24XR;AC5wXE;EACE;EACA;AD8wXJ;AChncI;EAq2EE;EACA;AD8wXN;ACzwXI;EACE;EACA;AD4wXN;ACvwXI;EACE;EACA;ADywXN;ACrwXE;EACE;ADuwXJ;ACnwXI;EACE;ADqwXN;AChwXI;EAWI;EAMF;ADmvXN;AC/uXE;EACE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;ADivXJ;AC9uXE;;EAEE;ADgvXJ;AC3uXE;EAEE;AD4uXJ;AC34XE;EACE,WANmB;EAOnB,YAPmB;EAQnB,iBARmB;ADq5XvB;ACz4XI;EACE;AD24XN;ACt4XI;EACE;ADw4XN;ACn4XI;EACE;ADq4XN;ACh4XI;EACE;EACA;ADk4XN;AC73XI;EACE;AD+3XN;AC13XI;EACE;EACA;AD43XN;ACt3XM;EACE;ADw3XR;ACn3XM;EACE;EACA;ADq3XR;ACh3XM;EACE;ADk3XR;AC72XM;EACE;EACA;AD+2XR;ACl7XE;EACE,WAPqB;EAQrB,YARqB;EASrB,iBATqB;AD67XzB;ACh7XI;EACE;ADk7XN;AC76XI;EACE;AD+6XN;AC16XI;EACE;AD46XN;ACv6XI;EACE;EACA;ADy6XN;ACp6XI;EACE;ADs6XN;ACj6XI;EACE;EACA;ADm6XN;AC75XM;EACE;AD+5XR;AC15XM;EACE;EACA;AD45XR;ACv5XM;EACE;ADy5XR;ACp5XM;EACE;EACA;ADs5XR;ACz9XE;EACE,WALmB;EAMnB,YANmB;EAOnB,iBAPmB;ADk+XvB;ACv9XI;EACE;ADy9XN;ACp9XI;EACE;ADs9XN;ACj9XI;EACE;ADm9XN;AC98XI;EACE;EACA;ADg9XN;AC38XI;EACE;AD68XN;ACx8XI;EACE;EACA;AD08XN;ACp8XM;EACE;ADs8XR;ACj8XM;EACE;EACA;ADm8XR;AC97XM;EACE;ADg8XR;AC37XM;EACE;EACA;AD67XR;ACjyXE;EAjqEA;EAmqEE;EACA;ADmyXJ;ACrqXE;EAKE;EACA;ADmqXJ;ACnsXE;EACE;ADqsXJ;ACnsXE;EACE;ADqsXJ;ACnsXE;EACE;ADqsXJ;ACjsXI;EAEE;ADksXN;ACrwXE;EACE;ADuwXJ;ACpwXE;EACE;ADswXJ;ACnwXE;EACE;ADqwXJ;AClwXE;EACE;ADowXJ;ACnrXI;EACE,YAxGuB;EAyGvB;ADqrXN;ACjrXE;EACE;ADmrXJ;AC9qXE;EACE;ADgrXJ;AC7qXE;EAEE;EACA;AD8qXJ;ACzuXE;EACE;AD2uXJ;ACzuXE;EACE;AD2uXJ;ACzuXE;EACE;AD2uXJ;ACvuXI;EAEE;ADwuXN;ACrvXE;EACE;ADuvXJ;ACrvXE;EACE;ADuvXJ;ACrvXE;EACE;ADuvXJ;ACnvXI;EAEE;ADovXN;ACtxXE;EAXA,0CADmB;ADqyXrB;ACrxXE;EAfA,0CADmB;ADwyXrB;ACpxXE;EAnBA,0CADmB;AD2yXrB;AC//bE;EAnBA;ADqhcF;AClgcE;EAnBA;ADwhcF;ACrgcE;EAnBA;AD2hcF;ACxgcE;EAnBA;AD8hcF;AC3gcE;EAnBA;ADiicF;AC9gcE;EAnBA;ADoicF;ACjhcE;EAnBA;ADuicF;AC9jXE;;EAz+EA;AD2icF;AC7jXE;;EAEE;AD+jXJ;AC5jXE;EACE;AD8jXJ;AC5jXI;EACE;AD8jXN;AC1jXE;EACE;EACA;AD4jXJ;AC1jXI;EACE;AD4jXN;ACxjXE;EACE;AD0jXJ;ACvjXE;EACE;EACA;ADyjXJ;ACrjXI;EACE;EACA;EACA;ADujXN;ACnjXE;EACE;EACA;ADqjXJ;ACnjXI;EACE;ADqjXN;ACjjXE;EACE;EACA;ADmjXJ;ACjjXI;EACE;ADmjXN;AChjXI;EACE;ADkjXN;AC9iXE;;EAEE;ADgjXJ;AC1/WE;EAEE;EACA;AD2/WJ;AC9kcE;EAnBA;ADomcF;ACjlcE;EAnBA;ADumcF;ACz/WE;EACE;AD2/WJ;ACl7WE;EACE;ADo7WJ;ACj7WE;EACE,aAdoB;ADi8WxB;ACh7WE;EAGE;ADg7WJ;AC76WE;EACE,yBAxBoB;ADu8WxB;AC36WI;EACE;AD66WN;AC16WI;EACE;AD46WN;ACz6WI;EACE;AD26WN;ACp6WM;EACE,yBAtCW;AD48WnB;ACj6WM;EACE,qBA5CW;AD+8WnB;AC/5WI;EACE;ADi6WN;AC35WE;EACE;AD65WJ;ACx5WI;;EACE;AD25WN;ACx5WI;;EACE;AD25WN;ACx5WI;;EACE;AD25WN;ACj0WE;EA3CA,yBAwCwB;EAvCxB,YAwCwB;ADu0W1B;AC72WE;EACE,YAqCsB;EApCtB;AD+2WJ;ACr0WM;EA11FJ;ADkqcF;ACp0WM;EACE;ADs0WR;ACl0WI;EACE;ADo0WN;ACj0WI;EACE;ADm0WN;AC9zWI;EAlEF,yBAwBwE;EAvBxE,YAuBiC;AD42WnC;ACj4WE;EACE,YAoB+B;EAnB/B;ADm4WJ;AC92WE;EATA,0CADmB;AD23WrB;ACr0WI;EAtEF,yBAwBwE;EAvBxE,YAuBiC;ADu3WnC;AC54WE;EACE,YAoB+B;EAnB/B;AD84WJ;ACz3WE;EATA,0CADmB;ADs4WrB;AC50WI;EA1EF,yBAwBwE;EAvBxE,YAuBiC;ADk4WnC;ACv5WE;EACE,YAoB+B;EAnB/B;ADy5WJ;ACp4WE;EATA,0CADmB;ADi5WrB;AC3vWE;EACE;AD6vWJ;AC1vWE;;;;EAIE;AD4vWJ;ACzvWE;;EAEE;AD2vWJ;ACxvWE;EACE;AD0vWJ;ACvvWE;EACE;ADyvWJ;AC/oWE;EACE;ADipWJ;AC5oWE;;;EAGE;AD8oWJ;AC3oWE;EACE;AD6oWJ;AC1oWE;EACE;AD4oWJ;ACzoWE;EACE;AD2oWJ;ACxoWE;;EAEE;EACA;AD0oWJ;AChrWE;EA2CI,+BAlCa;AD0qWnB;ACpoWE;EACE,+BAvCe;AD6qWnB;ACnoWE;EAOI;AD+nWN;ACzrWE;EAqEI;ADunWN;AC5rWE;EA8EM;ADinWR;AChiWE;EACE,iCAtMA;ADwuWJ;AC/hWE;;EAEE,kCAViB;AD2iWrB;AC9hWE;;EAEE;ADgiWJ;AC7hWE;;EAEE;AD+hWJ;AC5hWE;;EAEE,mBAxBc;ADsjWlB;AC3hWE;;EAEE,mBA5BuB;ADyjW3B;AC1vWE;EACE;EACA;AD4vWJ;ACzvWE;EAII;ADwvWN;AC/uWE;EACE;ADivWJ;AChuWE;;;EARM;AD6uWR;ACzoWE;EAjqGA;EAmqGE;EACA;AD2oWJ;AC3kWE;EACE,iCAtMA;ADmxWJ;AC1kWE;;EAEE,kCAViB;ADslWrB;ACzkWE;;EAEE;AD2kWJ;ACxkWE;;EAEE;AD0kWJ;ACvkWE;;EAEE,mBAxBc;ADimWlB;ACtkWE;;EAEE,mBA5BuB;ADomW3B;ACryWE;EACE;EACA;ADuyWJ;ACpyWE;EAII;ADmyWN;AC1xWE;EACE;AD4xWJ;AC3wWE;;;EARM;ADwxWR;ACjnWE;EACE,kCAtMA;ADyzWJ;AChnWE;;EAEE,kCAViB;AD4nWrB;AC/mWE;;EAEE;ADinWJ;AC9mWE;;EAEE;ADgnWJ;AC7mWE;;EAEE,mBAxBc;ADuoWlB;AC5mWE;;EAEE,mBA5BuB;AD0oW3B;AC30WE;EACE;EACA;AD60WJ;AC10WE;EAII;ADy0WN;ACh0WE;EACE;ADk0WJ;ACjzWE;;;EARM;AD8zWR;AC5sWE;EA/qGA;AD83cF;AC3sWE;EACE;AD6sWJ;AC3sWI;EACE;AD6sWN;AC1sWI;EACE;AD4sWN;ACxsWE;EACE;AD0sWJ;ACvmWE;EAnyGA;EAqyGE;EACA;ADymWJ;ACx+WE;EACE;AD0+WJ;ACv+WE;EACE;ADy+WJ;ACpiWE;EAEE;EACA;ADqiWJ;ACt4cE;EAnBA;AD45cF;ACriWE;EACE;ADuiWJ;AChiWM;EACE;ADkiWR;AC3hWE;EACE;IAEE;ED4hWJ;AACF;ACzhWE;EACE;AD2hWJ;ACxhWE;;EAEE;AD0hWJ;ACvhWE;EACE;ADyhWJ;ACvhWI;;EAEE;ADyhWN;ACp8QE;EACE,+BAXY;ADi9QhB;ACn8QE;EACE,+BAfY;ADo9QhB;ACl8QE;EACE,cAlBoB;ADs9QxB;ACl8QI;EACE,cAhBqB;ADo9Q3B;ACj8QI;EACE,cAnBmB;ADs9QzB;AC/7QE;EACE,cA7BqB;AD89QzB;AC97QE;EACE,uBA9BqB;AD89QzB;AC57QI;EACE,yBAhCsB;AD89Q5B;AC57QM;EACE,yBArCmB;ADm+Q3B;AC37QM;EACE,yBAxCiB;ADq+QzB;ACv7QI;EACE,cA9CsB;ADu+Q5B;ACt7QI;EACE,cApDqB;AD4+Q3B;ACr7QI;EACE,cAvDmB;AD8+QzB;AC/6QI;EACE,cAhEmB;ADi/QzB;AC/6QM;;EAEE,cApEiB;ADq/QzB;AC76QI;;EAEE,yBA1EmB;ADy/QzB;AC36QE;EACE,cA/EqB;AD4/QzB;ACj5RI;EACE,+BALU;ADw5RhB;ACh5RI;EACE,+BATU;AD25RhB;AC/4RI;EACE,0CAZc;AD65RpB;AC94RI;EA5/DF;EACA;EACA;AD64VF;AC9jRI;EACE,0CAJc;ADokRpB;AC7jRI;EAr1EF;EACA;EACA;ADq5VF;ACliSI;EACE,0CAPc;AD2iSpB;ACjiSI;EACE,2CAVuB;AD6iS7B;AChiSI;EACE,0CAbc;AD+iSpB;AC9hSM;EACE,+BAjBiB;ADijSzB;AC7hSM;EACE;AD+hSR;ACxuRI;EACE,+BATY;ADmvRlB;ACvuRI;EACE,YAZkB;ADqvRxB;ACruRM;EACE,cAhBkB;ADuvR1B;ACpuRM;EACE,cAnBiB;ADyvRzB;ACnuRM;EACE,cAtBe;AD2vRvB;AC/tRM;EACE,cA7Be;AD8vRvB;AC5tRM;EACE,+BAxCiB;ADswRzB;AC3tRM;EACE,gCAtCmB;ADmwR3B;AC7+VI;EACE;AD++VN;AC5+VI;EACE;AD8+VN;AC3+VI;EACE;AD6+VN;ACh4VE;EACE;ADk4VJ;AC/3VE;;EAEE;ADi4VJ;AC93VE;EACE;ADg4VJ;ACz7VE;EA4DI;ADg4VN;AC57VE;EA4DI;ADg4VN;AC57VE;EA4DI;ADg4VN;ACx7VE;EAwDI;ADm4VN;ACv7VE;EAoDI;ADs4VN;ACt7VE;EAgDI;ADy4VN;ACh4VM;EACE,0BAnnHY;ADq/cpB;AC/3VM;EACE,0BArnHa;ADs/crB;AC53VE;EACE;AD83VJ;AC33VE;;EAEE;AD63VJ;AC13VE;EACE;AD43VJ;ACt0VI;EACE;ADw0VN;ACr0VI;EACE;ADu0VN;ACp0VI;EACE;ADs0VN;ACl0VE;EACE;ADo0VJ;AC9zVI;;;;;EACE;ADo0VN;AC/zVI;EACE;ADi0VN;ACxuVE;EAEE;ADyuVJ;AC5ldE;EAnBA;ADkndF;ACzuVE;EACE;EACA;AD2uVJ;ACxuVM;;EAGE;ADyuVR;ACpuVE;;EAEE;ADsuVJ;AC/tVI;;;;EACE;ADouVN;ACrqVE;EACE;ADuqVJ;ACpqVE;;EAEE;ADsqVJ;ACnqVE;;EAEE;EACA;ADqqVJ;AClqVE;;EAEE;ADoqVJ;AChqVI;;;;EAIE;ADkqVN;AC1mVE;EACE;AD4mVJ;ACzmVE;EACE;AD2mVJ;ACxmVE;EACE;AD0mVJ;ACtmVI;EACE;ADwmVN;ACrmVI;EACE;ADumVN;ACpmVI;EACE;ADsmVN;ACjmVI;EACE;ADmmVN;AChmVI;EACE;ADkmVN;AC/lVI;EACE;ADimVN;ACzjVI;EACE;AD2jVN;ACxjVI;EACE;AD0jVN;ACvjVI;EACE;ADyjVN;ACngVE;EACE;ADqgVJ;AC1hVE;EACE;AD4hVJ;ACzhVE;;EAIE;ADyhVJ;ACjiVE;EACE;ADmiVJ;AChiVE;;EAIE;ADgiVJ;ACxiVE;EACE;AD0iVJ;ACviVE;;EAIE;ADuiVJ;ACtgVM;;EAEE;ADwgVR;ACrgVM;;EAEE;ADugVR;ACpgVM;EACE;ADsgVR;AChgVI;EACE;ADkgVN;ACj9UE;EACE;ADm9UJ;ACh9UE;EACE;ADk9UJ;AC/8UE;EACE;ADi9UJ;AC98UE;EACE;ADg9UJ;AC78UE;EACE;AD+8UJ;AChudE;EAnBA;ADsvdF;AC/8UI;EACE;ADi9UN;AC38UM;EACE;AD68UR;AC18UM;EACE;AD48UR;ACz8UM;EACE;AD28UR;ACv8UI;EACE;ADy8UN;ACt8UI;EACE;ADw8UN;AC94UE;EACE,yBALmC;EAMnC;ADg5UJ;AC74UE;EACE,yBAXwB;EAYxB;AD+4UJ;AC74UI;EACE,yBAb2B;AD45UjC;AC54UI;EAv4IF;ADsxdF;ACx4UE;EACE,iDAvBmB;ADi6UvB;ACx4UI;EACE,gDA1BiB;EA2BjB;AD04UN;ACt4UE;EACE,gDAhCmB;EAiCnB;ADw4UJ;ACt4UI;EACE;EACA,iDArCiB;AD66UvB;ACp4UE;EAQI;AD+3UN;ACr1UI;EACE;ADu1UN;ACp1UI;EAGE;ADo1UN;ACj1UI;EAGE;ADi1UN;AC91UI;EACE;ADg2UN;AC71UI;EAGE;AD61UN;AC11UI;EAGE;AD01UN;ACv2UI;EACE;ADy2UN;ACt2UI;EAGE;ADs2UN;ACn2UI;EAGE;ADm2UN;AC9zUI;EAGE,uBAhBqB;AD80U3B;AC1zUE;EA5gJA;EA8gJE;AD4zUJ;ACzzUE;EACE,0CA3BoB;ADs1UxB;AC5uUE;EACE,0CAVqB;ADwvUzB;ACvxUE;;;EAGE;ADyxUJ;ACtxUE;EACE;ADwxUJ;ACrxUE;EAGE,uCADQ;ADsxUZ;AClyUE;;;EAGE;ADoyUJ;ACjyUE;EACE;ADmyUJ;AChyUE;EAGE,uCADQ;ADiyUZ;AC7yUE;;;EAGE;AD+yUJ;AC5yUE;EACE;AD8yUJ;AC3yUE;EAGE,wCADQ;AD4yUZ;AC9vUI;;EACE,0CA3B2B;AD4xUjC;AC5vUI;;;EAGE,0CAlCwB;ADgyU9B;AC1vUM;EACE,0CAvCsB;ADmyU9B;ACtvUI;EAGE,2CADQ;ADuvUd;AC5uUM;;EAEE,uBA3DqC;ADyyU7C;AC1uUQ;;EAEE,0CAhEyC;AD4yUnD;ACtuUM;EACE,sCA3EiB;EA4EjB;ADwuUR;ACnuUQ;EACE,sCAjFuB;ADszUjC;ACluUQ;EACE,sCApFoB;ADwzU9B;AC9tUE;EACE,sCAvFsB;ADuzU1B;ACvtUE;EACE;EAIA;ADstUJ;AC5sUE;EACE;AD8sUJ;ACtnUI;EAGE;ADsnUN;AChnUI;EACE;IACE;EDknUN;AACF;AC/mUI;;EAIE;AD+mUN;AC5mUI;EAGE;EACA;AD4mUN;ACzmUI;;;EAGE;EACA;AD2mUN;ACvmUM;EACE;ADymUR;ACtmUM;;;EAGE;EACA;ADwmUR;ACnmUM;EACE;ADqmUR;AClmUM;;;EAGE;EACA;ADomUR;AChmUI;EACE;EACA;ADkmUN;AC/lUI;EACE;ADimUN;AC9lUI;EACE;ADgmUN;AC5lUE;EACE;AD8lUJ;AC3lUE;EACE;AD6lUJ;AC1lUE;;;EAGE;AD4lUJ;AC5/TE;EAYI;ADm/TN;ACt8TE;;EAEE,kDAJc;AD48TlB;ACp8TI;;EAEE,+CAVY;EAWZ;ADs8TN;ACl8TE;EACE;ADo8TJ;ACl8TI;EACE;ADo8TN;ACh8TE;EACE;ADk8TJ;AC/7TE;EACE;ADi8TJ;AC77TE;;EAEE;EACA;AD+7TJ;ACn5TM;;;;;EACE;ADy5TR;ACp6TE;EACE;ADs6TJ;ACv6TE;EACE;ADy6TJ;ACh6TM;;;;;EACE;ADs6TR;ACj7TE;EACE;ADm7TJ;ACp7TE;EACE;ADs7TJ;AC76TM;;;;;EACE;ADm7TR;AC97TE;EACE;ADg8TJ;ACj8TE;EACE;ADm8TJ;AC17TM;;;;;EACE;ADg8TR;ACx7TE;EACE;AD07TJ;ACt7TE;EACE;ADw7TJ;ACt7TI;EACE;ADw7TN;ACn7TE;EACE;ADq7TJ;ACl7TE;EACE;ADo7TJ;AC/6TE;EACE;ADi7TJ;ACn9TM;;;;;EACE;ADy9TR;ACj9TE;EACE;ADm9TJ;AC/8TE;EACE;ADi9TJ;AC/8TI;EACE;ADi9TN;AC58TE;EACE;AD88TJ;AC38TE;EACE;AD68TJ;ACx8TE;EACE;AD08TJ;AC5+TM;;;;;EACE;ADk/TR;AC1+TE;EACE;AD4+TJ;ACx+TE;EACE;AD0+TJ;ACx+TI;EACE;AD0+TN;ACr+TE;EACE;ADu+TJ;ACp+TE;EACE;ADs+TJ;ACj+TE;EACE;ADm+TJ;AC72TE;EACE;EACA;AD+2TJ;AC72TI;EApCF;EACA;ADo5TF;AC72TI;EAxCF;EACA;ADw5TF;AC72TI;EA5CF;EACA;AD45TF;ACx5TE;;;EAGE;AD05TJ;ACv5TE;;;;;EAKE;ADy5TJ;ACt5TE;EACE;ADw5TJ;ACjzTE;EACE;ADmzTJ;ACp5RE;EACE;ADs5RJ;ACn5RE;;EAEE;ADq5RJ;ACrwTE;EAGE;EACA;EAh5KF;ADspeF;ACjwTE;EACE;ADmwTJ;AKhnfE;EACE;ALknfJ;AMnpfE;EAEI;EACA;ANopfN;AOxpfE;EAEI;EACA;EACA;EAGF;APupfJ;AOrpfE;EAEI;EACA;EACA;APspfN;AOnpfE;EAEI;EACA;EACA;APopfN;AQvqfE;EAEI;EACA;EACA;ARwqfN;AQrqfE;EAEI;EACA;EACA;EAGF;ARoqfJ;AShrfE;EAEI;EACA;EACA;ATirfN;AS9qfE;EAEI;EACA;EACA;AT+qfN;AU5rfE;EAEI;EACA;AV6rfN;AWhsfE;EAEI;EACA;EACA;EAGF;AX+rfJ;AW7rfE;EAEI;EACA;AX8rfN;AY1sfE;EAEI;EACA;AZ2sfN;Aa7sfE;EAEI;EACA;EACA;Ab8sfN;Aa3sfE;EAEI;EACA;EAGF;Ab0sfJ;ActtfI;EAEI;EACA;AdutfR;AcptfI;EAEI;EACA;EACA;EAGF;AdmtfN;AcjtfI;EAEI;EACA;EACA;EAGF;AdgtfN;AexufI;EACE;EACA;Af0ufN;AgBvufI;;EACE;AhB0ufN;AgBzufM;;EACE;AhB4ufR;AgBvufI;EACE;AhByufN;AcntfE;EACE;AdqtfJ;AcltfE;EACE;AdotfJ;AcntfI;EACE;EACA;AdqtfN;Ac3sfI;;;;;;EbicF;Ea9bI;AditfN;ActsfM;;;;;;;;;;;EAEE;AditfR;Ac3sfI;;EACE;EACA;EACA;Ad8sfN;Ac3sfE;EbqaA;ADyyeF;Ac3sfE;EACE;EACA;EbgaF;AD8yeF;Ac5sfI;EACE;Ad8sfN;Ac7sfM;;EAEE;Ad+sfR;Ac5sfI;EACE;Ad8sfN;Ac7sfM;;EAEE;Ad+sfR;Ac5sfI;EACE;Ad8sfN;Ac7sfM;;EAEE;Ad+sfR;AalyfI;;;EAGE,YI1BI;AjB8zfV;AajyfI;EACE;AbmyfN;AajyfI;EACE;AbmyfN;Aa7xfQ;EACE;Ab+xfV;Aa1xfM;EACE;Ab4xfR;Aa1xfM;EAEE;Ab2xfR;AaxxfQ;EACE;Ab0xfV;AaxxfQ;EACE;Ab0xfV;AavxfU;EAEE;AbwxfZ;AapxfU;EAEE;AbqxfZ;AajxfM;EACE;AbmxfR;AahxfI;EACE;AbkxfN;AajxfM;EACE;AbmxfR;AajxfM;EACE;AbmxfR;AajxfM;EACE;AbmxfR;AahxfI;EACE;AbkxfN;AahxfI;EACE;AbkxfN;Aa/wfI;EACE;AbixfN;Aa/wfI;EACE;AbixfN;AS51fI;EACE;AT81fN;AS51fQ;EACE,mBQ5BA;AjB03fV;AS11fQ;EACE,gBQjCA;AjB63fV;ASt1fE;ER+cA;EQ5cE;ATu1fJ;ASr1fM;EAEE;ATs1fR;ASn1fQ;EACE;ATq1fV;ASl1fU;EAEE;ATm1fZ;AS90fI;EACE;ATg1fN;AS50fM;;;EAEE;AT+0fR;AS50fI;EACE;AT80fN;AMn4fI;EACE;EACA;ANq4fN;AMn4fQ;EACE;ANq4fV;AMn4fQ;EACE;ANq4fV;AMp4fU;;EAEE;ANs4fZ;AMn4fQ;EACE;ANq4fV;AMp4fU;;EAEE;ANs4fZ;AMn4fQ;EACE;ANq4fV;AMp4fU;;EAEE;ANs4fZ;AMl4fM;EACE;ANo4fR;AMn4fQ;EACE;ANq4fV;AMj4fI;EACE;ANm4fN;AMh4fM;EACE;ANk4fR;AM93fM;EACE;ANg4fR;AM53fM;EACE;AN83fR;AM13fM;EACE;AN43fR;AM13fM;EACE;AN43fR;AkBr8fM;EACE;AlBu8fR;AkBn8fE;EACE;;GAAA;AlBu8fJ;AkBp8fI;EACE;EjBweJ;AD+9eF;AQ/7fE;EACE;ARi8fJ;AU18fI;;;;EAIE;AV48fN;AUx8fQ;EAEE;AVy8fV;AUv8fQ;EACE;AVy8fV;AUr8fI;EACE;AVu8fN;AUp8fM;EACE;AVs8fR;AUp8fM;EACE;AVs8fR;AUp8fM;EACE;AVs8fR;AUp8fM;;EAEE;AVs8fR;AUp8fM;EACE;AVs8fR;AUp8fM;EACE;AVs8fR;AY3+fI;EAEE;AZ4+fN;AmB7/fI;EACE;AnB+/fN;AOj+fE;EACE;APm+fJ;AOj+fE;EACE;APm+fJ;AOh+fI;EACE;EACA;APk+fN;AO99fM;EACE;APg+fR;AO39fI;;EAEE;AP69fN;AO39fI;;EAEE;AP69fN;AO59fM;;EACE;AP+9fR;AO19fQ;EACE;AP49fV;AOx9fI;EACE;AP09fN;AOz9fM;EACE;AP29fR;AOx9fQ;EACE;AP09fV;AOv9fM;EAEE;APw9fR;AOp9fM;EACE;APs9fR;AOp9fM;EACE;APs9fR;AOl9fM;EACE;APo9fR;AOh9fE;EACE;EACA;APk9fJ;AOh9fE;EACE;EAKA;AP88fJ;AoBnjgBE;EnBgfA;ADskfF;AoBpjgBI;EACE;EACA;ApBsjgBN;AoBpjgBI;EACE;EACA;ApBsjgBN;AoBpjgBI;EACE;EACA;ApBsjgBN;AWljgBI;EACE;EACA;AXojgBN;AWljgBI;EACE;EACA;AXojgBN;AWljgBI;EACE;EACA;AXojgBN;AA5/fA;EACQ;EACA;EACA;AA+/fR;AA5/fA;EACQ;AA+/fR,C","file":"styles.css","sourcesContent":[".mat-badge-content{font-weight:600;font-size:12px;font-family:Roboto, \"Helvetica Neue\", sans-serif}.mat-badge-small .mat-badge-content{font-size:9px}.mat-badge-large .mat-badge-content{font-size:24px}.mat-h1,.mat-headline,.mat-typography h1{font:400 24px/32px Roboto, \"Helvetica Neue\", sans-serif;letter-spacing:normal;margin:0 0 16px}.mat-h2,.mat-title,.mat-typography h2{font:500 20px/32px Roboto, \"Helvetica Neue\", sans-serif;letter-spacing:normal;margin:0 0 16px}.mat-h3,.mat-subheading-2,.mat-typography h3{font:400 16px/28px Roboto, \"Helvetica Neue\", sans-serif;letter-spacing:normal;margin:0 0 16px}.mat-h4,.mat-subheading-1,.mat-typography h4{font:400 15px/24px Roboto, \"Helvetica Neue\", sans-serif;letter-spacing:normal;margin:0 0 16px}.mat-h5,.mat-typography h5{font:400 calc(14px * 0.83)/20px Roboto, \"Helvetica Neue\", sans-serif;margin:0 0 12px}.mat-h6,.mat-typography h6{font:400 calc(14px * 0.67)/20px Roboto, \"Helvetica Neue\", sans-serif;margin:0 0 12px}.mat-body-strong,.mat-body-2{font:500 14px/24px Roboto, \"Helvetica Neue\", sans-serif;letter-spacing:normal}.mat-body,.mat-body-1,.mat-typography{font:400 14px/20px Roboto, \"Helvetica Neue\", sans-serif;letter-spacing:normal}.mat-body p,.mat-body-1 p,.mat-typography p{margin:0 0 12px}.mat-small,.mat-caption{font:400 12px/20px Roboto, \"Helvetica Neue\", sans-serif;letter-spacing:normal}.mat-display-4,.mat-typography .mat-display-4{font:300 112px/112px Roboto, \"Helvetica Neue\", sans-serif;letter-spacing:-0.05em;margin:0 0 56px}.mat-display-3,.mat-typography .mat-display-3{font:400 56px/56px Roboto, \"Helvetica Neue\", sans-serif;letter-spacing:-0.02em;margin:0 0 64px}.mat-display-2,.mat-typography .mat-display-2{font:400 45px/48px Roboto, \"Helvetica Neue\", sans-serif;letter-spacing:-0.005em;margin:0 0 64px}.mat-display-1,.mat-typography .mat-display-1{font:400 34px/40px Roboto, \"Helvetica Neue\", sans-serif;letter-spacing:normal;margin:0 0 64px}.mat-bottom-sheet-container{font:400 14px/20px Roboto, \"Helvetica Neue\", sans-serif;letter-spacing:normal}.mat-button,.mat-raised-button,.mat-icon-button,.mat-stroked-button,.mat-flat-button,.mat-fab,.mat-mini-fab{font-family:Roboto, \"Helvetica Neue\", sans-serif;font-size:14px;font-weight:500}.mat-button-toggle{font-family:Roboto, \"Helvetica Neue\", sans-serif}.mat-card{font-family:Roboto, \"Helvetica Neue\", sans-serif}.mat-card-title{font-size:24px;font-weight:500}.mat-card-header .mat-card-title{font-size:20px}.mat-card-subtitle,.mat-card-content{font-size:14px}.mat-checkbox{font-family:Roboto, \"Helvetica Neue\", sans-serif}.mat-checkbox-layout .mat-checkbox-label{line-height:24px}.mat-chip{font-size:14px;font-weight:500}.mat-chip .mat-chip-trailing-icon.mat-icon,.mat-chip .mat-chip-remove.mat-icon{font-size:18px}.mat-table{font-family:Roboto, \"Helvetica Neue\", sans-serif}.mat-header-cell{font-size:12px;font-weight:500}.mat-cell,.mat-footer-cell{font-size:14px}.mat-calendar{font-family:Roboto, \"Helvetica Neue\", sans-serif}.mat-calendar-body{font-size:13px}.mat-calendar-body-label,.mat-calendar-period-button{font-size:14px;font-weight:500}.mat-calendar-table-header th{font-size:11px;font-weight:400}.mat-dialog-title{font:500 20px/32px Roboto, \"Helvetica Neue\", sans-serif;letter-spacing:normal}.mat-expansion-panel-header{font-family:Roboto, \"Helvetica Neue\", sans-serif;font-size:15px;font-weight:400}.mat-expansion-panel-content{font:400 14px/20px Roboto, \"Helvetica Neue\", sans-serif;letter-spacing:normal}.mat-form-field{font-size:inherit;font-weight:400;line-height:1.125;font-family:Roboto, \"Helvetica Neue\", sans-serif;letter-spacing:normal}.mat-form-field-wrapper{padding-bottom:1.34375em}.mat-form-field-prefix .mat-icon,.mat-form-field-suffix .mat-icon{font-size:150%;line-height:1.125}.mat-form-field-prefix .mat-icon-button,.mat-form-field-suffix .mat-icon-button{height:1.5em;width:1.5em}.mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-suffix .mat-icon-button .mat-icon{height:1.125em;line-height:1.125}.mat-form-field-infix{padding:.5em 0;border-top:.84375em solid transparent}.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label,.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label{transform:translateY(-1.34375em) scale(0.75);width:133.3333333333%}.mat-form-field-can-float .mat-input-server[label]:not(:label-shown)+.mat-form-field-label-wrapper .mat-form-field-label{transform:translateY(-1.34374em) scale(0.75);width:133.3333433333%}.mat-form-field-label-wrapper{top:-0.84375em;padding-top:.84375em}.mat-form-field-label{top:1.34375em}.mat-form-field-underline{bottom:1.34375em}.mat-form-field-subscript-wrapper{font-size:75%;margin-top:.6666666667em;top:calc(100% - 1.7916666667em)}.mat-form-field-appearance-legacy .mat-form-field-wrapper{padding-bottom:1.25em}.mat-form-field-appearance-legacy .mat-form-field-infix{padding:.4375em 0}.mat-form-field-appearance-legacy.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label,.mat-form-field-appearance-legacy.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label{transform:translateY(-1.28125em) scale(0.75) perspective(100px) translateZ(0.001px);-ms-transform:translateY(-1.28125em) scale(0.75);width:133.3333333333%}.mat-form-field-appearance-legacy.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{transform:translateY(-1.28125em) scale(0.75) perspective(100px) translateZ(0.00101px);-ms-transform:translateY(-1.28124em) scale(0.75);width:133.3333433333%}.mat-form-field-appearance-legacy.mat-form-field-can-float .mat-input-server[label]:not(:label-shown)+.mat-form-field-label-wrapper .mat-form-field-label{transform:translateY(-1.28125em) scale(0.75) perspective(100px) translateZ(0.00102px);-ms-transform:translateY(-1.28123em) scale(0.75);width:133.3333533333%}.mat-form-field-appearance-legacy .mat-form-field-label{top:1.28125em}.mat-form-field-appearance-legacy .mat-form-field-underline{bottom:1.25em}.mat-form-field-appearance-legacy .mat-form-field-subscript-wrapper{margin-top:.5416666667em;top:calc(100% - 1.6666666667em)}@media print{.mat-form-field-appearance-legacy.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label,.mat-form-field-appearance-legacy.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label{transform:translateY(-1.28122em) scale(0.75)}.mat-form-field-appearance-legacy.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{transform:translateY(-1.28121em) scale(0.75)}.mat-form-field-appearance-legacy.mat-form-field-can-float .mat-input-server[label]:not(:label-shown)+.mat-form-field-label-wrapper .mat-form-field-label{transform:translateY(-1.2812em) scale(0.75)}}.mat-form-field-appearance-fill .mat-form-field-infix{padding:.25em 0 .75em 0}.mat-form-field-appearance-fill .mat-form-field-label{top:1.09375em;margin-top:-0.5em}.mat-form-field-appearance-fill.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label,.mat-form-field-appearance-fill.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label{transform:translateY(-0.59375em) scale(0.75);width:133.3333333333%}.mat-form-field-appearance-fill.mat-form-field-can-float .mat-input-server[label]:not(:label-shown)+.mat-form-field-label-wrapper .mat-form-field-label{transform:translateY(-0.59374em) scale(0.75);width:133.3333433333%}.mat-form-field-appearance-outline .mat-form-field-infix{padding:1em 0 1em 0}.mat-form-field-appearance-outline .mat-form-field-label{top:1.84375em;margin-top:-0.25em}.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label,.mat-form-field-appearance-outline.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label{transform:translateY(-1.59375em) scale(0.75);width:133.3333333333%}.mat-form-field-appearance-outline.mat-form-field-can-float .mat-input-server[label]:not(:label-shown)+.mat-form-field-label-wrapper .mat-form-field-label{transform:translateY(-1.59374em) scale(0.75);width:133.3333433333%}.mat-grid-tile-header,.mat-grid-tile-footer{font-size:14px}.mat-grid-tile-header .mat-line,.mat-grid-tile-footer .mat-line{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;box-sizing:border-box}.mat-grid-tile-header .mat-line:nth-child(n+2),.mat-grid-tile-footer .mat-line:nth-child(n+2){font-size:12px}input.mat-input-element{margin-top:-0.0625em}.mat-menu-item{font-family:Roboto, \"Helvetica Neue\", sans-serif;font-size:14px;font-weight:400}.mat-paginator,.mat-paginator-page-size .mat-select-trigger{font-family:Roboto, \"Helvetica Neue\", sans-serif;font-size:12px}.mat-radio-button{font-family:Roboto, \"Helvetica Neue\", sans-serif}.mat-select{font-family:Roboto, \"Helvetica Neue\", sans-serif}.mat-select-trigger{height:1.125em}.mat-slide-toggle-content{font-family:Roboto, \"Helvetica Neue\", sans-serif}.mat-slider-thumb-label-text{font-family:Roboto, \"Helvetica Neue\", sans-serif;font-size:12px;font-weight:500}.mat-stepper-vertical,.mat-stepper-horizontal{font-family:Roboto, \"Helvetica Neue\", sans-serif}.mat-step-label{font-size:14px;font-weight:400}.mat-step-sub-label-error{font-weight:normal}.mat-step-label-error{font-size:14px}.mat-step-label-selected{font-size:14px;font-weight:500}.mat-tab-group{font-family:Roboto, \"Helvetica Neue\", sans-serif}.mat-tab-label,.mat-tab-link{font-family:Roboto, \"Helvetica Neue\", sans-serif;font-size:14px;font-weight:500}.mat-toolbar,.mat-toolbar h1,.mat-toolbar h2,.mat-toolbar h3,.mat-toolbar h4,.mat-toolbar h5,.mat-toolbar h6{font:500 20px/32px Roboto, \"Helvetica Neue\", sans-serif;letter-spacing:normal;margin:0}.mat-tooltip{font-family:Roboto, \"Helvetica Neue\", sans-serif;font-size:10px;padding-top:6px;padding-bottom:6px}.mat-tooltip-handset{font-size:14px;padding-top:8px;padding-bottom:8px}.mat-list-item{font-family:Roboto, \"Helvetica Neue\", sans-serif}.mat-list-option{font-family:Roboto, \"Helvetica Neue\", sans-serif}.mat-list-base .mat-list-item{font-size:16px}.mat-list-base .mat-list-item .mat-line{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;box-sizing:border-box}.mat-list-base .mat-list-item .mat-line:nth-child(n+2){font-size:14px}.mat-list-base .mat-list-option{font-size:16px}.mat-list-base .mat-list-option .mat-line{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;box-sizing:border-box}.mat-list-base .mat-list-option .mat-line:nth-child(n+2){font-size:14px}.mat-list-base .mat-subheader{font-family:Roboto, \"Helvetica Neue\", sans-serif;font-size:14px;font-weight:500}.mat-list-base[dense] .mat-list-item{font-size:12px}.mat-list-base[dense] .mat-list-item .mat-line{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;box-sizing:border-box}.mat-list-base[dense] .mat-list-item .mat-line:nth-child(n+2){font-size:12px}.mat-list-base[dense] .mat-list-option{font-size:12px}.mat-list-base[dense] .mat-list-option .mat-line{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;box-sizing:border-box}.mat-list-base[dense] .mat-list-option .mat-line:nth-child(n+2){font-size:12px}.mat-list-base[dense] .mat-subheader{font-family:Roboto, \"Helvetica Neue\", sans-serif;font-size:12px;font-weight:500}.mat-option{font-family:Roboto, \"Helvetica Neue\", sans-serif;font-size:16px}.mat-optgroup-label{font:500 14px/24px Roboto, \"Helvetica Neue\", sans-serif;letter-spacing:normal}.mat-simple-snackbar{font-family:Roboto, \"Helvetica Neue\", sans-serif;font-size:14px}.mat-simple-snackbar-action{line-height:1;font-family:inherit;font-size:inherit;font-weight:500}.mat-tree{font-family:Roboto, \"Helvetica Neue\", sans-serif}.mat-tree-node,.mat-nested-tree-node{font-weight:400;font-size:14px}.mat-ripple{overflow:hidden;position:relative}.mat-ripple:not(:empty){transform:translateZ(0)}.mat-ripple.mat-ripple-unbounded{overflow:visible}.mat-ripple-element{position:absolute;border-radius:50%;pointer-events:none;transition:opacity,transform 0ms cubic-bezier(0, 0, 0.2, 1);transform:scale(0)}.cdk-high-contrast-active .mat-ripple-element{display:none}.cdk-visually-hidden{border:0;clip:rect(0 0 0 0);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;width:1px;outline:0;-webkit-appearance:none;-moz-appearance:none}.cdk-overlay-container,.cdk-global-overlay-wrapper{pointer-events:none;top:0;left:0;height:100%;width:100%}.cdk-overlay-container{position:fixed;z-index:1000}.cdk-overlay-container:empty{display:none}.cdk-global-overlay-wrapper{display:flex;position:absolute;z-index:1000}.cdk-overlay-pane{position:absolute;pointer-events:auto;box-sizing:border-box;z-index:1000;display:flex;max-width:100%;max-height:100%}.cdk-overlay-backdrop{position:absolute;top:0;bottom:0;left:0;right:0;z-index:1000;pointer-events:auto;-webkit-tap-highlight-color:transparent;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1);opacity:0}.cdk-overlay-backdrop.cdk-overlay-backdrop-showing{opacity:1}@media screen and (-ms-high-contrast: active){.cdk-overlay-backdrop.cdk-overlay-backdrop-showing{opacity:.6}}.cdk-overlay-dark-backdrop{background:rgba(0,0,0,.32)}.cdk-overlay-transparent-backdrop,.cdk-overlay-transparent-backdrop.cdk-overlay-backdrop-showing{opacity:0}.cdk-overlay-connected-position-bounding-box{position:absolute;z-index:1000;display:flex;flex-direction:column;min-width:1px;min-height:1px}.cdk-global-scrollblock{position:fixed;width:100%;overflow-y:scroll}@keyframes cdk-text-field-autofill-start{/*!*/}@keyframes cdk-text-field-autofill-end{/*!*/}.cdk-text-field-autofill-monitored:-webkit-autofill{animation:cdk-text-field-autofill-start 0s 1ms}.cdk-text-field-autofill-monitored:not(:-webkit-autofill){animation:cdk-text-field-autofill-end 0s 1ms}textarea.cdk-textarea-autosize{resize:none}textarea.cdk-textarea-autosize-measuring{padding:2px 0 !important;box-sizing:content-box !important;height:auto !important;overflow:hidden !important}textarea.cdk-textarea-autosize-measuring-firefox{padding:2px 0 !important;box-sizing:content-box !important;height:0 !important}.mat-focus-indicator{position:relative}.mat-mdc-focus-indicator{position:relative}.mat-ripple-element{background-color:rgba(0,0,0,.1)}.mat-option{color:rgba(0,0,0,.87)}.mat-option:hover:not(.mat-option-disabled),.mat-option:focus:not(.mat-option-disabled){background:rgba(0,0,0,.04)}.mat-option.mat-selected:not(.mat-option-multiple):not(.mat-option-disabled){background:rgba(0,0,0,.04)}.mat-option.mat-active{background:rgba(0,0,0,.04);color:rgba(0,0,0,.87)}.mat-option.mat-option-disabled{color:rgba(0,0,0,.38)}.mat-primary .mat-option.mat-selected:not(.mat-option-disabled){color:#3f51b5}.mat-accent .mat-option.mat-selected:not(.mat-option-disabled){color:#ff4081}.mat-warn .mat-option.mat-selected:not(.mat-option-disabled){color:#f44336}.mat-optgroup-label{color:rgba(0,0,0,.54)}.mat-optgroup-disabled .mat-optgroup-label{color:rgba(0,0,0,.38)}.mat-pseudo-checkbox{color:rgba(0,0,0,.54)}.mat-pseudo-checkbox::after{color:#fafafa}.mat-pseudo-checkbox-disabled{color:#b0b0b0}.mat-primary .mat-pseudo-checkbox-checked,.mat-primary .mat-pseudo-checkbox-indeterminate{background:#3f51b5}.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox-indeterminate,.mat-accent .mat-pseudo-checkbox-checked,.mat-accent .mat-pseudo-checkbox-indeterminate{background:#ff4081}.mat-warn .mat-pseudo-checkbox-checked,.mat-warn .mat-pseudo-checkbox-indeterminate{background:#f44336}.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-disabled,.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-disabled{background:#b0b0b0}.mat-app-background{background-color:#fafafa;color:rgba(0,0,0,.87)}.mat-elevation-z0{box-shadow:0px 0px 0px 0px rgba(0, 0, 0, 0.2),0px 0px 0px 0px rgba(0, 0, 0, 0.14),0px 0px 0px 0px rgba(0, 0, 0, 0.12)}.mat-elevation-z1{box-shadow:0px 2px 1px -1px rgba(0, 0, 0, 0.2),0px 1px 1px 0px rgba(0, 0, 0, 0.14),0px 1px 3px 0px rgba(0, 0, 0, 0.12)}.mat-elevation-z2{box-shadow:0px 3px 1px -2px rgba(0, 0, 0, 0.2),0px 2px 2px 0px rgba(0, 0, 0, 0.14),0px 1px 5px 0px rgba(0, 0, 0, 0.12)}.mat-elevation-z3{box-shadow:0px 3px 3px -2px rgba(0, 0, 0, 0.2),0px 3px 4px 0px rgba(0, 0, 0, 0.14),0px 1px 8px 0px rgba(0, 0, 0, 0.12)}.mat-elevation-z4{box-shadow:0px 2px 4px -1px rgba(0, 0, 0, 0.2),0px 4px 5px 0px rgba(0, 0, 0, 0.14),0px 1px 10px 0px rgba(0, 0, 0, 0.12)}.mat-elevation-z5{box-shadow:0px 3px 5px -1px rgba(0, 0, 0, 0.2),0px 5px 8px 0px rgba(0, 0, 0, 0.14),0px 1px 14px 0px rgba(0, 0, 0, 0.12)}.mat-elevation-z6{box-shadow:0px 3px 5px -1px rgba(0, 0, 0, 0.2),0px 6px 10px 0px rgba(0, 0, 0, 0.14),0px 1px 18px 0px rgba(0, 0, 0, 0.12)}.mat-elevation-z7{box-shadow:0px 4px 5px -2px rgba(0, 0, 0, 0.2),0px 7px 10px 1px rgba(0, 0, 0, 0.14),0px 2px 16px 1px rgba(0, 0, 0, 0.12)}.mat-elevation-z8{box-shadow:0px 5px 5px -3px rgba(0, 0, 0, 0.2),0px 8px 10px 1px rgba(0, 0, 0, 0.14),0px 3px 14px 2px rgba(0, 0, 0, 0.12)}.mat-elevation-z9{box-shadow:0px 5px 6px -3px rgba(0, 0, 0, 0.2),0px 9px 12px 1px rgba(0, 0, 0, 0.14),0px 3px 16px 2px rgba(0, 0, 0, 0.12)}.mat-elevation-z10{box-shadow:0px 6px 6px -3px rgba(0, 0, 0, 0.2),0px 10px 14px 1px rgba(0, 0, 0, 0.14),0px 4px 18px 3px rgba(0, 0, 0, 0.12)}.mat-elevation-z11{box-shadow:0px 6px 7px -4px rgba(0, 0, 0, 0.2),0px 11px 15px 1px rgba(0, 0, 0, 0.14),0px 4px 20px 3px rgba(0, 0, 0, 0.12)}.mat-elevation-z12{box-shadow:0px 7px 8px -4px rgba(0, 0, 0, 0.2),0px 12px 17px 2px rgba(0, 0, 0, 0.14),0px 5px 22px 4px rgba(0, 0, 0, 0.12)}.mat-elevation-z13{box-shadow:0px 7px 8px -4px rgba(0, 0, 0, 0.2),0px 13px 19px 2px rgba(0, 0, 0, 0.14),0px 5px 24px 4px rgba(0, 0, 0, 0.12)}.mat-elevation-z14{box-shadow:0px 7px 9px -4px rgba(0, 0, 0, 0.2),0px 14px 21px 2px rgba(0, 0, 0, 0.14),0px 5px 26px 4px rgba(0, 0, 0, 0.12)}.mat-elevation-z15{box-shadow:0px 8px 9px -5px rgba(0, 0, 0, 0.2),0px 15px 22px 2px rgba(0, 0, 0, 0.14),0px 6px 28px 5px rgba(0, 0, 0, 0.12)}.mat-elevation-z16{box-shadow:0px 8px 10px -5px rgba(0, 0, 0, 0.2),0px 16px 24px 2px rgba(0, 0, 0, 0.14),0px 6px 30px 5px rgba(0, 0, 0, 0.12)}.mat-elevation-z17{box-shadow:0px 8px 11px -5px rgba(0, 0, 0, 0.2),0px 17px 26px 2px rgba(0, 0, 0, 0.14),0px 6px 32px 5px rgba(0, 0, 0, 0.12)}.mat-elevation-z18{box-shadow:0px 9px 11px -5px rgba(0, 0, 0, 0.2),0px 18px 28px 2px rgba(0, 0, 0, 0.14),0px 7px 34px 6px rgba(0, 0, 0, 0.12)}.mat-elevation-z19{box-shadow:0px 9px 12px -6px rgba(0, 0, 0, 0.2),0px 19px 29px 2px rgba(0, 0, 0, 0.14),0px 7px 36px 6px rgba(0, 0, 0, 0.12)}.mat-elevation-z20{box-shadow:0px 10px 13px -6px rgba(0, 0, 0, 0.2),0px 20px 31px 3px rgba(0, 0, 0, 0.14),0px 8px 38px 7px rgba(0, 0, 0, 0.12)}.mat-elevation-z21{box-shadow:0px 10px 13px -6px rgba(0, 0, 0, 0.2),0px 21px 33px 3px rgba(0, 0, 0, 0.14),0px 8px 40px 7px rgba(0, 0, 0, 0.12)}.mat-elevation-z22{box-shadow:0px 10px 14px -6px rgba(0, 0, 0, 0.2),0px 22px 35px 3px rgba(0, 0, 0, 0.14),0px 8px 42px 7px rgba(0, 0, 0, 0.12)}.mat-elevation-z23{box-shadow:0px 11px 14px -7px rgba(0, 0, 0, 0.2),0px 23px 36px 3px rgba(0, 0, 0, 0.14),0px 9px 44px 8px rgba(0, 0, 0, 0.12)}.mat-elevation-z24{box-shadow:0px 11px 15px -7px rgba(0, 0, 0, 0.2),0px 24px 38px 3px rgba(0, 0, 0, 0.14),0px 9px 46px 8px rgba(0, 0, 0, 0.12)}.mat-theme-loaded-marker{display:none}.mat-autocomplete-panel{background:#fff;color:rgba(0,0,0,.87)}.mat-autocomplete-panel:not([class*=mat-elevation-z]){box-shadow:0px 2px 4px -1px rgba(0, 0, 0, 0.2),0px 4px 5px 0px rgba(0, 0, 0, 0.14),0px 1px 10px 0px rgba(0, 0, 0, 0.12)}.mat-autocomplete-panel .mat-option.mat-selected:not(.mat-active):not(:hover){background:#fff}.mat-autocomplete-panel .mat-option.mat-selected:not(.mat-active):not(:hover):not(.mat-option-disabled){color:rgba(0,0,0,.87)}.mat-badge-content{color:#fff;background:#3f51b5}.cdk-high-contrast-active .mat-badge-content{outline:solid 1px;border-radius:0}.mat-badge-accent .mat-badge-content{background:#ff4081;color:#fff}.mat-badge-warn .mat-badge-content{color:#fff;background:#f44336}.mat-badge{position:relative}.mat-badge-hidden .mat-badge-content{display:none}.mat-badge-disabled .mat-badge-content{background:#b9b9b9;color:rgba(0,0,0,.38)}.mat-badge-content{position:absolute;text-align:center;display:inline-block;border-radius:50%;transition:transform 200ms ease-in-out;transform:scale(0.6);overflow:hidden;white-space:nowrap;text-overflow:ellipsis;pointer-events:none}.ng-animate-disabled .mat-badge-content,.mat-badge-content._mat-animation-noopable{transition:none}.mat-badge-content.mat-badge-active{transform:none}.mat-badge-small .mat-badge-content{width:16px;height:16px;line-height:16px}.mat-badge-small.mat-badge-above .mat-badge-content{top:-8px}.mat-badge-small.mat-badge-below .mat-badge-content{bottom:-8px}.mat-badge-small.mat-badge-before .mat-badge-content{left:-16px}[dir=rtl] .mat-badge-small.mat-badge-before .mat-badge-content{left:auto;right:-16px}.mat-badge-small.mat-badge-after .mat-badge-content{right:-16px}[dir=rtl] .mat-badge-small.mat-badge-after .mat-badge-content{right:auto;left:-16px}.mat-badge-small.mat-badge-overlap.mat-badge-before .mat-badge-content{left:-8px}[dir=rtl] .mat-badge-small.mat-badge-overlap.mat-badge-before .mat-badge-content{left:auto;right:-8px}.mat-badge-small.mat-badge-overlap.mat-badge-after .mat-badge-content{right:-8px}[dir=rtl] .mat-badge-small.mat-badge-overlap.mat-badge-after .mat-badge-content{right:auto;left:-8px}.mat-badge-medium .mat-badge-content{width:22px;height:22px;line-height:22px}.mat-badge-medium.mat-badge-above .mat-badge-content{top:-11px}.mat-badge-medium.mat-badge-below .mat-badge-content{bottom:-11px}.mat-badge-medium.mat-badge-before .mat-badge-content{left:-22px}[dir=rtl] .mat-badge-medium.mat-badge-before .mat-badge-content{left:auto;right:-22px}.mat-badge-medium.mat-badge-after .mat-badge-content{right:-22px}[dir=rtl] .mat-badge-medium.mat-badge-after .mat-badge-content{right:auto;left:-22px}.mat-badge-medium.mat-badge-overlap.mat-badge-before .mat-badge-content{left:-11px}[dir=rtl] .mat-badge-medium.mat-badge-overlap.mat-badge-before .mat-badge-content{left:auto;right:-11px}.mat-badge-medium.mat-badge-overlap.mat-badge-after .mat-badge-content{right:-11px}[dir=rtl] .mat-badge-medium.mat-badge-overlap.mat-badge-after .mat-badge-content{right:auto;left:-11px}.mat-badge-large .mat-badge-content{width:28px;height:28px;line-height:28px}.mat-badge-large.mat-badge-above .mat-badge-content{top:-14px}.mat-badge-large.mat-badge-below .mat-badge-content{bottom:-14px}.mat-badge-large.mat-badge-before .mat-badge-content{left:-28px}[dir=rtl] .mat-badge-large.mat-badge-before .mat-badge-content{left:auto;right:-28px}.mat-badge-large.mat-badge-after .mat-badge-content{right:-28px}[dir=rtl] .mat-badge-large.mat-badge-after .mat-badge-content{right:auto;left:-28px}.mat-badge-large.mat-badge-overlap.mat-badge-before .mat-badge-content{left:-14px}[dir=rtl] .mat-badge-large.mat-badge-overlap.mat-badge-before .mat-badge-content{left:auto;right:-14px}.mat-badge-large.mat-badge-overlap.mat-badge-after .mat-badge-content{right:-14px}[dir=rtl] .mat-badge-large.mat-badge-overlap.mat-badge-after .mat-badge-content{right:auto;left:-14px}.mat-bottom-sheet-container{box-shadow:0px 8px 10px -5px rgba(0, 0, 0, 0.2),0px 16px 24px 2px rgba(0, 0, 0, 0.14),0px 6px 30px 5px rgba(0, 0, 0, 0.12);background:#fff;color:rgba(0,0,0,.87)}.mat-button,.mat-icon-button,.mat-stroked-button{color:inherit;background:transparent}.mat-button.mat-primary,.mat-icon-button.mat-primary,.mat-stroked-button.mat-primary{color:#3f51b5}.mat-button.mat-accent,.mat-icon-button.mat-accent,.mat-stroked-button.mat-accent{color:#ff4081}.mat-button.mat-warn,.mat-icon-button.mat-warn,.mat-stroked-button.mat-warn{color:#f44336}.mat-button.mat-primary.mat-button-disabled,.mat-button.mat-accent.mat-button-disabled,.mat-button.mat-warn.mat-button-disabled,.mat-button.mat-button-disabled.mat-button-disabled,.mat-icon-button.mat-primary.mat-button-disabled,.mat-icon-button.mat-accent.mat-button-disabled,.mat-icon-button.mat-warn.mat-button-disabled,.mat-icon-button.mat-button-disabled.mat-button-disabled,.mat-stroked-button.mat-primary.mat-button-disabled,.mat-stroked-button.mat-accent.mat-button-disabled,.mat-stroked-button.mat-warn.mat-button-disabled,.mat-stroked-button.mat-button-disabled.mat-button-disabled{color:rgba(0,0,0,.26)}.mat-button.mat-primary .mat-button-focus-overlay,.mat-icon-button.mat-primary .mat-button-focus-overlay,.mat-stroked-button.mat-primary .mat-button-focus-overlay{background-color:#3f51b5}.mat-button.mat-accent .mat-button-focus-overlay,.mat-icon-button.mat-accent .mat-button-focus-overlay,.mat-stroked-button.mat-accent .mat-button-focus-overlay{background-color:#ff4081}.mat-button.mat-warn .mat-button-focus-overlay,.mat-icon-button.mat-warn .mat-button-focus-overlay,.mat-stroked-button.mat-warn .mat-button-focus-overlay{background-color:#f44336}.mat-button.mat-button-disabled .mat-button-focus-overlay,.mat-icon-button.mat-button-disabled .mat-button-focus-overlay,.mat-stroked-button.mat-button-disabled .mat-button-focus-overlay{background-color:transparent}.mat-button .mat-ripple-element,.mat-icon-button .mat-ripple-element,.mat-stroked-button .mat-ripple-element{opacity:.1;background-color:currentColor}.mat-button-focus-overlay{background:#000}.mat-stroked-button:not(.mat-button-disabled){border-color:rgba(0,0,0,.12)}.mat-flat-button,.mat-raised-button,.mat-fab,.mat-mini-fab{color:rgba(0,0,0,.87);background-color:#fff}.mat-flat-button.mat-primary,.mat-raised-button.mat-primary,.mat-fab.mat-primary,.mat-mini-fab.mat-primary{color:#fff}.mat-flat-button.mat-accent,.mat-raised-button.mat-accent,.mat-fab.mat-accent,.mat-mini-fab.mat-accent{color:#fff}.mat-flat-button.mat-warn,.mat-raised-button.mat-warn,.mat-fab.mat-warn,.mat-mini-fab.mat-warn{color:#fff}.mat-flat-button.mat-primary.mat-button-disabled,.mat-flat-button.mat-accent.mat-button-disabled,.mat-flat-button.mat-warn.mat-button-disabled,.mat-flat-button.mat-button-disabled.mat-button-disabled,.mat-raised-button.mat-primary.mat-button-disabled,.mat-raised-button.mat-accent.mat-button-disabled,.mat-raised-button.mat-warn.mat-button-disabled,.mat-raised-button.mat-button-disabled.mat-button-disabled,.mat-fab.mat-primary.mat-button-disabled,.mat-fab.mat-accent.mat-button-disabled,.mat-fab.mat-warn.mat-button-disabled,.mat-fab.mat-button-disabled.mat-button-disabled,.mat-mini-fab.mat-primary.mat-button-disabled,.mat-mini-fab.mat-accent.mat-button-disabled,.mat-mini-fab.mat-warn.mat-button-disabled,.mat-mini-fab.mat-button-disabled.mat-button-disabled{color:rgba(0,0,0,.26)}.mat-flat-button.mat-primary,.mat-raised-button.mat-primary,.mat-fab.mat-primary,.mat-mini-fab.mat-primary{background-color:#3f51b5}.mat-flat-button.mat-accent,.mat-raised-button.mat-accent,.mat-fab.mat-accent,.mat-mini-fab.mat-accent{background-color:#ff4081}.mat-flat-button.mat-warn,.mat-raised-button.mat-warn,.mat-fab.mat-warn,.mat-mini-fab.mat-warn{background-color:#f44336}.mat-flat-button.mat-primary.mat-button-disabled,.mat-flat-button.mat-accent.mat-button-disabled,.mat-flat-button.mat-warn.mat-button-disabled,.mat-flat-button.mat-button-disabled.mat-button-disabled,.mat-raised-button.mat-primary.mat-button-disabled,.mat-raised-button.mat-accent.mat-button-disabled,.mat-raised-button.mat-warn.mat-button-disabled,.mat-raised-button.mat-button-disabled.mat-button-disabled,.mat-fab.mat-primary.mat-button-disabled,.mat-fab.mat-accent.mat-button-disabled,.mat-fab.mat-warn.mat-button-disabled,.mat-fab.mat-button-disabled.mat-button-disabled,.mat-mini-fab.mat-primary.mat-button-disabled,.mat-mini-fab.mat-accent.mat-button-disabled,.mat-mini-fab.mat-warn.mat-button-disabled,.mat-mini-fab.mat-button-disabled.mat-button-disabled{background-color:rgba(0,0,0,.12)}.mat-flat-button.mat-primary .mat-ripple-element,.mat-raised-button.mat-primary .mat-ripple-element,.mat-fab.mat-primary .mat-ripple-element,.mat-mini-fab.mat-primary .mat-ripple-element{background-color:rgba(255,255,255,.1)}.mat-flat-button.mat-accent .mat-ripple-element,.mat-raised-button.mat-accent .mat-ripple-element,.mat-fab.mat-accent .mat-ripple-element,.mat-mini-fab.mat-accent .mat-ripple-element{background-color:rgba(255,255,255,.1)}.mat-flat-button.mat-warn .mat-ripple-element,.mat-raised-button.mat-warn .mat-ripple-element,.mat-fab.mat-warn .mat-ripple-element,.mat-mini-fab.mat-warn .mat-ripple-element{background-color:rgba(255,255,255,.1)}.mat-stroked-button:not([class*=mat-elevation-z]),.mat-flat-button:not([class*=mat-elevation-z]){box-shadow:0px 0px 0px 0px rgba(0, 0, 0, 0.2),0px 0px 0px 0px rgba(0, 0, 0, 0.14),0px 0px 0px 0px rgba(0, 0, 0, 0.12)}.mat-raised-button:not([class*=mat-elevation-z]){box-shadow:0px 3px 1px -2px rgba(0, 0, 0, 0.2),0px 2px 2px 0px rgba(0, 0, 0, 0.14),0px 1px 5px 0px rgba(0, 0, 0, 0.12)}.mat-raised-button:not(.mat-button-disabled):active:not([class*=mat-elevation-z]){box-shadow:0px 5px 5px -3px rgba(0, 0, 0, 0.2),0px 8px 10px 1px rgba(0, 0, 0, 0.14),0px 3px 14px 2px rgba(0, 0, 0, 0.12)}.mat-raised-button.mat-button-disabled:not([class*=mat-elevation-z]){box-shadow:0px 0px 0px 0px rgba(0, 0, 0, 0.2),0px 0px 0px 0px rgba(0, 0, 0, 0.14),0px 0px 0px 0px rgba(0, 0, 0, 0.12)}.mat-fab:not([class*=mat-elevation-z]),.mat-mini-fab:not([class*=mat-elevation-z]){box-shadow:0px 3px 5px -1px rgba(0, 0, 0, 0.2),0px 6px 10px 0px rgba(0, 0, 0, 0.14),0px 1px 18px 0px rgba(0, 0, 0, 0.12)}.mat-fab:not(.mat-button-disabled):active:not([class*=mat-elevation-z]),.mat-mini-fab:not(.mat-button-disabled):active:not([class*=mat-elevation-z]){box-shadow:0px 7px 8px -4px rgba(0, 0, 0, 0.2),0px 12px 17px 2px rgba(0, 0, 0, 0.14),0px 5px 22px 4px rgba(0, 0, 0, 0.12)}.mat-fab.mat-button-disabled:not([class*=mat-elevation-z]),.mat-mini-fab.mat-button-disabled:not([class*=mat-elevation-z]){box-shadow:0px 0px 0px 0px rgba(0, 0, 0, 0.2),0px 0px 0px 0px rgba(0, 0, 0, 0.14),0px 0px 0px 0px rgba(0, 0, 0, 0.12)}.mat-button-toggle-standalone,.mat-button-toggle-group{box-shadow:0px 3px 1px -2px rgba(0, 0, 0, 0.2),0px 2px 2px 0px rgba(0, 0, 0, 0.14),0px 1px 5px 0px rgba(0, 0, 0, 0.12)}.mat-button-toggle-standalone.mat-button-toggle-appearance-standard,.mat-button-toggle-group-appearance-standard{box-shadow:none}.mat-button-toggle{color:rgba(0,0,0,.38)}.mat-button-toggle .mat-button-toggle-focus-overlay{background-color:rgba(0,0,0,.12)}.mat-button-toggle-appearance-standard{color:rgba(0,0,0,.87);background:#fff}.mat-button-toggle-appearance-standard .mat-button-toggle-focus-overlay{background-color:#000}.mat-button-toggle-group-appearance-standard .mat-button-toggle+.mat-button-toggle{border-left:solid 1px rgba(0,0,0,.12)}[dir=rtl] .mat-button-toggle-group-appearance-standard .mat-button-toggle+.mat-button-toggle{border-left:none;border-right:solid 1px rgba(0,0,0,.12)}.mat-button-toggle-group-appearance-standard.mat-button-toggle-vertical .mat-button-toggle+.mat-button-toggle{border-left:none;border-right:none;border-top:solid 1px rgba(0,0,0,.12)}.mat-button-toggle-checked{background-color:#e0e0e0;color:rgba(0,0,0,.54)}.mat-button-toggle-checked.mat-button-toggle-appearance-standard{color:rgba(0,0,0,.87)}.mat-button-toggle-disabled{color:rgba(0,0,0,.26);background-color:#eee}.mat-button-toggle-disabled.mat-button-toggle-appearance-standard{background:#fff}.mat-button-toggle-disabled.mat-button-toggle-checked{background-color:#bdbdbd}.mat-button-toggle-standalone.mat-button-toggle-appearance-standard,.mat-button-toggle-group-appearance-standard{border:solid 1px rgba(0,0,0,.12)}.mat-button-toggle-appearance-standard .mat-button-toggle-label-content{line-height:48px}.mat-card{background:#fff;color:rgba(0,0,0,.87)}.mat-card:not([class*=mat-elevation-z]){box-shadow:0px 2px 1px -1px rgba(0, 0, 0, 0.2),0px 1px 1px 0px rgba(0, 0, 0, 0.14),0px 1px 3px 0px rgba(0, 0, 0, 0.12)}.mat-card.mat-card-flat:not([class*=mat-elevation-z]){box-shadow:0px 0px 0px 0px rgba(0, 0, 0, 0.2),0px 0px 0px 0px rgba(0, 0, 0, 0.14),0px 0px 0px 0px rgba(0, 0, 0, 0.12)}.mat-card-subtitle{color:rgba(0,0,0,.54)}.mat-checkbox-frame{border-color:rgba(0,0,0,.54)}.mat-checkbox-checkmark{fill:#fafafa}.mat-checkbox-checkmark-path{stroke:#fafafa !important}.mat-checkbox-mixedmark{background-color:#fafafa}.mat-checkbox-indeterminate.mat-primary .mat-checkbox-background,.mat-checkbox-checked.mat-primary .mat-checkbox-background{background-color:#3f51b5}.mat-checkbox-indeterminate.mat-accent .mat-checkbox-background,.mat-checkbox-checked.mat-accent .mat-checkbox-background{background-color:#ff4081}.mat-checkbox-indeterminate.mat-warn .mat-checkbox-background,.mat-checkbox-checked.mat-warn .mat-checkbox-background{background-color:#f44336}.mat-checkbox-disabled.mat-checkbox-checked .mat-checkbox-background,.mat-checkbox-disabled.mat-checkbox-indeterminate .mat-checkbox-background{background-color:#b0b0b0}.mat-checkbox-disabled:not(.mat-checkbox-checked) .mat-checkbox-frame{border-color:#b0b0b0}.mat-checkbox-disabled .mat-checkbox-label{color:rgba(0,0,0,.54)}.mat-checkbox .mat-ripple-element{background-color:#000}.mat-checkbox-checked:not(.mat-checkbox-disabled).mat-primary .mat-ripple-element,.mat-checkbox:active:not(.mat-checkbox-disabled).mat-primary .mat-ripple-element{background:#3f51b5}.mat-checkbox-checked:not(.mat-checkbox-disabled).mat-accent .mat-ripple-element,.mat-checkbox:active:not(.mat-checkbox-disabled).mat-accent .mat-ripple-element{background:#ff4081}.mat-checkbox-checked:not(.mat-checkbox-disabled).mat-warn .mat-ripple-element,.mat-checkbox:active:not(.mat-checkbox-disabled).mat-warn .mat-ripple-element{background:#f44336}.mat-chip.mat-standard-chip{background-color:#e0e0e0;color:rgba(0,0,0,.87)}.mat-chip.mat-standard-chip .mat-chip-remove{color:rgba(0,0,0,.87);opacity:.4}.mat-chip.mat-standard-chip:not(.mat-chip-disabled):active{box-shadow:0px 3px 3px -2px rgba(0, 0, 0, 0.2),0px 3px 4px 0px rgba(0, 0, 0, 0.14),0px 1px 8px 0px rgba(0, 0, 0, 0.12)}.mat-chip.mat-standard-chip:not(.mat-chip-disabled) .mat-chip-remove:hover{opacity:.54}.mat-chip.mat-standard-chip.mat-chip-disabled{opacity:.4}.mat-chip.mat-standard-chip::after{background:#000}.mat-chip.mat-standard-chip.mat-chip-selected.mat-primary{background-color:#3f51b5;color:#fff}.mat-chip.mat-standard-chip.mat-chip-selected.mat-primary .mat-chip-remove{color:#fff;opacity:.4}.mat-chip.mat-standard-chip.mat-chip-selected.mat-primary .mat-ripple-element{background-color:rgba(255,255,255,.1)}.mat-chip.mat-standard-chip.mat-chip-selected.mat-warn{background-color:#f44336;color:#fff}.mat-chip.mat-standard-chip.mat-chip-selected.mat-warn .mat-chip-remove{color:#fff;opacity:.4}.mat-chip.mat-standard-chip.mat-chip-selected.mat-warn .mat-ripple-element{background-color:rgba(255,255,255,.1)}.mat-chip.mat-standard-chip.mat-chip-selected.mat-accent{background-color:#ff4081;color:#fff}.mat-chip.mat-standard-chip.mat-chip-selected.mat-accent .mat-chip-remove{color:#fff;opacity:.4}.mat-chip.mat-standard-chip.mat-chip-selected.mat-accent .mat-ripple-element{background-color:rgba(255,255,255,.1)}.mat-table{background:#fff}.mat-table thead,.mat-table tbody,.mat-table tfoot,mat-header-row,mat-row,mat-footer-row,[mat-header-row],[mat-row],[mat-footer-row],.mat-table-sticky{background:inherit}mat-row,mat-header-row,mat-footer-row,th.mat-header-cell,td.mat-cell,td.mat-footer-cell{border-bottom-color:rgba(0,0,0,.12)}.mat-header-cell{color:rgba(0,0,0,.54)}.mat-cell,.mat-footer-cell{color:rgba(0,0,0,.87)}.mat-calendar-arrow{border-top-color:rgba(0,0,0,.54)}.mat-datepicker-toggle,.mat-datepicker-content .mat-calendar-next-button,.mat-datepicker-content .mat-calendar-previous-button{color:rgba(0,0,0,.54)}.mat-calendar-table-header{color:rgba(0,0,0,.38)}.mat-calendar-table-header-divider::after{background:rgba(0,0,0,.12)}.mat-calendar-body-label{color:rgba(0,0,0,.54)}.mat-calendar-body-cell-content,.mat-date-range-input-separator{color:rgba(0,0,0,.87);border-color:transparent}.mat-calendar-body-disabled>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical){color:rgba(0,0,0,.38)}.mat-form-field-disabled .mat-date-range-input-separator{color:rgba(0,0,0,.38)}.mat-calendar-body-in-preview{color:rgba(0,0,0,.24)}.mat-calendar-body-today:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical){border-color:rgba(0,0,0,.38)}.mat-calendar-body-disabled>.mat-calendar-body-today:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical){border-color:rgba(0,0,0,.18)}.mat-calendar-body-in-range::before{background:rgba(63,81,181,.2)}.mat-calendar-body-comparison-identical,.mat-calendar-body-in-comparison-range::before{background:rgba(249,171,0,.2)}.mat-calendar-body-comparison-bridge-start::before,[dir=rtl] .mat-calendar-body-comparison-bridge-end::before{background:linear-gradient(to right, rgba(63, 81, 181, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%)}.mat-calendar-body-comparison-bridge-end::before,[dir=rtl] .mat-calendar-body-comparison-bridge-start::before{background:linear-gradient(to left, rgba(63, 81, 181, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%)}.mat-calendar-body-in-range>.mat-calendar-body-comparison-identical,.mat-calendar-body-in-comparison-range.mat-calendar-body-in-range::after{background:#a8dab5}.mat-calendar-body-comparison-identical.mat-calendar-body-selected,.mat-calendar-body-in-comparison-range>.mat-calendar-body-selected{background:#46a35e}.mat-calendar-body-selected{background-color:#3f51b5;color:#fff}.mat-calendar-body-disabled>.mat-calendar-body-selected{background-color:rgba(63,81,181,.4)}.mat-calendar-body-today.mat-calendar-body-selected{box-shadow:inset 0 0 0 1px #fff}.mat-calendar-body-cell:not(.mat-calendar-body-disabled):hover>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical),.cdk-keyboard-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical),.cdk-program-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical){background-color:rgba(63,81,181,.3)}.mat-datepicker-content{box-shadow:0px 2px 4px -1px rgba(0, 0, 0, 0.2),0px 4px 5px 0px rgba(0, 0, 0, 0.14),0px 1px 10px 0px rgba(0, 0, 0, 0.12);background-color:#fff;color:rgba(0,0,0,.87)}.mat-datepicker-content.mat-accent .mat-calendar-body-in-range::before{background:rgba(255,64,129,.2)}.mat-datepicker-content.mat-accent .mat-calendar-body-comparison-identical,.mat-datepicker-content.mat-accent .mat-calendar-body-in-comparison-range::before{background:rgba(249,171,0,.2)}.mat-datepicker-content.mat-accent .mat-calendar-body-comparison-bridge-start::before,.mat-datepicker-content.mat-accent [dir=rtl] .mat-calendar-body-comparison-bridge-end::before{background:linear-gradient(to right, rgba(255, 64, 129, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%)}.mat-datepicker-content.mat-accent .mat-calendar-body-comparison-bridge-end::before,.mat-datepicker-content.mat-accent [dir=rtl] .mat-calendar-body-comparison-bridge-start::before{background:linear-gradient(to left, rgba(255, 64, 129, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%)}.mat-datepicker-content.mat-accent .mat-calendar-body-in-range>.mat-calendar-body-comparison-identical,.mat-datepicker-content.mat-accent .mat-calendar-body-in-comparison-range.mat-calendar-body-in-range::after{background:#a8dab5}.mat-datepicker-content.mat-accent .mat-calendar-body-comparison-identical.mat-calendar-body-selected,.mat-datepicker-content.mat-accent .mat-calendar-body-in-comparison-range>.mat-calendar-body-selected{background:#46a35e}.mat-datepicker-content.mat-accent .mat-calendar-body-selected{background-color:#ff4081;color:#fff}.mat-datepicker-content.mat-accent .mat-calendar-body-disabled>.mat-calendar-body-selected{background-color:rgba(255,64,129,.4)}.mat-datepicker-content.mat-accent .mat-calendar-body-today.mat-calendar-body-selected{box-shadow:inset 0 0 0 1px #fff}.mat-datepicker-content.mat-accent .mat-calendar-body-cell:not(.mat-calendar-body-disabled):hover>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical),.mat-datepicker-content.mat-accent .cdk-keyboard-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical),.mat-datepicker-content.mat-accent .cdk-program-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical){background-color:rgba(255,64,129,.3)}.mat-datepicker-content.mat-warn .mat-calendar-body-in-range::before{background:rgba(244,67,54,.2)}.mat-datepicker-content.mat-warn .mat-calendar-body-comparison-identical,.mat-datepicker-content.mat-warn .mat-calendar-body-in-comparison-range::before{background:rgba(249,171,0,.2)}.mat-datepicker-content.mat-warn .mat-calendar-body-comparison-bridge-start::before,.mat-datepicker-content.mat-warn [dir=rtl] .mat-calendar-body-comparison-bridge-end::before{background:linear-gradient(to right, rgba(244, 67, 54, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%)}.mat-datepicker-content.mat-warn .mat-calendar-body-comparison-bridge-end::before,.mat-datepicker-content.mat-warn [dir=rtl] .mat-calendar-body-comparison-bridge-start::before{background:linear-gradient(to left, rgba(244, 67, 54, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%)}.mat-datepicker-content.mat-warn .mat-calendar-body-in-range>.mat-calendar-body-comparison-identical,.mat-datepicker-content.mat-warn .mat-calendar-body-in-comparison-range.mat-calendar-body-in-range::after{background:#a8dab5}.mat-datepicker-content.mat-warn .mat-calendar-body-comparison-identical.mat-calendar-body-selected,.mat-datepicker-content.mat-warn .mat-calendar-body-in-comparison-range>.mat-calendar-body-selected{background:#46a35e}.mat-datepicker-content.mat-warn .mat-calendar-body-selected{background-color:#f44336;color:#fff}.mat-datepicker-content.mat-warn .mat-calendar-body-disabled>.mat-calendar-body-selected{background-color:rgba(244,67,54,.4)}.mat-datepicker-content.mat-warn .mat-calendar-body-today.mat-calendar-body-selected{box-shadow:inset 0 0 0 1px #fff}.mat-datepicker-content.mat-warn .mat-calendar-body-cell:not(.mat-calendar-body-disabled):hover>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical),.mat-datepicker-content.mat-warn .cdk-keyboard-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical),.mat-datepicker-content.mat-warn .cdk-program-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical){background-color:rgba(244,67,54,.3)}.mat-datepicker-content-touch{box-shadow:0px 0px 0px 0px rgba(0, 0, 0, 0.2),0px 0px 0px 0px rgba(0, 0, 0, 0.14),0px 0px 0px 0px rgba(0, 0, 0, 0.12)}.mat-datepicker-toggle-active{color:#3f51b5}.mat-datepicker-toggle-active.mat-accent{color:#ff4081}.mat-datepicker-toggle-active.mat-warn{color:#f44336}.mat-date-range-input-inner[disabled]{color:rgba(0,0,0,.38)}.mat-dialog-container{box-shadow:0px 11px 15px -7px rgba(0, 0, 0, 0.2),0px 24px 38px 3px rgba(0, 0, 0, 0.14),0px 9px 46px 8px rgba(0, 0, 0, 0.12);background:#fff;color:rgba(0,0,0,.87)}.mat-divider{border-top-color:rgba(0,0,0,.12)}.mat-divider-vertical{border-right-color:rgba(0,0,0,.12)}.mat-expansion-panel{background:#fff;color:rgba(0,0,0,.87)}.mat-expansion-panel:not([class*=mat-elevation-z]){box-shadow:0px 3px 1px -2px rgba(0, 0, 0, 0.2),0px 2px 2px 0px rgba(0, 0, 0, 0.14),0px 1px 5px 0px rgba(0, 0, 0, 0.12)}.mat-action-row{border-top-color:rgba(0,0,0,.12)}.mat-expansion-panel .mat-expansion-panel-header.cdk-keyboard-focused:not([aria-disabled=true]),.mat-expansion-panel .mat-expansion-panel-header.cdk-program-focused:not([aria-disabled=true]),.mat-expansion-panel:not(.mat-expanded) .mat-expansion-panel-header:hover:not([aria-disabled=true]){background:rgba(0,0,0,.04)}@media(hover: none){.mat-expansion-panel:not(.mat-expanded):not([aria-disabled=true]) .mat-expansion-panel-header:hover{background:#fff}}.mat-expansion-panel-header-title{color:rgba(0,0,0,.87)}.mat-expansion-panel-header-description,.mat-expansion-indicator::after{color:rgba(0,0,0,.54)}.mat-expansion-panel-header[aria-disabled=true]{color:rgba(0,0,0,.26)}.mat-expansion-panel-header[aria-disabled=true] .mat-expansion-panel-header-title,.mat-expansion-panel-header[aria-disabled=true] .mat-expansion-panel-header-description{color:inherit}.mat-expansion-panel-header{height:48px}.mat-expansion-panel-header.mat-expanded{height:64px}.mat-form-field-label{color:rgba(0,0,0,.6)}.mat-hint{color:rgba(0,0,0,.6)}.mat-form-field.mat-focused .mat-form-field-label{color:#3f51b5}.mat-form-field.mat-focused .mat-form-field-label.mat-accent{color:#ff4081}.mat-form-field.mat-focused .mat-form-field-label.mat-warn{color:#f44336}.mat-focused .mat-form-field-required-marker{color:#ff4081}.mat-form-field-ripple{background-color:rgba(0,0,0,.87)}.mat-form-field.mat-focused .mat-form-field-ripple{background-color:#3f51b5}.mat-form-field.mat-focused .mat-form-field-ripple.mat-accent{background-color:#ff4081}.mat-form-field.mat-focused .mat-form-field-ripple.mat-warn{background-color:#f44336}.mat-form-field-type-mat-native-select.mat-focused:not(.mat-form-field-invalid) .mat-form-field-infix::after{color:#3f51b5}.mat-form-field-type-mat-native-select.mat-focused:not(.mat-form-field-invalid).mat-accent .mat-form-field-infix::after{color:#ff4081}.mat-form-field-type-mat-native-select.mat-focused:not(.mat-form-field-invalid).mat-warn .mat-form-field-infix::after{color:#f44336}.mat-form-field.mat-form-field-invalid .mat-form-field-label{color:#f44336}.mat-form-field.mat-form-field-invalid .mat-form-field-label.mat-accent,.mat-form-field.mat-form-field-invalid .mat-form-field-label .mat-form-field-required-marker{color:#f44336}.mat-form-field.mat-form-field-invalid .mat-form-field-ripple,.mat-form-field.mat-form-field-invalid .mat-form-field-ripple.mat-accent{background-color:#f44336}.mat-error{color:#f44336}.mat-form-field-appearance-legacy .mat-form-field-label{color:rgba(0,0,0,.54)}.mat-form-field-appearance-legacy .mat-hint{color:rgba(0,0,0,.54)}.mat-form-field-appearance-legacy .mat-form-field-underline{background-color:rgba(0,0,0,.42)}.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{background-image:linear-gradient(to right, rgba(0, 0, 0, 0.42) 0%, rgba(0, 0, 0, 0.42) 33%, transparent 0%);background-size:4px 100%;background-repeat:repeat-x}.mat-form-field-appearance-standard .mat-form-field-underline{background-color:rgba(0,0,0,.42)}.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{background-image:linear-gradient(to right, rgba(0, 0, 0, 0.42) 0%, rgba(0, 0, 0, 0.42) 33%, transparent 0%);background-size:4px 100%;background-repeat:repeat-x}.mat-form-field-appearance-fill .mat-form-field-flex{background-color:rgba(0,0,0,.04)}.mat-form-field-appearance-fill.mat-form-field-disabled .mat-form-field-flex{background-color:rgba(0,0,0,.02)}.mat-form-field-appearance-fill .mat-form-field-underline::before{background-color:rgba(0,0,0,.42)}.mat-form-field-appearance-fill.mat-form-field-disabled .mat-form-field-label{color:rgba(0,0,0,.38)}.mat-form-field-appearance-fill.mat-form-field-disabled .mat-form-field-underline::before{background-color:transparent}.mat-form-field-appearance-outline .mat-form-field-outline{color:rgba(0,0,0,.12)}.mat-form-field-appearance-outline .mat-form-field-outline-thick{color:rgba(0,0,0,.87)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick{color:#3f51b5}.mat-form-field-appearance-outline.mat-focused.mat-accent .mat-form-field-outline-thick{color:#ff4081}.mat-form-field-appearance-outline.mat-focused.mat-warn .mat-form-field-outline-thick{color:#f44336}.mat-form-field-appearance-outline.mat-form-field-invalid.mat-form-field-invalid .mat-form-field-outline-thick{color:#f44336}.mat-form-field-appearance-outline.mat-form-field-disabled .mat-form-field-label{color:rgba(0,0,0,.38)}.mat-form-field-appearance-outline.mat-form-field-disabled .mat-form-field-outline{color:rgba(0,0,0,.06)}.mat-icon.mat-primary{color:#3f51b5}.mat-icon.mat-accent{color:#ff4081}.mat-icon.mat-warn{color:#f44336}.mat-form-field-type-mat-native-select .mat-form-field-infix::after{color:rgba(0,0,0,.54)}.mat-input-element:disabled,.mat-form-field-type-mat-native-select.mat-form-field-disabled .mat-form-field-infix::after{color:rgba(0,0,0,.38)}.mat-input-element{caret-color:#3f51b5}.mat-input-element::placeholder{color:rgba(0,0,0,.42)}.mat-input-element::-moz-placeholder{color:rgba(0,0,0,.42)}.mat-input-element::-webkit-input-placeholder{color:rgba(0,0,0,.42)}.mat-input-element:-ms-input-placeholder{color:rgba(0,0,0,.42)}.mat-form-field.mat-accent .mat-input-element{caret-color:#ff4081}.mat-form-field.mat-warn .mat-input-element,.mat-form-field-invalid .mat-input-element{caret-color:#f44336}.mat-form-field-type-mat-native-select.mat-form-field-invalid .mat-form-field-infix::after{color:#f44336}.mat-list-base .mat-list-item{color:rgba(0,0,0,.87)}.mat-list-base .mat-list-option{color:rgba(0,0,0,.87)}.mat-list-base .mat-subheader{color:rgba(0,0,0,.54)}.mat-list-item-disabled{background-color:#eee}.mat-list-option:hover,.mat-list-option:focus,.mat-nav-list .mat-list-item:hover,.mat-nav-list .mat-list-item:focus,.mat-action-list .mat-list-item:hover,.mat-action-list .mat-list-item:focus{background:rgba(0,0,0,.04)}.mat-list-single-selected-option,.mat-list-single-selected-option:hover,.mat-list-single-selected-option:focus{background:rgba(0,0,0,.12)}.mat-menu-panel{background:#fff}.mat-menu-panel:not([class*=mat-elevation-z]){box-shadow:0px 2px 4px -1px rgba(0, 0, 0, 0.2),0px 4px 5px 0px rgba(0, 0, 0, 0.14),0px 1px 10px 0px rgba(0, 0, 0, 0.12)}.mat-menu-item{background:transparent;color:rgba(0,0,0,.87)}.mat-menu-item[disabled],.mat-menu-item[disabled]::after,.mat-menu-item[disabled] .mat-icon-no-color{color:rgba(0,0,0,.38)}.mat-menu-item .mat-icon-no-color,.mat-menu-item-submenu-trigger::after{color:rgba(0,0,0,.54)}.mat-menu-item:hover:not([disabled]),.mat-menu-item.cdk-program-focused:not([disabled]),.mat-menu-item.cdk-keyboard-focused:not([disabled]),.mat-menu-item-highlighted:not([disabled]){background:rgba(0,0,0,.04)}.mat-paginator{background:#fff}.mat-paginator,.mat-paginator-page-size .mat-select-trigger{color:rgba(0,0,0,.54)}.mat-paginator-decrement,.mat-paginator-increment{border-top:2px solid rgba(0,0,0,.54);border-right:2px solid rgba(0,0,0,.54)}.mat-paginator-first,.mat-paginator-last{border-top:2px solid rgba(0,0,0,.54)}.mat-icon-button[disabled] .mat-paginator-decrement,.mat-icon-button[disabled] .mat-paginator-increment,.mat-icon-button[disabled] .mat-paginator-first,.mat-icon-button[disabled] .mat-paginator-last{border-color:rgba(0,0,0,.38)}.mat-paginator-container{min-height:56px}.mat-progress-bar-background{fill:#c5cae9}.mat-progress-bar-buffer{background-color:#c5cae9}.mat-progress-bar-fill::after{background-color:#3f51b5}.mat-progress-bar.mat-accent .mat-progress-bar-background{fill:#ff80ab}.mat-progress-bar.mat-accent .mat-progress-bar-buffer{background-color:#ff80ab}.mat-progress-bar.mat-accent .mat-progress-bar-fill::after{background-color:#ff4081}.mat-progress-bar.mat-warn .mat-progress-bar-background{fill:#ffcdd2}.mat-progress-bar.mat-warn .mat-progress-bar-buffer{background-color:#ffcdd2}.mat-progress-bar.mat-warn .mat-progress-bar-fill::after{background-color:#f44336}.mat-progress-spinner circle,.mat-spinner circle{stroke:#3f51b5}.mat-progress-spinner.mat-accent circle,.mat-spinner.mat-accent circle{stroke:#ff4081}.mat-progress-spinner.mat-warn circle,.mat-spinner.mat-warn circle{stroke:#f44336}.mat-radio-outer-circle{border-color:rgba(0,0,0,.54)}.mat-radio-button.mat-primary.mat-radio-checked .mat-radio-outer-circle{border-color:#3f51b5}.mat-radio-button.mat-primary .mat-radio-inner-circle,.mat-radio-button.mat-primary .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple),.mat-radio-button.mat-primary.mat-radio-checked .mat-radio-persistent-ripple,.mat-radio-button.mat-primary:active .mat-radio-persistent-ripple{background-color:#3f51b5}.mat-radio-button.mat-accent.mat-radio-checked .mat-radio-outer-circle{border-color:#ff4081}.mat-radio-button.mat-accent .mat-radio-inner-circle,.mat-radio-button.mat-accent .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple),.mat-radio-button.mat-accent.mat-radio-checked .mat-radio-persistent-ripple,.mat-radio-button.mat-accent:active .mat-radio-persistent-ripple{background-color:#ff4081}.mat-radio-button.mat-warn.mat-radio-checked .mat-radio-outer-circle{border-color:#f44336}.mat-radio-button.mat-warn .mat-radio-inner-circle,.mat-radio-button.mat-warn .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple),.mat-radio-button.mat-warn.mat-radio-checked .mat-radio-persistent-ripple,.mat-radio-button.mat-warn:active .mat-radio-persistent-ripple{background-color:#f44336}.mat-radio-button.mat-radio-disabled.mat-radio-checked .mat-radio-outer-circle,.mat-radio-button.mat-radio-disabled .mat-radio-outer-circle{border-color:rgba(0,0,0,.38)}.mat-radio-button.mat-radio-disabled .mat-radio-ripple .mat-ripple-element,.mat-radio-button.mat-radio-disabled .mat-radio-inner-circle{background-color:rgba(0,0,0,.38)}.mat-radio-button.mat-radio-disabled .mat-radio-label-content{color:rgba(0,0,0,.38)}.mat-radio-button .mat-ripple-element{background-color:#000}.mat-select-value{color:rgba(0,0,0,.87)}.mat-select-placeholder{color:rgba(0,0,0,.42)}.mat-select-disabled .mat-select-value{color:rgba(0,0,0,.38)}.mat-select-arrow{color:rgba(0,0,0,.54)}.mat-select-panel{background:#fff}.mat-select-panel:not([class*=mat-elevation-z]){box-shadow:0px 2px 4px -1px rgba(0, 0, 0, 0.2),0px 4px 5px 0px rgba(0, 0, 0, 0.14),0px 1px 10px 0px rgba(0, 0, 0, 0.12)}.mat-select-panel .mat-option.mat-selected:not(.mat-option-multiple){background:rgba(0,0,0,.12)}.mat-form-field.mat-focused.mat-primary .mat-select-arrow{color:#3f51b5}.mat-form-field.mat-focused.mat-accent .mat-select-arrow{color:#ff4081}.mat-form-field.mat-focused.mat-warn .mat-select-arrow{color:#f44336}.mat-form-field .mat-select.mat-select-invalid .mat-select-arrow{color:#f44336}.mat-form-field .mat-select.mat-select-disabled .mat-select-arrow{color:rgba(0,0,0,.38)}.mat-drawer-container{background-color:#fafafa;color:rgba(0,0,0,.87)}.mat-drawer{background-color:#fff;color:rgba(0,0,0,.87)}.mat-drawer.mat-drawer-push{background-color:#fff}.mat-drawer:not(.mat-drawer-side){box-shadow:0px 8px 10px -5px rgba(0, 0, 0, 0.2),0px 16px 24px 2px rgba(0, 0, 0, 0.14),0px 6px 30px 5px rgba(0, 0, 0, 0.12)}.mat-drawer-side{border-right:solid 1px rgba(0,0,0,.12)}.mat-drawer-side.mat-drawer-end{border-left:solid 1px rgba(0,0,0,.12);border-right:none}[dir=rtl] .mat-drawer-side{border-left:solid 1px rgba(0,0,0,.12);border-right:none}[dir=rtl] .mat-drawer-side.mat-drawer-end{border-left:none;border-right:solid 1px rgba(0,0,0,.12)}.mat-drawer-backdrop.mat-drawer-shown{background-color:rgba(0,0,0,.6)}.mat-slide-toggle.mat-checked .mat-slide-toggle-thumb{background-color:#ff4081}.mat-slide-toggle.mat-checked .mat-slide-toggle-bar{background-color:rgba(255,64,129,.54)}.mat-slide-toggle.mat-checked .mat-ripple-element{background-color:#ff4081}.mat-slide-toggle.mat-primary.mat-checked .mat-slide-toggle-thumb{background-color:#3f51b5}.mat-slide-toggle.mat-primary.mat-checked .mat-slide-toggle-bar{background-color:rgba(63,81,181,.54)}.mat-slide-toggle.mat-primary.mat-checked .mat-ripple-element{background-color:#3f51b5}.mat-slide-toggle.mat-warn.mat-checked .mat-slide-toggle-thumb{background-color:#f44336}.mat-slide-toggle.mat-warn.mat-checked .mat-slide-toggle-bar{background-color:rgba(244,67,54,.54)}.mat-slide-toggle.mat-warn.mat-checked .mat-ripple-element{background-color:#f44336}.mat-slide-toggle:not(.mat-checked) .mat-ripple-element{background-color:#000}.mat-slide-toggle-thumb{box-shadow:0px 2px 1px -1px rgba(0, 0, 0, 0.2),0px 1px 1px 0px rgba(0, 0, 0, 0.14),0px 1px 3px 0px rgba(0, 0, 0, 0.12);background-color:#fafafa}.mat-slide-toggle-bar{background-color:rgba(0,0,0,.38)}.mat-slider-track-background{background-color:rgba(0,0,0,.26)}.mat-primary .mat-slider-track-fill,.mat-primary .mat-slider-thumb,.mat-primary .mat-slider-thumb-label{background-color:#3f51b5}.mat-primary .mat-slider-thumb-label-text{color:#fff}.mat-primary .mat-slider-focus-ring{background-color:rgba(63,81,181,.2)}.mat-accent .mat-slider-track-fill,.mat-accent .mat-slider-thumb,.mat-accent .mat-slider-thumb-label{background-color:#ff4081}.mat-accent .mat-slider-thumb-label-text{color:#fff}.mat-accent .mat-slider-focus-ring{background-color:rgba(255,64,129,.2)}.mat-warn .mat-slider-track-fill,.mat-warn .mat-slider-thumb,.mat-warn .mat-slider-thumb-label{background-color:#f44336}.mat-warn .mat-slider-thumb-label-text{color:#fff}.mat-warn .mat-slider-focus-ring{background-color:rgba(244,67,54,.2)}.mat-slider:hover .mat-slider-track-background,.cdk-focused .mat-slider-track-background{background-color:rgba(0,0,0,.38)}.mat-slider-disabled .mat-slider-track-background,.mat-slider-disabled .mat-slider-track-fill,.mat-slider-disabled .mat-slider-thumb{background-color:rgba(0,0,0,.26)}.mat-slider-disabled:hover .mat-slider-track-background{background-color:rgba(0,0,0,.26)}.mat-slider-min-value .mat-slider-focus-ring{background-color:rgba(0,0,0,.12)}.mat-slider-min-value.mat-slider-thumb-label-showing .mat-slider-thumb,.mat-slider-min-value.mat-slider-thumb-label-showing .mat-slider-thumb-label{background-color:rgba(0,0,0,.87)}.mat-slider-min-value.mat-slider-thumb-label-showing.cdk-focused .mat-slider-thumb,.mat-slider-min-value.mat-slider-thumb-label-showing.cdk-focused .mat-slider-thumb-label{background-color:rgba(0,0,0,.26)}.mat-slider-min-value:not(.mat-slider-thumb-label-showing) .mat-slider-thumb{border-color:rgba(0,0,0,.26);background-color:transparent}.mat-slider-min-value:not(.mat-slider-thumb-label-showing):hover .mat-slider-thumb,.mat-slider-min-value:not(.mat-slider-thumb-label-showing).cdk-focused .mat-slider-thumb{border-color:rgba(0,0,0,.38)}.mat-slider-min-value:not(.mat-slider-thumb-label-showing):hover.mat-slider-disabled .mat-slider-thumb,.mat-slider-min-value:not(.mat-slider-thumb-label-showing).cdk-focused.mat-slider-disabled .mat-slider-thumb{border-color:rgba(0,0,0,.26)}.mat-slider-has-ticks .mat-slider-wrapper::after{border-color:rgba(0,0,0,.7)}.mat-slider-horizontal .mat-slider-ticks{background-image:repeating-linear-gradient(to right, rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.7) 2px, transparent 0, transparent);background-image:-moz-repeating-linear-gradient(0.0001deg, rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.7) 2px, transparent 0, transparent)}.mat-slider-vertical .mat-slider-ticks{background-image:repeating-linear-gradient(to bottom, rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.7) 2px, transparent 0, transparent)}.mat-step-header.cdk-keyboard-focused,.mat-step-header.cdk-program-focused,.mat-step-header:hover{background-color:rgba(0,0,0,.04)}@media(hover: none){.mat-step-header:hover{background:none}}.mat-step-header .mat-step-label,.mat-step-header .mat-step-optional{color:rgba(0,0,0,.54)}.mat-step-header .mat-step-icon{background-color:rgba(0,0,0,.54);color:#fff}.mat-step-header .mat-step-icon-selected,.mat-step-header .mat-step-icon-state-done,.mat-step-header .mat-step-icon-state-edit{background-color:#3f51b5;color:#fff}.mat-step-header.mat-accent .mat-step-icon{color:#fff}.mat-step-header.mat-accent .mat-step-icon-selected,.mat-step-header.mat-accent .mat-step-icon-state-done,.mat-step-header.mat-accent .mat-step-icon-state-edit{background-color:#ff4081;color:#fff}.mat-step-header.mat-warn .mat-step-icon{color:#fff}.mat-step-header.mat-warn .mat-step-icon-selected,.mat-step-header.mat-warn .mat-step-icon-state-done,.mat-step-header.mat-warn .mat-step-icon-state-edit{background-color:#f44336;color:#fff}.mat-step-header .mat-step-icon-state-error{background-color:transparent;color:#f44336}.mat-step-header .mat-step-label.mat-step-label-active{color:rgba(0,0,0,.87)}.mat-step-header .mat-step-label.mat-step-label-error{color:#f44336}.mat-stepper-horizontal,.mat-stepper-vertical{background-color:#fff}.mat-stepper-vertical-line::before{border-left-color:rgba(0,0,0,.12)}.mat-horizontal-stepper-header::before,.mat-horizontal-stepper-header::after,.mat-stepper-horizontal-line{border-top-color:rgba(0,0,0,.12)}.mat-horizontal-stepper-header{height:72px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header,.mat-vertical-stepper-header{padding:24px 24px}.mat-stepper-vertical-line::before{top:-16px;bottom:-16px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header::after,.mat-stepper-label-position-bottom .mat-horizontal-stepper-header::before{top:36px}.mat-stepper-label-position-bottom .mat-stepper-horizontal-line{top:36px}.mat-sort-header-arrow{color:#757575}.mat-tab-nav-bar,.mat-tab-header{border-bottom:1px solid rgba(0,0,0,.12)}.mat-tab-group-inverted-header .mat-tab-nav-bar,.mat-tab-group-inverted-header .mat-tab-header{border-top:1px solid rgba(0,0,0,.12);border-bottom:none}.mat-tab-label,.mat-tab-link{color:rgba(0,0,0,.87)}.mat-tab-label.mat-tab-disabled,.mat-tab-link.mat-tab-disabled{color:rgba(0,0,0,.38)}.mat-tab-header-pagination-chevron{border-color:rgba(0,0,0,.87)}.mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron{border-color:rgba(0,0,0,.38)}.mat-tab-group[class*=mat-background-] .mat-tab-header,.mat-tab-nav-bar[class*=mat-background-]{border-bottom:none;border-top:none}.mat-tab-group.mat-primary .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-group.mat-primary .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-group.mat-primary .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-group.mat-primary .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-primary .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-primary .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-primary .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-primary .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled){background-color:rgba(197,202,233,.3)}.mat-tab-group.mat-primary .mat-ink-bar,.mat-tab-nav-bar.mat-primary .mat-ink-bar{background-color:#3f51b5}.mat-tab-group.mat-primary.mat-background-primary .mat-ink-bar,.mat-tab-nav-bar.mat-primary.mat-background-primary .mat-ink-bar{background-color:#fff}.mat-tab-group.mat-accent .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-group.mat-accent .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-group.mat-accent .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-group.mat-accent .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-accent .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-accent .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-accent .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-accent .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled){background-color:rgba(255,128,171,.3)}.mat-tab-group.mat-accent .mat-ink-bar,.mat-tab-nav-bar.mat-accent .mat-ink-bar{background-color:#ff4081}.mat-tab-group.mat-accent.mat-background-accent .mat-ink-bar,.mat-tab-nav-bar.mat-accent.mat-background-accent .mat-ink-bar{background-color:#fff}.mat-tab-group.mat-warn .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-group.mat-warn .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-group.mat-warn .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-group.mat-warn .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-warn .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-warn .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-warn .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-warn .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled){background-color:rgba(255,205,210,.3)}.mat-tab-group.mat-warn .mat-ink-bar,.mat-tab-nav-bar.mat-warn .mat-ink-bar{background-color:#f44336}.mat-tab-group.mat-warn.mat-background-warn .mat-ink-bar,.mat-tab-nav-bar.mat-warn.mat-background-warn .mat-ink-bar{background-color:#fff}.mat-tab-group.mat-background-primary .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-group.mat-background-primary .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-group.mat-background-primary .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-group.mat-background-primary .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-background-primary .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-background-primary .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-background-primary .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-background-primary .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled){background-color:rgba(197,202,233,.3)}.mat-tab-group.mat-background-primary .mat-tab-header,.mat-tab-group.mat-background-primary .mat-tab-links,.mat-tab-group.mat-background-primary .mat-tab-header-pagination,.mat-tab-nav-bar.mat-background-primary .mat-tab-header,.mat-tab-nav-bar.mat-background-primary .mat-tab-links,.mat-tab-nav-bar.mat-background-primary .mat-tab-header-pagination{background-color:#3f51b5}.mat-tab-group.mat-background-primary .mat-tab-label,.mat-tab-group.mat-background-primary .mat-tab-link,.mat-tab-nav-bar.mat-background-primary .mat-tab-label,.mat-tab-nav-bar.mat-background-primary .mat-tab-link{color:#fff}.mat-tab-group.mat-background-primary .mat-tab-label.mat-tab-disabled,.mat-tab-group.mat-background-primary .mat-tab-link.mat-tab-disabled,.mat-tab-nav-bar.mat-background-primary .mat-tab-label.mat-tab-disabled,.mat-tab-nav-bar.mat-background-primary .mat-tab-link.mat-tab-disabled{color:rgba(255,255,255,.4)}.mat-tab-group.mat-background-primary .mat-tab-header-pagination-chevron,.mat-tab-nav-bar.mat-background-primary .mat-tab-header-pagination-chevron{border-color:#fff}.mat-tab-group.mat-background-primary .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron,.mat-tab-nav-bar.mat-background-primary .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron{border-color:rgba(255,255,255,.4)}.mat-tab-group.mat-background-primary .mat-ripple-element,.mat-tab-nav-bar.mat-background-primary .mat-ripple-element{background-color:rgba(255,255,255,.12)}.mat-tab-group.mat-background-accent .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-group.mat-background-accent .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-group.mat-background-accent .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-group.mat-background-accent .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-background-accent .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-background-accent .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-background-accent .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-background-accent .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled){background-color:rgba(255,128,171,.3)}.mat-tab-group.mat-background-accent .mat-tab-header,.mat-tab-group.mat-background-accent .mat-tab-links,.mat-tab-group.mat-background-accent .mat-tab-header-pagination,.mat-tab-nav-bar.mat-background-accent .mat-tab-header,.mat-tab-nav-bar.mat-background-accent .mat-tab-links,.mat-tab-nav-bar.mat-background-accent .mat-tab-header-pagination{background-color:#ff4081}.mat-tab-group.mat-background-accent .mat-tab-label,.mat-tab-group.mat-background-accent .mat-tab-link,.mat-tab-nav-bar.mat-background-accent .mat-tab-label,.mat-tab-nav-bar.mat-background-accent .mat-tab-link{color:#fff}.mat-tab-group.mat-background-accent .mat-tab-label.mat-tab-disabled,.mat-tab-group.mat-background-accent .mat-tab-link.mat-tab-disabled,.mat-tab-nav-bar.mat-background-accent .mat-tab-label.mat-tab-disabled,.mat-tab-nav-bar.mat-background-accent .mat-tab-link.mat-tab-disabled{color:rgba(255,255,255,.4)}.mat-tab-group.mat-background-accent .mat-tab-header-pagination-chevron,.mat-tab-nav-bar.mat-background-accent .mat-tab-header-pagination-chevron{border-color:#fff}.mat-tab-group.mat-background-accent .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron,.mat-tab-nav-bar.mat-background-accent .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron{border-color:rgba(255,255,255,.4)}.mat-tab-group.mat-background-accent .mat-ripple-element,.mat-tab-nav-bar.mat-background-accent .mat-ripple-element{background-color:rgba(255,255,255,.12)}.mat-tab-group.mat-background-warn .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-group.mat-background-warn .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-group.mat-background-warn .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-group.mat-background-warn .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-background-warn .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-background-warn .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-background-warn .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-background-warn .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled){background-color:rgba(255,205,210,.3)}.mat-tab-group.mat-background-warn .mat-tab-header,.mat-tab-group.mat-background-warn .mat-tab-links,.mat-tab-group.mat-background-warn .mat-tab-header-pagination,.mat-tab-nav-bar.mat-background-warn .mat-tab-header,.mat-tab-nav-bar.mat-background-warn .mat-tab-links,.mat-tab-nav-bar.mat-background-warn .mat-tab-header-pagination{background-color:#f44336}.mat-tab-group.mat-background-warn .mat-tab-label,.mat-tab-group.mat-background-warn .mat-tab-link,.mat-tab-nav-bar.mat-background-warn .mat-tab-label,.mat-tab-nav-bar.mat-background-warn .mat-tab-link{color:#fff}.mat-tab-group.mat-background-warn .mat-tab-label.mat-tab-disabled,.mat-tab-group.mat-background-warn .mat-tab-link.mat-tab-disabled,.mat-tab-nav-bar.mat-background-warn .mat-tab-label.mat-tab-disabled,.mat-tab-nav-bar.mat-background-warn .mat-tab-link.mat-tab-disabled{color:rgba(255,255,255,.4)}.mat-tab-group.mat-background-warn .mat-tab-header-pagination-chevron,.mat-tab-nav-bar.mat-background-warn .mat-tab-header-pagination-chevron{border-color:#fff}.mat-tab-group.mat-background-warn .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron,.mat-tab-nav-bar.mat-background-warn .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron{border-color:rgba(255,255,255,.4)}.mat-tab-group.mat-background-warn .mat-ripple-element,.mat-tab-nav-bar.mat-background-warn .mat-ripple-element{background-color:rgba(255,255,255,.12)}.mat-toolbar{background:#f5f5f5;color:rgba(0,0,0,.87)}.mat-toolbar.mat-primary{background:#3f51b5;color:#fff}.mat-toolbar.mat-accent{background:#ff4081;color:#fff}.mat-toolbar.mat-warn{background:#f44336;color:#fff}.mat-toolbar .mat-form-field-underline,.mat-toolbar .mat-form-field-ripple,.mat-toolbar .mat-focused .mat-form-field-ripple{background-color:currentColor}.mat-toolbar .mat-form-field-label,.mat-toolbar .mat-focused .mat-form-field-label,.mat-toolbar .mat-select-value,.mat-toolbar .mat-select-arrow,.mat-toolbar .mat-form-field.mat-focused .mat-select-arrow{color:inherit}.mat-toolbar .mat-input-element{caret-color:currentColor}.mat-toolbar-multiple-rows{min-height:64px}.mat-toolbar-row,.mat-toolbar-single-row{height:64px}@media(max-width: 599px){.mat-toolbar-multiple-rows{min-height:56px}.mat-toolbar-row,.mat-toolbar-single-row{height:56px}}.mat-tooltip{background:rgba(97,97,97,.9)}.mat-tree{background:#fff}.mat-tree-node,.mat-nested-tree-node{color:rgba(0,0,0,.87)}.mat-tree-node{min-height:48px}.mat-snack-bar-container{color:rgba(255,255,255,.7);background:#323232;box-shadow:0px 3px 5px -1px rgba(0, 0, 0, 0.2),0px 6px 10px 0px rgba(0, 0, 0, 0.14),0px 1px 18px 0px rgba(0, 0, 0, 0.12)}.mat-simple-snackbar-action{color:#ff4081}\n","/* You can add global styles to this file, and also import other style files */\n\nhtml, body { height: 100%; }\nbody { margin: 0; font-family: Roboto, \"Helvetica Neue\", sans-serif; }\n","/*\n * Copyright (C) 2016-2017 by Teradata Corporation. All rights reserved.\n * TERADATA CORPORATION CONFIDENTIAL AND TRADE SECRET\n */\n\n@import '~@angular/material/theming';\n@import '~@covalent/core/theming/all-theme';\n\n@import '~@covalent/highlight/highlight-theme';\n@import '~@covalent/markdown/markdown-theme';\n\n@import '~@covalent/flavored-markdown/flavored-markdown-theme';\n\n\n// Plus imports for other components in your app.\n\n// Include the base styles for Angular Material core. We include this here so that you only\n// have to load a single css file for Angular Material in your app.\n@include mat-core();\n\n// Define the palettes for your theme using the Material Design palettes available in palette.scss\n// (imported above). For each palette, you can optionally specify a default, lighter, and darker\n// hue.\n$primary: mat-palette($mat-orange, 700);\n$accent:  mat-palette($mat-teal, 800, A100, A400);\n\n// The warn palette is optional (defaults to red).\n$warn:    mat-palette($mat-red, 600);\n$warnmed:    mat-palette($mat-orange, 600);\n$warnlow:    mat-palette($mat-yellow, 600);\n\n// Create the theme object (a Sass map containing all of the palettes).\n$theme: mat-light-theme($primary, $accent, $warn);\n\n// Include theme styles for core and each component used in your app.\n// Alternatively, you can import and @include the theme mixins for each component\n// that you are using.\n@include angular-material-theme($theme);\n@include covalent-theme($theme);\n@include covalent-markdown-theme($theme);\n@include covalent-highlight-theme();\n@include covalent-flavored-markdown-theme($theme);\n\n\n// Include covalent utility classes\n@include covalent-utilities();\n\n// Include flex layout classes\n@include covalent-layout();\n\n/* ------------------------------------------------------------------------------- */\n$foreground: map-get($theme, foreground);\n$background: map-get($theme, background);\n\n// Apply theme for this app\n// Active icon color in list nav\nmat-nav-list, mat-list {\n        [mat-list-item].active {\n                mat-icon[matListAvatar] {\n                        background-color: mat-color($accent);\n                        color: mat-color($accent, default-contrast);\n                }\n                mat-icon[matListIcon] {\n                        color: mat-color($accent);\n                }\n        }\n}\n\n\n.tick text {\n        fill: mat-color($foreground, disabled);\n}\n.gridline-path {\n        &.gridline-path-horizontal,\n        &.gridline-path-vertical {\n                stroke: rgba(black, 0.06);\n        }\n}\n.legend-title-text {\n        color: mat-color($foreground, secondary-text);\n}\n\n// Dark theme\n.theme-dark {\n        $primary-dark: mat-palette($mat-blue-grey, 900);\n        $accent-dark: mat-palette($mat-deep-orange, A400);\n        $warn-dark: mat-palette($mat-red, 600);\n        $theme-dark: mat-dark-theme($primary-dark, $accent-dark, $warn-dark);\n        @include angular-material-theme($theme-dark);\n        @include covalent-theme($theme-dark);\n\n\n}\n.layout-nav-demo {\n        position: relative;\n        width: 100%;\n        height: 500px;\n}\n\n:host {\n        width: 100%;\n}\n","// File for which all imports are resolved and bundled. This is the entry-point for\n// the `@angular/material` theming Sass bundle. See `//src/material:theming_bundle`.\n\n// Import all the theming functionality.\n// We want overlays to always appear over user content, so set a baseline\n// very high z-index for the overlay container, which is where we create the new\n// stacking context for all overlays.\n$cdk-z-index-overlay-container: 1000 !default;\n$cdk-z-index-overlay: 1000 !default;\n$cdk-z-index-overlay-backdrop: 1000 !default;\n\n// Background color for all of the backdrops\n$cdk-overlay-dark-backdrop-background: rgba(0, 0, 0, 0.32) !default;\n\n// Default backdrop animation is based on the Material Design swift-ease-out.\n$backdrop-animation-duration: 400ms !default;\n$backdrop-animation-timing-function: cubic-bezier(0.25, 0.8, 0.25, 1) !default;\n\n\n@mixin cdk-overlay() {\n  .cdk-overlay-container, .cdk-global-overlay-wrapper {\n    // Disable events from being captured on the overlay container.\n    pointer-events: none;\n\n    // The container should be the size of the viewport.\n    top: 0;\n    left: 0;\n    height: 100%;\n    width: 100%;\n  }\n\n  // The overlay-container is an invisible element which contains all individual overlays.\n  .cdk-overlay-container {\n    position: fixed;\n    z-index: $cdk-z-index-overlay-container;\n\n    &:empty {\n      // Hide the element when it doesn't have any child nodes. This doesn't\n      // include overlays that have been detached, rather than disposed.\n      display: none;\n    }\n  }\n\n  // We use an extra wrapper element in order to use make the overlay itself a flex item.\n  // This makes centering the overlay easy without running into the subpixel rendering\n  // problems tied to using `transform` and without interfering with the other position\n  // strategies.\n  .cdk-global-overlay-wrapper {\n    display: flex;\n    position: absolute;\n    z-index: $cdk-z-index-overlay;\n  }\n\n  // A single overlay pane.\n  .cdk-overlay-pane {\n    // Note: it's important for this one to start off `absolute`,\n    // in order for us to be able to measure it correctly.\n    position: absolute;\n    pointer-events: auto;\n    box-sizing: border-box;\n    z-index: $cdk-z-index-overlay;\n\n    // For connected-position overlays, we set `display: flex` in\n    // order to force `max-width` and `max-height` to take effect.\n    display: flex;\n    max-width: 100%;\n    max-height: 100%;\n  }\n\n  .cdk-overlay-backdrop {\n    // TODO(jelbourn): reuse sidenav fullscreen mixin.\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n\n    z-index: $cdk-z-index-overlay-backdrop;\n    pointer-events: auto;\n    -webkit-tap-highlight-color: transparent;\n    transition: opacity $backdrop-animation-duration $backdrop-animation-timing-function;\n    opacity: 0;\n\n    &.cdk-overlay-backdrop-showing {\n      opacity: 1;\n\n      // In high contrast mode the rgba background will become solid so we need to fall back\n      // to making it opaque using `opacity`. Note that we can't use the `cdk-high-contrast`\n      // mixin, because we can't normalize the import path to the _a11y.scss both for the\n      // source and when this file is distributed. See #10908.\n      @media screen and (-ms-high-contrast: active) {\n        opacity: 0.6;\n      }\n    }\n  }\n\n  .cdk-overlay-dark-backdrop {\n    background: $cdk-overlay-dark-backdrop-background;\n  }\n\n  .cdk-overlay-transparent-backdrop {\n    // Note: as of Firefox 57, having the backdrop be `background: none` will prevent it from\n    // capturing the user's mouse scroll events. Since we also can't use something like\n    // `rgba(0, 0, 0, 0)`, we work around the inconsistency by not setting the background at\n    // all and using `opacity` to make the element transparent.\n    &, &.cdk-overlay-backdrop-showing {\n      opacity: 0;\n    }\n  }\n\n  // Overlay parent element used with the connected position strategy. Used to constrain the\n  // overlay element's size to fit within the viewport.\n  .cdk-overlay-connected-position-bounding-box {\n    position: absolute;\n    z-index: $cdk-z-index-overlay;\n\n    // We use `display: flex` on this element exclusively for centering connected overlays.\n    // When *not* centering, a top/left/bottom/right will be set which overrides the normal\n    // flex layout.\n    display: flex;\n\n    // We use the `column` direction here to avoid some flexbox issues in Edge\n    // when using the \"grow after open\" options.\n    flex-direction: column;\n\n    // Add some dimensions so the element has an `innerText` which some people depend on in tests.\n    min-width: 1px;\n    min-height: 1px;\n  }\n\n  // Used when disabling global scrolling.\n  .cdk-global-scrollblock {\n    position: fixed;\n\n    // Necessary for the content not to lose its width. Note that we're using 100%, instead of\n    // 100vw, because 100vw includes the width plus the scrollbar, whereas 100% is the width\n    // that the element had before we made it `fixed`.\n    width: 100%;\n\n    // Note: this will always add a scrollbar to whatever element it is on, which can\n    // potentially result in double scrollbars. It shouldn't be an issue, because we won't\n    // block scrolling on a page that doesn't have a scrollbar in the first place.\n    overflow-y: scroll;\n  }\n}\n\n@mixin cdk-a11y {\n  .cdk-visually-hidden {\n    border: 0;\n    clip: rect(0 0 0 0);\n    height: 1px;\n    margin: -1px;\n    overflow: hidden;\n    padding: 0;\n    position: absolute;\n    width: 1px;\n\n    // Avoid browsers rendering the focus ring in some cases.\n    outline: 0;\n\n    // Avoid some cases where the browser will still render the native controls (see #9049).\n    -webkit-appearance: none;\n    -moz-appearance: none;\n  }\n}\n\n/// Emits the mixin's content nested under `$selector-context` if `$selector-context`\n/// is non-empty.\n/// @param selector-context The selector under which to nest the mixin's content.\n@mixin _cdk-optionally-nest-content($selector-context) {\n  @if ($selector-context == '') {\n    @content;\n  }\n  @else {\n    #{$selector-context} {\n      @content;\n    }\n  }\n}\n\n/// Applies styles for users in high contrast mode. Note that this only applies\n/// to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\n/// attribute, however Chrome handles high contrast differently.\n///\n/// @param target Which kind of high contrast setting to target. Defaults to `active`, can be\n///    `white-on-black` or `black-on-white`.\n/// @param encapsulation Whether to emit styles for view encapsulation. Values are:\n///     * `on` - works for `Emulated`, `Native`, and `ShadowDom`\n///     * `off` - works for `None`\n///     * `any` - works for all encapsulation modes by emitting the CSS twice (default).\n@mixin cdk-high-contrast($target: active, $encapsulation: 'any') {\n  @if ($target != 'active' and $target != 'black-on-white' and $target != 'white-on-black') {\n    @error 'Unknown cdk-high-contrast value \"#{$target}\" provided. ' +\n           'Allowed values are \"active\", \"black-on-white\", and \"white-on-black\"';\n  }\n\n  @if ($encapsulation != 'on' and $encapsulation != 'off' and $encapsulation != 'any') {\n    @error 'Unknown cdk-high-contrast encapsulation \"#{$encapsulation}\" provided. ' +\n           'Allowed values are \"on\", \"off\", and \"any\"';\n  }\n\n  // If the selector context has multiple parts, such as `.section, .region`, just doing\n  // `.cdk-high-contrast-xxx #{&}` will only apply the parent selector to the first part of the\n  // context. We address this by nesting the selector context under .cdk-high-contrast.\n  @at-root {\n    $selector-context: #{&};\n\n    @if ($encapsulation != 'on') {\n      .cdk-high-contrast-#{$target} {\n        @include _cdk-optionally-nest-content($selector-context) {\n          @content;\n        }\n      }\n    }\n\n    @if ($encapsulation != 'off') {\n      .cdk-high-contrast-#{$target} :host {\n        @include _cdk-optionally-nest-content($selector-context) {\n          @content;\n        }\n      }\n    }\n  }\n}\n\n// Core styles that enable monitoring autofill state of text fields.\n@mixin cdk-text-field {\n  // Keyframes that apply no styles, but allow us to monitor when an text field becomes autofilled\n  // by watching for the animation events that are fired when they start. Note: the /*!*/ comment is\n  // needed to prevent LibSass from stripping the keyframes out.\n  // Based on: https://medium.com/@brunn/detecting-autofilled-fields-in-javascript-aed598d25da7\n  @keyframes cdk-text-field-autofill-start {/*!*/}\n  @keyframes cdk-text-field-autofill-end {/*!*/}\n\n  .cdk-text-field-autofill-monitored:-webkit-autofill {\n    // Since Chrome 80 we need a 1ms delay, or the animationstart event won't fire.\n    animation: cdk-text-field-autofill-start 0s 1ms;\n  }\n\n  .cdk-text-field-autofill-monitored:not(:-webkit-autofill) {\n    // Since Chrome 80 we need a 1ms delay, or the animationstart event won't fire.\n    animation: cdk-text-field-autofill-end 0s 1ms;\n  }\n\n  // Remove the resize handle on autosizing textareas, because whatever height\n  // the user resized to will be overwritten once they start typing again.\n  textarea.cdk-textarea-autosize {\n    resize: none;\n  }\n\n  // This class is temporarily applied to the textarea when it is being measured. It is immediately\n  // removed when measuring is complete. We use `!important` rules here to make sure user-specified\n  // rules do not interfere with the measurement.\n  textarea.cdk-textarea-autosize-measuring {\n    @include _cdk-textarea-autosize-measuring-base;\n    height: auto !important;\n    overflow: hidden !important;\n  }\n\n  // Similar to the `cdk-textarea-autosize-measuring` class, but only applied on Firefox. We need\n  // to use this class, because Firefox has a bug where changing the `overflow` breaks the user's\n  // ability to undo/redo what they were typing (see #16629). This class is only scoped to Firefox,\n  // because the measurements there don't seem to be affected by the `height: 0`, whereas on other\n  // browsers they are, e.g. Chrome detects longer text and IE does't resize back to normal.\n  // Identical issue report: https://bugzilla.mozilla.org/show_bug.cgi?id=448784\n  textarea.cdk-textarea-autosize-measuring-firefox {\n    @include _cdk-textarea-autosize-measuring-base;\n    height: 0 !important;\n  }\n}\n\n@mixin _cdk-textarea-autosize-measuring-base {\n  // Having 2px top and bottom padding seems to fix a bug where Chrome gets an incorrect\n  // measurement. We just have to account for it later and subtract it off the final result.\n  padding: 2px 0 !important;\n  box-sizing: content-box !important;\n}\n\n// Used to generate UIDs for keyframes used to change the text field autofill styles.\n$cdk-text-field-autofill-color-frame-count: 0;\n\n// Mixin used to apply custom background and foreground colors to an autofilled text field.\n// Based on: https://stackoverflow.com/questions/2781549/\n// removing-input-background-colour-for-chrome-autocomplete#answer-37432260\n@mixin cdk-text-field-autofill-color($background, $foreground:'') {\n  @keyframes cdk-text-field-autofill-color-#{$cdk-text-field-autofill-color-frame-count} {\n    to {\n      background: $background;\n      @if $foreground != '' { color: $foreground; }\n    }\n  }\n\n  &:-webkit-autofill {\n    animation: cdk-text-field-autofill-color-#{$cdk-text-field-autofill-color-frame-count} both;\n  }\n\n  &.cdk-text-field-autofill-monitored:-webkit-autofill {\n    // Since Chrome 80 we need a 1ms delay for cdk-text-field-autofill-start, or the animationstart\n    // event won't fire.\n    animation: cdk-text-field-autofill-start 0s 1ms,\n               cdk-text-field-autofill-color-#{$cdk-text-field-autofill-color-frame-count} both;\n  }\n\n  $cdk-text-field-autofill-color-frame-count:\n      $cdk-text-field-autofill-color-frame-count + 1 !global;\n}\n\n\n// Core styles that can be used to apply material design treatments to any element.\n// Media queries\n// TODO(josephperrott): Change $mat-xsmall and $mat-small usages to rely on BreakpointObserver,\n$mat-xsmall: 'max-width: 599px';\n$mat-small: 'max-width: 959px';\n\n// TODO: Revisit all z-indices before beta\n// z-index master list\n\n$z-index-fab: 20 !default;\n$z-index-drawer: 100 !default;\n\n// Global constants\n$pi: 3.14159265;\n\n// Padding between input toggles and their labels\n$mat-toggle-padding: 8px !default;\n// Width and height of input toggles\n$mat-toggle-size: 20px !default;\n\n// Easing Curves\n// TODO(jelbourn): all of these need to be revisited\n\n// The default animation curves used by material design.\n$mat-linear-out-slow-in-timing-function: cubic-bezier(0, 0, 0.2, 0.1) !default;\n$mat-fast-out-slow-in-timing-function: cubic-bezier(0.4, 0, 0.2, 1) !default;\n$mat-fast-out-linear-in-timing-function: cubic-bezier(0.4, 0, 1, 1) !default;\n\n$ease-in-out-curve-function: cubic-bezier(0.35, 0, 0.25, 1) !default;\n\n$swift-ease-out-duration: 400ms !default;\n$swift-ease-out-timing-function: cubic-bezier(0.25, 0.8, 0.25, 1) !default;\n$swift-ease-out: all $swift-ease-out-duration $swift-ease-out-timing-function !default;\n\n$swift-ease-in-duration: 300ms !default;\n$swift-ease-in-timing-function: cubic-bezier(0.55, 0, 0.55, 0.2) !default;\n$swift-ease-in: all $swift-ease-in-duration $swift-ease-in-timing-function !default;\n\n$swift-ease-in-out-duration: 500ms !default;\n$swift-ease-in-out-timing-function: $ease-in-out-curve-function !default;\n$swift-ease-in-out: all $swift-ease-in-out-duration $swift-ease-in-out-timing-function !default;\n\n$swift-linear-duration: 80ms !default;\n$swift-linear-timing-function: linear !default;\n$swift-linear: all $swift-linear-duration $swift-linear-timing-function !default;\n\n\n\n// A collection of mixins and CSS classes that can be used to apply elevation to a material\n// element.\n// See: https://material.io/design/environment/elevation.html\n// Examples:\n//\n//\n// .mat-foo {\n//   @include $mat-elevation(2);\n//\n//   &:active {\n//     @include $mat-elevation(8);\n//   }\n// }\n//\n// <div id=\"external-card\" class=\"mat-elevation-z2\"><p>Some content</p></div>\n//\n// For an explanation of the design behind how elevation is implemented, see the design doc at\n// https://goo.gl/Kq0k9Z.\n\n// Colors for umbra, penumbra, and ambient shadows. As described in the design doc, each elevation\n// level is created using a set of 3 shadow values, one for umbra (the shadow representing the\n// space completely obscured by an object relative to its light source), one for penumbra (the\n// space partially obscured by an object), and one for ambient (the space which contains the object\n// itself). For a further explanation of these terms and their meanings, see\n// https://en.wikipedia.org/wiki/Umbra,_penumbra_and_antumbra.\n\n// Maps for the different shadow sets and their values within each z-space. These values were\n// created by taking a few reference shadow sets created by Google's Designers and interpolating\n// all of the values between them.\n\n@function _get-umbra-map($color, $opacity) {\n  $shadow-color: if(type-of($color) == color, rgba($color, $opacity * 0.2), $color);\n\n  @return (\n    0: '0px 0px 0px 0px #{$shadow-color}',\n    1: '0px 2px 1px -1px #{$shadow-color}',\n    2: '0px 3px 1px -2px #{$shadow-color}',\n    3: '0px 3px 3px -2px #{$shadow-color}',\n    4: '0px 2px 4px -1px #{$shadow-color}',\n    5: '0px 3px 5px -1px #{$shadow-color}',\n    6: '0px 3px 5px -1px #{$shadow-color}',\n    7: '0px 4px 5px -2px #{$shadow-color}',\n    8: '0px 5px 5px -3px #{$shadow-color}',\n    9: '0px 5px 6px -3px #{$shadow-color}',\n    10: '0px 6px 6px -3px #{$shadow-color}',\n    11: '0px 6px 7px -4px #{$shadow-color}',\n    12: '0px 7px 8px -4px #{$shadow-color}',\n    13: '0px 7px 8px -4px #{$shadow-color}',\n    14: '0px 7px 9px -4px #{$shadow-color}',\n    15: '0px 8px 9px -5px #{$shadow-color}',\n    16: '0px 8px 10px -5px #{$shadow-color}',\n    17: '0px 8px 11px -5px #{$shadow-color}',\n    18: '0px 9px 11px -5px #{$shadow-color}',\n    19: '0px 9px 12px -6px #{$shadow-color}',\n    20: '0px 10px 13px -6px #{$shadow-color}',\n    21: '0px 10px 13px -6px #{$shadow-color}',\n    22: '0px 10px 14px -6px #{$shadow-color}',\n    23: '0px 11px 14px -7px #{$shadow-color}',\n    24: '0px 11px 15px -7px #{$shadow-color}'\n  );\n}\n\n@function _get-penumbra-map($color, $opacity) {\n  $shadow-color: if(type-of($color) == color, rgba($color, $opacity * 0.14), $color);\n\n  @return (\n    0: '0px 0px 0px 0px #{$shadow-color}',\n    1: '0px 1px 1px 0px #{$shadow-color}',\n    2: '0px 2px 2px 0px #{$shadow-color}',\n    3: '0px 3px 4px 0px #{$shadow-color}',\n    4: '0px 4px 5px 0px #{$shadow-color}',\n    5: '0px 5px 8px 0px #{$shadow-color}',\n    6: '0px 6px 10px 0px #{$shadow-color}',\n    7: '0px 7px 10px 1px #{$shadow-color}',\n    8: '0px 8px 10px 1px #{$shadow-color}',\n    9: '0px 9px 12px 1px #{$shadow-color}',\n    10: '0px 10px 14px 1px #{$shadow-color}',\n    11: '0px 11px 15px 1px #{$shadow-color}',\n    12: '0px 12px 17px 2px #{$shadow-color}',\n    13: '0px 13px 19px 2px #{$shadow-color}',\n    14: '0px 14px 21px 2px #{$shadow-color}',\n    15: '0px 15px 22px 2px #{$shadow-color}',\n    16: '0px 16px 24px 2px #{$shadow-color}',\n    17: '0px 17px 26px 2px #{$shadow-color}',\n    18: '0px 18px 28px 2px #{$shadow-color}',\n    19: '0px 19px 29px 2px #{$shadow-color}',\n    20: '0px 20px 31px 3px #{$shadow-color}',\n    21: '0px 21px 33px 3px #{$shadow-color}',\n    22: '0px 22px 35px 3px #{$shadow-color}',\n    23: '0px 23px 36px 3px #{$shadow-color}',\n    24: '0px 24px 38px 3px #{$shadow-color}'\n  );\n}\n\n@function _get-ambient-map($color, $opacity) {\n  $shadow-color: if(type-of($color) == color, rgba($color, $opacity * 0.12), $color);\n\n  @return (\n    0: '0px 0px 0px 0px #{$shadow-color}',\n    1: '0px 1px 3px 0px #{$shadow-color}',\n    2: '0px 1px 5px 0px #{$shadow-color}',\n    3: '0px 1px 8px 0px #{$shadow-color}',\n    4: '0px 1px 10px 0px #{$shadow-color}',\n    5: '0px 1px 14px 0px #{$shadow-color}',\n    6: '0px 1px 18px 0px #{$shadow-color}',\n    7: '0px 2px 16px 1px #{$shadow-color}',\n    8: '0px 3px 14px 2px #{$shadow-color}',\n    9: '0px 3px 16px 2px #{$shadow-color}',\n    10: '0px 4px 18px 3px #{$shadow-color}',\n    11: '0px 4px 20px 3px #{$shadow-color}',\n    12: '0px 5px 22px 4px #{$shadow-color}',\n    13: '0px 5px 24px 4px #{$shadow-color}',\n    14: '0px 5px 26px 4px #{$shadow-color}',\n    15: '0px 6px 28px 5px #{$shadow-color}',\n    16: '0px 6px 30px 5px #{$shadow-color}',\n    17: '0px 6px 32px 5px #{$shadow-color}',\n    18: '0px 7px 34px 6px #{$shadow-color}',\n    19: '0px 7px 36px 6px #{$shadow-color}',\n    20: '0px 8px 38px 7px #{$shadow-color}',\n    21: '0px 8px 40px 7px #{$shadow-color}',\n    22: '0px 8px 42px 7px #{$shadow-color}',\n    23: '0px 9px 44px 8px #{$shadow-color}',\n    24: '0px 9px 46px 8px #{$shadow-color}'\n  );\n}\n\n// The default duration value for elevation transitions.\n$mat-elevation-transition-duration: 280ms !default;\n\n// The default easing value for elevation transitions.\n$mat-elevation-transition-timing-function: $mat-fast-out-slow-in-timing-function;\n\n// The default color for elevation shadows.\n$mat-elevation-color: black !default;\n\n// The default opacity scaling value for elevation shadows.\n$mat-elevation-opacity: 1 !default;\n\n// Prefix for elevation-related selectors.\n$_mat-elevation-prefix: 'mat-elevation-z';\n\n// Applies the correct css rules to an element to give it the elevation specified by $zValue.\n// The $zValue must be between 0 and 24.\n@mixin mat-elevation($zValue, $color: $mat-elevation-color, $opacity: $mat-elevation-opacity) {\n  @if type-of($zValue) != number or not unitless($zValue) {\n    @error '$zValue must be a unitless number';\n  }\n  @if $zValue < 0 or $zValue > 24 {\n    @error '$zValue must be between 0 and 24';\n  }\n\n  box-shadow: #{map-get(_get-umbra-map($color, $opacity), $zValue)},\n              #{map-get(_get-penumbra-map($color, $opacity), $zValue)},\n              #{map-get(_get-ambient-map($color, $opacity), $zValue)};\n}\n\n@mixin _mat-theme-elevation($zValue, $config, $opacity: $mat-elevation-opacity) {\n  $foreground: map-get($config, foreground);\n  $elevation-color: map-get($foreground, elevation);\n  $elevation-color-or-default: if($elevation-color == null, $mat-elevation-color, $elevation-color);\n\n  @include mat-elevation($zValue, $elevation-color-or-default, $opacity);\n}\n\n// Applies the elevation to an element in a manner that allows\n// consumers to override it via the Material elevation classes.\n@mixin mat-overridable-elevation(\n    $zValue,\n    $color: $mat-elevation-color,\n    $opacity: $mat-elevation-opacity) {\n  &:not([class*='#{$_mat-elevation-prefix}']) {\n    @include mat-elevation($zValue, $color, $opacity);\n  }\n}\n\n@mixin _mat-theme-overridable-elevation($zValue, $config, $opacity: $mat-elevation-opacity) {\n  $foreground: map-get($config, foreground);\n  $elevation-color: map-get($foreground, elevation);\n  $elevation-color-or-default: if($elevation-color == null, $mat-elevation-color, $elevation-color);\n\n  @include mat-overridable-elevation($zValue, $elevation-color-or-default, $opacity);\n}\n\n// Returns a string that can be used as the value for a transition property for elevation.\n// Calling this function directly is useful in situations where a component needs to transition\n// more than one property.\n//\n// .foo {\n//   transition: mat-elevation-transition-property-value(), opacity 100ms ease;\n// }\n@function mat-elevation-transition-property-value(\n    $duration: $mat-elevation-transition-duration,\n    $easing: $mat-elevation-transition-timing-function) {\n  @return box-shadow #{$duration} #{$easing};\n}\n\n// Applies the correct css rules needed to have an element transition between elevations.\n// This mixin should be applied to elements whose elevation values will change depending on their\n// context (e.g. when active or disabled).\n//\n// NOTE(traviskaufman): Both this mixin and the above function use default parameters so they can\n// be used in the same way by clients.\n@mixin mat-elevation-transition(\n    $duration: $mat-elevation-transition-duration,\n    $easing: $mat-elevation-transition-timing-function) {\n  transition: mat-elevation-transition-property-value($duration, $easing);\n}\n\n// Color palettes from the Material Design spec.\n// See https://material.io/design/color/\n//\n// Contrast colors are hard-coded because it is too difficult (probably impossible) to\n// calculate them. These contrast colors are pulled from the public Material Design spec swatches.\n// While the contrast colors in the spec are not prescriptive, we use them for convenience.\n\n\n// @deprecated renamed to $dark-primary-text.\n// @breaking-change 8.0.0\n$black-87-opacity: rgba(black, 0.87);\n// @deprecated renamed to $light-primary-text.\n// @breaking-change 8.0.0\n$white-87-opacity: rgba(white, 0.87);\n// @deprecated use $dark-[secondary-text,disabled-text,dividers,focused] instead.\n// @breaking-change 8.0.0\n$black-12-opacity: rgba(black, 0.12);\n// @deprecated use $light-[secondary-text,disabled-text,dividers,focused] instead.\n// @breaking-change 8.0.0\n$white-12-opacity: rgba(white, 0.12);\n// @deprecated use $dark-[secondary-text,disabled-text,dividers,focused] instead.\n// @breaking-change 8.0.0\n$black-6-opacity: rgba(black, 0.06);\n// @deprecated use $light-[secondary-text,disabled-text,dividers,focused] instead.\n// @breaking-change 8.0.0\n$white-6-opacity: rgba(white, 0.06);\n\n$dark-primary-text: rgba(black, 0.87);\n$dark-secondary-text: rgba(black, 0.54);\n$dark-disabled-text: rgba(black, 0.38);\n$dark-dividers: rgba(black, 0.12);\n$dark-focused: rgba(black, 0.12);\n$light-primary-text: white;\n$light-secondary-text: rgba(white, 0.7);\n$light-disabled-text: rgba(white, 0.5);\n$light-dividers: rgba(white, 0.12);\n$light-focused: rgba(white, 0.12);\n\n$mat-red: (\n  50: #ffebee,\n  100: #ffcdd2,\n  200: #ef9a9a,\n  300: #e57373,\n  400: #ef5350,\n  500: #f44336,\n  600: #e53935,\n  700: #d32f2f,\n  800: #c62828,\n  900: #b71c1c,\n  A100: #ff8a80,\n  A200: #ff5252,\n  A400: #ff1744,\n  A700: #d50000,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $light-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$mat-pink: (\n  50: #fce4ec,\n  100: #f8bbd0,\n  200: #f48fb1,\n  300: #f06292,\n  400: #ec407a,\n  500: #e91e63,\n  600: #d81b60,\n  700: #c2185b,\n  800: #ad1457,\n  900: #880e4f,\n  A100: #ff80ab,\n  A200: #ff4081,\n  A400: #f50057,\n  A700: #c51162,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $light-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$mat-purple: (\n  50: #f3e5f5,\n  100: #e1bee7,\n  200: #ce93d8,\n  300: #ba68c8,\n  400: #ab47bc,\n  500: #9c27b0,\n  600: #8e24aa,\n  700: #7b1fa2,\n  800: #6a1b9a,\n  900: #4a148c,\n  A100: #ea80fc,\n  A200: #e040fb,\n  A400: #d500f9,\n  A700: #aa00ff,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $light-primary-text,\n    400: $light-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $light-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$mat-deep-purple: (\n  50: #ede7f6,\n  100: #d1c4e9,\n  200: #b39ddb,\n  300: #9575cd,\n  400: #7e57c2,\n  500: #673ab7,\n  600: #5e35b1,\n  700: #512da8,\n  800: #4527a0,\n  900: #311b92,\n  A100: #b388ff,\n  A200: #7c4dff,\n  A400: #651fff,\n  A700: #6200ea,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $light-primary-text,\n    400: $light-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $light-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$mat-indigo: (\n  50: #e8eaf6,\n  100: #c5cae9,\n  200: #9fa8da,\n  300: #7986cb,\n  400: #5c6bc0,\n  500: #3f51b5,\n  600: #3949ab,\n  700: #303f9f,\n  800: #283593,\n  900: #1a237e,\n  A100: #8c9eff,\n  A200: #536dfe,\n  A400: #3d5afe,\n  A700: #304ffe,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $light-primary-text,\n    400: $light-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $light-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$mat-blue: (\n  50: #e3f2fd,\n  100: #bbdefb,\n  200: #90caf9,\n  300: #64b5f6,\n  400: #42a5f5,\n  500: #2196f3,\n  600: #1e88e5,\n  700: #1976d2,\n  800: #1565c0,\n  900: #0d47a1,\n  A100: #82b1ff,\n  A200: #448aff,\n  A400: #2979ff,\n  A700: #2962ff,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $light-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$mat-light-blue: (\n  50: #e1f5fe,\n  100: #b3e5fc,\n  200: #81d4fa,\n  300: #4fc3f7,\n  400: #29b6f6,\n  500: #03a9f4,\n  600: #039be5,\n  700: #0288d1,\n  800: #0277bd,\n  900: #01579b,\n  A100: #80d8ff,\n  A200: #40c4ff,\n  A400: #00b0ff,\n  A700: #0091ea,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$mat-cyan: (\n  50: #e0f7fa,\n  100: #b2ebf2,\n  200: #80deea,\n  300: #4dd0e1,\n  400: #26c6da,\n  500: #00bcd4,\n  600: #00acc1,\n  700: #0097a7,\n  800: #00838f,\n  900: #006064,\n  A100: #84ffff,\n  A200: #18ffff,\n  A400: #00e5ff,\n  A700: #00b8d4,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $dark-primary-text,\n  )\n);\n\n$mat-teal: (\n  50: #e0f2f1,\n  100: #b2dfdb,\n  200: #80cbc4,\n  300: #4db6ac,\n  400: #26a69a,\n  500: #009688,\n  600: #00897b,\n  700: #00796b,\n  800: #00695c,\n  900: #004d40,\n  A100: #a7ffeb,\n  A200: #64ffda,\n  A400: #1de9b6,\n  A700: #00bfa5,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $dark-primary-text,\n  )\n);\n\n$mat-green: (\n  50: #e8f5e9,\n  100: #c8e6c9,\n  200: #a5d6a7,\n  300: #81c784,\n  400: #66bb6a,\n  500: #4caf50,\n  600: #43a047,\n  700: #388e3c,\n  800: #2e7d32,\n  900: #1b5e20,\n  A100: #b9f6ca,\n  A200: #69f0ae,\n  A400: #00e676,\n  A700: #00c853,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $dark-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $dark-primary-text,\n  )\n);\n\n$mat-light-green: (\n  50: #f1f8e9,\n  100: #dcedc8,\n  200: #c5e1a5,\n  300: #aed581,\n  400: #9ccc65,\n  500: #8bc34a,\n  600: #7cb342,\n  700: #689f38,\n  800: #558b2f,\n  900: #33691e,\n  A100: #ccff90,\n  A200: #b2ff59,\n  A400: #76ff03,\n  A700: #64dd17,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $dark-primary-text,\n    600: $dark-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $dark-primary-text,\n  )\n);\n\n$mat-lime: (\n  50: #f9fbe7,\n  100: #f0f4c3,\n  200: #e6ee9c,\n  300: #dce775,\n  400: #d4e157,\n  500: #cddc39,\n  600: #c0ca33,\n  700: #afb42b,\n  800: #9e9d24,\n  900: #827717,\n  A100: #f4ff81,\n  A200: #eeff41,\n  A400: #c6ff00,\n  A700: #aeea00,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $dark-primary-text,\n    600: $dark-primary-text,\n    700: $dark-primary-text,\n    800: $dark-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $dark-primary-text,\n  )\n);\n\n$mat-yellow: (\n  50: #fffde7,\n  100: #fff9c4,\n  200: #fff59d,\n  300: #fff176,\n  400: #ffee58,\n  500: #ffeb3b,\n  600: #fdd835,\n  700: #fbc02d,\n  800: #f9a825,\n  900: #f57f17,\n  A100: #ffff8d,\n  A200: #ffff00,\n  A400: #ffea00,\n  A700: #ffd600,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $dark-primary-text,\n    600: $dark-primary-text,\n    700: $dark-primary-text,\n    800: $dark-primary-text,\n    900: $dark-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $dark-primary-text,\n  )\n);\n\n$mat-amber: (\n  50: #fff8e1,\n  100: #ffecb3,\n  200: #ffe082,\n  300: #ffd54f,\n  400: #ffca28,\n  500: #ffc107,\n  600: #ffb300,\n  700: #ffa000,\n  800: #ff8f00,\n  900: #ff6f00,\n  A100: #ffe57f,\n  A200: #ffd740,\n  A400: #ffc400,\n  A700: #ffab00,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $dark-primary-text,\n    600: $dark-primary-text,\n    700: $dark-primary-text,\n    800: $dark-primary-text,\n    900: $dark-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $dark-primary-text,\n  )\n);\n\n$mat-orange: (\n  50: #fff3e0,\n  100: #ffe0b2,\n  200: #ffcc80,\n  300: #ffb74d,\n  400: #ffa726,\n  500: #ff9800,\n  600: #fb8c00,\n  700: #f57c00,\n  800: #ef6c00,\n  900: #e65100,\n  A100: #ffd180,\n  A200: #ffab40,\n  A400: #ff9100,\n  A700: #ff6d00,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $dark-primary-text,\n    600: $dark-primary-text,\n    700: $dark-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: black,\n  )\n);\n\n$mat-deep-orange: (\n  50: #fbe9e7,\n  100: #ffccbc,\n  200: #ffab91,\n  300: #ff8a65,\n  400: #ff7043,\n  500: #ff5722,\n  600: #f4511e,\n  700: #e64a19,\n  800: #d84315,\n  900: #bf360c,\n  A100: #ff9e80,\n  A200: #ff6e40,\n  A400: #ff3d00,\n  A700: #dd2c00,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$mat-brown: (\n  50: #efebe9,\n  100: #d7ccc8,\n  200: #bcaaa4,\n  300: #a1887f,\n  400: #8d6e63,\n  500: #795548,\n  600: #6d4c41,\n  700: #5d4037,\n  800: #4e342e,\n  900: #3e2723,\n  A100: #d7ccc8,\n  A200: #bcaaa4,\n  A400: #8d6e63,\n  A700: #5d4037,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $light-primary-text,\n    400: $light-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$mat-grey: (\n  50: #fafafa,\n  100: #f5f5f5,\n  200: #eeeeee,\n  300: #e0e0e0,\n  400: #bdbdbd,\n  500: #9e9e9e,\n  600: #757575,\n  700: #616161,\n  800: #424242,\n  900: #212121,\n  A100: #ffffff,\n  A200: #eeeeee,\n  A400: #bdbdbd,\n  A700: #616161,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $dark-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n// Alias for alternate spelling.\n$mat-gray: $mat-grey;\n\n$mat-blue-grey: (\n  50: #eceff1,\n  100: #cfd8dc,\n  200: #b0bec5,\n  300: #90a4ae,\n  400: #78909c,\n  500: #607d8b,\n  600: #546e7a,\n  700: #455a64,\n  800: #37474f,\n  900: #263238,\n  A100: #cfd8dc,\n  A200: #b0bec5,\n  A400: #78909c,\n  A700: #455a64,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $light-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n// Alias for alternate spelling.\n$mat-blue-gray: $mat-blue-grey;\n\n\n// Background palette for light themes.\n$mat-light-theme-background: (\n  status-bar: map-get($mat-grey, 300),\n  app-bar:    map-get($mat-grey, 100),\n  background: map-get($mat-grey, 50),\n  hover:      rgba(black, 0.04), // TODO(kara): check style with Material Design UX\n  card:       white,\n  dialog:     white,\n  disabled-button: rgba(black, 0.12),\n  raised-button: white,\n  focused-button: $dark-focused,\n  selected-button: map-get($mat-grey, 300),\n  selected-disabled-button: map-get($mat-grey, 400),\n  disabled-button-toggle: map-get($mat-grey, 200),\n  unselected-chip: map-get($mat-grey, 300),\n  disabled-list-option: map-get($mat-grey, 200),\n  tooltip: map-get($mat-grey, 700),\n);\n\n// Background palette for dark themes.\n$mat-dark-theme-background: (\n  status-bar: black,\n  app-bar:    map-get($mat-grey, 900),\n  background: #303030,\n  hover:      rgba(white, 0.04), // TODO(kara): check style with Material Design UX\n  card:       map-get($mat-grey, 800),\n  dialog:     map-get($mat-grey, 800),\n  disabled-button: rgba(white, 0.12),\n  raised-button: map-get($mat-grey, 800),\n  focused-button: $light-focused,\n  selected-button: map-get($mat-grey, 900),\n  selected-disabled-button: map-get($mat-grey, 800),\n  disabled-button-toggle: black,\n  unselected-chip: map-get($mat-grey, 700),\n  disabled-list-option: black,\n  tooltip: map-get($mat-grey, 700),\n);\n\n// Foreground palette for light themes.\n$mat-light-theme-foreground: (\n  base:              black,\n  divider:           $dark-dividers,\n  dividers:          $dark-dividers,\n  disabled:          $dark-disabled-text,\n  disabled-button:   rgba(black, 0.26),\n  disabled-text:     $dark-disabled-text,\n  elevation:         black,\n  hint-text:         $dark-disabled-text,\n  secondary-text:    $dark-secondary-text,\n  icon:              rgba(black, 0.54),\n  icons:             rgba(black, 0.54),\n  text:              rgba(black, 0.87),\n  slider-min:        rgba(black, 0.87),\n  slider-off:        rgba(black, 0.26),\n  slider-off-active: rgba(black, 0.38),\n);\n\n// Foreground palette for dark themes.\n$mat-dark-theme-foreground: (\n  base:              white,\n  divider:           $light-dividers,\n  dividers:          $light-dividers,\n  disabled:          $light-disabled-text,\n  disabled-button:   rgba(white, 0.3),\n  disabled-text:     $light-disabled-text,\n  elevation:         black,\n  hint-text:         $light-disabled-text,\n  secondary-text:    $light-secondary-text,\n  icon:              white,\n  icons:             white,\n  text:              white,\n  slider-min:        white,\n  slider-off:        rgba(white, 0.3),\n  slider-off-active: rgba(white, 0.3),\n);\n\n\n// Whether density should be generated by default.\n$_mat-theme-generate-default-density: true !default;\n\n// For a given hue in a palette, return the contrast color from the map of contrast palettes.\n// @param $color-map\n// @param $hue\n@function mat-contrast($palette, $hue) {\n  @return map-get(map-get($palette, contrast), $hue);\n}\n\n\n// Creates a map of hues to colors for a theme. This is used to define a theme palette in terms\n// of the Material Design hues.\n// @param $color-map\n// @param $primary\n// @param $lighter\n@function mat-palette($base-palette, $default: 500, $lighter: 100, $darker: 700, $text: $default) {\n  $result: map-merge($base-palette, (\n    default: map-get($base-palette, $default),\n    lighter: map-get($base-palette, $lighter),\n    darker: map-get($base-palette, $darker),\n    text: map-get($base-palette, $text),\n\n    default-contrast: mat-contrast($base-palette, $default),\n    lighter-contrast: mat-contrast($base-palette, $lighter),\n    darker-contrast: mat-contrast($base-palette, $darker)\n  ));\n\n  // For each hue in the palette, add a \"-contrast\" color to the map.\n  @each $hue, $color in $base-palette {\n    $result: map-merge($result, (\n      '#{$hue}-contrast': mat-contrast($base-palette, $hue)\n    ));\n  }\n\n  @return $result;\n}\n\n\n// Gets a color from a theme palette (the output of mat-palette).\n// The hue can be one of the standard values (500, A400, etc.), one of the three preconfigured\n// hues (default, lighter, darker), or any of the aforementioned prefixed with \"-contrast\".\n//\n// @param $color-map The theme palette (output of mat-palette).\n// @param $hue The hue from the palette to use. If this is a value between 0 and 1, it will\n//     be treated as opacity.\n// @param $opacity The alpha channel value for the color.\n@function mat-color($palette, $hue: default, $opacity: null) {\n  // If hueKey is a number between zero and one, then it actually contains an\n  // opacity value, so recall this function with the default hue and that given opacity.\n  @if type-of($hue) == number and $hue >= 0 and $hue <= 1 {\n    @return mat-color($palette, default, $hue);\n  }\n\n  $color: map-get($palette, $hue);\n\n  @if (type-of($color) != color) {\n    // If the $color resolved to something different from a color (e.g. a CSS variable),\n    // we can't apply the opacity anyway so we return the value as is, otherwise Sass can\n    // throw an error or output something invalid.\n    @return $color;\n  }\n\n  @return rgba($color, if($opacity == null, opacity($color), $opacity));\n}\n\n// Validates the specified theme by ensuring that the optional color config defines\n// a primary, accent and warn palette. Returns the theme if no failures were found.\n@function _mat-validate-theme($theme) {\n  @if map-get($theme, color) {\n    $color: map-get($theme, color);\n    @if not map-get($color, primary) {\n      @error 'Theme does not define a valid \"primary\" palette.';\n    }\n    @else if not map-get($color, accent) {\n      @error 'Theme does not define a valid \"accent\" palette.';\n    }\n    @else if not map-get($color, warn) {\n      @error 'Theme does not define a valid \"warn\" palette.';\n    }\n  }\n  @return $theme;\n}\n\n// Creates a backwards compatible theme. Previously in Angular Material, theme objects\n// contained the color configuration directly. With the recent refactoring of the theming\n// system to allow for density and typography configurations, this is no longer the case.\n// To ensure that constructed themes which will be passed to custom theme mixins do not break,\n// we copy the color configuration and put its properties at the top-level of the theme object.\n// Here is an example of a pattern that should still work until it's officially marked as a\n// breaking change:\n//\n//    @mixin my-custom-component-theme($theme) {\n//      .my-comp {\n//        background-color: mat-color(map-get($theme, primary));\n//      }\n//    }\n//\n// Note that the `$theme.primary` key does usually not exist since the color configuration\n// is stored in `$theme.color` which contains a property for `primary`. This method copies\n// the map from `$theme.color` to `$theme` for backwards compatibility.\n@function _mat-create-backwards-compatibility-theme($theme) {\n  @if not map-get($theme, color) {\n    @return $theme;\n  }\n  $color: map-get($theme, color);\n  @return map-merge($theme, $color);\n}\n\n// Creates a light-themed color configuration from the specified\n// primary, accent and warn palettes.\n@function _mat-create-light-color-config($primary, $accent, $warn: null) {\n  @return (\n    primary: $primary,\n    accent: $accent,\n    warn: if($warn != null, $warn, mat-palette($mat-red)),\n    is-dark: false,\n    foreground: $mat-light-theme-foreground,\n    background: $mat-light-theme-background,\n  );\n}\n\n// Creates a dark-themed color configuration from the specified\n// primary, accent and warn palettes.\n@function _mat-create-dark-color-config($primary, $accent, $warn: null) {\n  @return (\n    primary: $primary,\n    accent: $accent,\n    warn: if($warn != null, $warn, mat-palette($mat-red)),\n    is-dark: true,\n    foreground: $mat-dark-theme-foreground,\n    background: $mat-dark-theme-background,\n  );\n}\n\n// Creates a container object for a light theme to be given to individual component theme mixins.\n// TODO: Remove legacy API and rename `$primary` to `$config`. Currently it cannot be renamed\n// as it would break existing apps that set the parameter by name.\n@function mat-light-theme($primary, $accent: null, $warn: mat-palette($mat-red)) {\n  // This function creates a container object for the individual component theme mixins. Consumers\n  // can construct such an object by calling this function, or by building the object manually.\n  // There are two possible ways to invoke this function in order to create such an object:\n  //\n  //    (1) Passing in a map that holds optional configurations for individual parts of the\n  //        theming system. For `color` configurations, the function only expects the palettes\n  //        for `primary` and `accent` (and optionally `warn`). The function will expand the\n  //        shorthand into an actual configuration that can be consumed in `-color` mixins.\n  //    (2) Legacy pattern: Passing in the palettes as parameters. This is not as flexible\n  //        as passing in a configuration map because only the `color` system can be configured.\n  //\n  // If the legacy pattern is used, we generate a container object only with a light-themed\n  // configuration for the `color` theming part.\n  @if $accent != null {\n    @return _mat-create-backwards-compatibility-theme(_mat-validate-theme((\n      _is-legacy-theme: true,\n      color: _mat-create-light-color-config($primary, $accent, $warn),\n    )));\n  }\n  // If the map pattern is used (1), we just pass-through the configurations for individual\n  // parts of the theming system, but update the `color` configuration if set. As explained\n  // above, the color shorthand will be expanded to an actual light-themed color configuration.\n  $result: $primary;\n  @if map-get($primary, color) {\n    $color-settings: map-get($primary, color);\n    $primary: map-get($color-settings, primary);\n    $accent: map-get($color-settings, accent);\n    $warn: map-get($color-settings, warn);\n    $result: map-merge($result, (color: _mat-create-light-color-config($primary, $accent, $warn)));\n  }\n  @return _mat-create-backwards-compatibility-theme(_mat-validate-theme($result));\n}\n\n// Creates a container object for a dark theme to be given to individual component theme mixins.\n// TODO: Remove legacy API and rename `$primary` to `$config`. Currently it cannot be renamed\n// as it would break existing apps that set the parameter by name.\n@function mat-dark-theme($primary, $accent: null, $warn: mat-palette($mat-red)) {\n  // This function creates a container object for the individual component theme mixins. Consumers\n  // can construct such an object by calling this function, or by building the object manually.\n  // There are two possible ways to invoke this function in order to create such an object:\n  //\n  //    (1) Passing in a map that holds optional configurations for individual parts of the\n  //        theming system. For `color` configurations, the function only expects the palettes\n  //        for `primary` and `accent` (and optionally `warn`). The function will expand the\n  //        shorthand into an actual configuration that can be consumed in `-color` mixins.\n  //    (2) Legacy pattern: Passing in the palettes as parameters. This is not as flexible\n  //        as passing in a configuration map because only the `color` system can be configured.\n  //\n  // If the legacy pattern is used, we generate a container object only with a dark-themed\n  // configuration for the `color` theming part.\n  @if $accent != null {\n    @return _mat-create-backwards-compatibility-theme(_mat-validate-theme((\n      _is-legacy-theme: true,\n      color: _mat-create-dark-color-config($primary, $accent, $warn),\n    )));\n  }\n  // If the map pattern is used (1), we just pass-through the configurations for individual\n  // parts of the theming system, but update the `color` configuration if set. As explained\n  // above, the color shorthand will be expanded to an actual dark-themed color configuration.\n  $result: $primary;\n  @if map-get($primary, color) {\n    $color-settings: map-get($primary, color);\n    $primary: map-get($color-settings, primary);\n    $accent: map-get($color-settings, accent);\n    $warn: map-get($color-settings, warn);\n    $result: map-merge($result, (color: _mat-create-dark-color-config($primary, $accent, $warn)));\n  }\n  @return _mat-create-backwards-compatibility-theme(_mat-validate-theme($result));\n}\n\n/// Gets the color configuration from the given theme or configuration.\n@function mat-get-color-config($theme, $default: null) {\n  // If a configuration has been passed, return the config directly.\n  @if not _mat-is-theme-object($theme) {\n    @return $theme;\n  }\n  // If the theme has been constructed through the legacy theming API, we use the theme object\n  // as color configuration instead of the dedicated `color` property. We do this because for\n  // backwards compatibility, we copied the color configuration from `$theme.color` to `$theme`.\n  // Hence developers could customize the colors at top-level and want to respect these changes\n  // TODO: Remove when legacy theming API is removed.\n  @if _mat-is-legacy-constructed-theme($theme) {\n    @return $theme;\n  }\n  @if map-has-key($theme, color) {\n    @return map-get($theme, color);\n  }\n  @return $default;\n}\n\n/// Gets the density configuration from the given theme or configuration.\n@function mat-get-density-config($theme-or-config, $default: 0) {\n  // If a configuration has been passed, return the config directly.\n  @if not _mat-is-theme-object($theme-or-config) {\n    @return $theme-or-config;\n  }\n  // In case a theme has been passed, extract the configuration if present,\n  // or fall back to the default density config.\n  @if map-has-key($theme-or-config, density) {\n    @return map-get($theme-or-config, density);\n  }\n  @return $default;\n}\n\n/// Gets the typography configuration from the given theme or configuration.\n/// For backwards compatibility, typography is not included by default.\n@function mat-get-typography-config($theme-or-config, $default: null) {\n  // If a configuration has been passed, return the config directly.\n  @if not _mat-is-theme-object($theme-or-config) {\n    @return $theme-or-config;\n  }\n  // In case a theme has been passed, extract the configuration if present,\n  // or fall back to the default typography config.\n  @if (map-has-key($theme-or-config, typography)) {\n    @return map-get($theme-or-config, typography);\n  }\n  @return $default;\n}\n\n// Checks whether the given value resolves to a theme object. Theme objects are always\n// of type `map` and can optionally only specify `color`, `density` or `typography`.\n@function _mat-is-theme-object($value) {\n  @return type-of($value) == 'map' and (\n    map-has-key($value, color) or\n    map-has-key($value, density) or\n    map-has-key($value, typography) or\n    length($value) == 0\n  );\n}\n\n// Checks whether a given value corresponds to a legacy constructed theme.\n@function _mat-is-legacy-constructed-theme($value) {\n  @return type-of($value) == 'map' and map-get($value, '_is-legacy-theme');\n}\n\n// Gets the theme from the given value that is either already a theme, or a color configuration.\n// This handles the legacy case where developers pass a color configuration directly to the\n// theme mixin. Before we introduced the new pattern for constructing a theme, developers passed\n// the color configuration directly to the theme mixins. This can be still the case if developers\n// construct a theme manually and pass it to a theme. We support this for backwards compatibility.\n// TODO(devversion): remove this in the future. Constructing themes manually is rare,\n// and the code can be easily updated to the new API.\n@function _mat-legacy-get-theme($theme-or-color-config) {\n  @if _mat-is-theme-object($theme-or-color-config) {\n    @return $theme-or-color-config;\n  }\n  @return _mat-create-backwards-compatibility-theme((\n    _is-legacy-theme: true,\n    color: $theme-or-color-config\n  ));\n}\n\n\n\n// Whether duplication warnings should be disabled. Warnings enabled by default.\n$mat-theme-ignore-duplication-warnings: false !default;\n\n// Warning that will be printed if duplicated styles are generated by a theme.\n$_mat-theme-duplicate-warning: 'Read more about how style duplication can be avoided in a ' +\n  'dedicated guide. https://github.com/angular/components/blob/master/guides/duplicate-theming-styles.md';\n\n// These variable are not intended to be overridden externally. They use `!default` to\n// avoid being reset every time this file is imported.\n$_mat-theme-emitted-color: () !default;\n$_mat-theme-emitted-typography: () !default;\n$_mat-theme-emitted-density: () !default;\n\n// Checks if configurations that have been declared in the given theme have been generated\n// before. If so, warnings will be reported. This should notify developers in case duplicate\n// styles are accidentally generated due to wrong usage of the all-theme mixins.\n//\n// Additionally, this mixin controls the default value for the density configuration. By\n// default, density styles are generated at scale zero. If the same density styles would be\n// generated a second time though, the default value will change to avoid duplicate styles.\n//\n// The mixin keeps track of all configurations in a list that is scoped to the specified\n// id. This is necessary because a given theme can be passed to multiple disjoint theme mixins\n// (e.g. `angular-material-theme` and `angular-material-mdc-theme`) without causing any\n// style duplication.\n@mixin _mat-check-duplicate-theme-styles($theme-or-color-config, $id) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  $color-config: mat-get-color-config($theme);\n  $density-config: mat-get-density-config($theme);\n  $typography-config: mat-get-typography-config($theme);\n  // Lists of previous `color`, `density` and `typography` configurations.\n  $previous-color: map-get($_mat-theme-emitted-color, $id) or ();\n  $previous-typography: map-get($_mat-theme-emitted-typography, $id) or ();\n  $previous-density: map-get($_mat-theme-emitted-density, $id) or ();\n  // Whether duplicate legacy density styles would be generated.\n  $duplicate-legacy-density: false;\n\n  // Check if the color configuration has been generated before.\n  @if $color-config != null {\n    @if index($previous-color, $color-config) != null and\n        not $mat-theme-ignore-duplication-warnings {\n      @warn 'The same color styles are generated multiple times. ' +\n          $_mat-theme-duplicate-warning;\n    }\n    $previous-color: append($previous-color, $color-config);\n  }\n\n  // Check if the typography configuration has been generated before.\n  @if $typography-config != null {\n    @if index($previous-typography, $typography-config) != null and\n        not $mat-theme-ignore-duplication-warnings {\n      @warn 'The same typography styles are generated multiple times. ' +\n          $_mat-theme-duplicate-warning;\n    }\n    $previous-typography: append($previous-typography, $typography-config);\n  }\n\n  // Check if the density configuration has been generated before.\n  @if $density-config != null {\n    @if index($previous-density, $density-config) != null {\n      // Only report a warning if density styles would be duplicated for non-legacy theme\n      // definitions. For legacy themes, we have compatibility logic that avoids duplication\n      // of default density styles. We don't want to report a warning in those cases.\n      @if _mat-is-legacy-constructed-theme($theme) {\n        $duplicate-legacy-density: true;\n      }\n      @else if not $mat-theme-ignore-duplication-warnings {\n        @warn 'The same density styles are generated multiple times. ' +\n           $_mat-theme-duplicate-warning;\n      }\n    }\n    $previous-density: append($previous-density, $density-config);\n  }\n\n  $_mat-theme-emitted-color: map-merge(\n      $_mat-theme-emitted-color, ($id: $previous-color)) !global;\n  $_mat-theme-emitted-density: map-merge(\n      $_mat-theme-emitted-density, ($id: $previous-density)) !global;\n  $_mat-theme-emitted-typography: map-merge(\n      $_mat-theme-emitted-typography, ($id: $previous-typography)) !global;\n\n  // Optionally, consumers of this mixin can wrap contents inside so that nested\n  // duplicate style checks do not report another warning. e.g. if developers include\n  // the `angular-material-theme` mixin twice, only the top-level duplicate styles check\n  // should report a warning. Not all individual components should report a warning too.\n  $orig-mat-theme-ignore-duplication-warnings: $mat-theme-ignore-duplication-warnings;\n  $mat-theme-ignore-duplication-warnings: true !global;\n\n  // If duplicate default density styles would be generated for a legacy constructed theme,\n  // we adjust the density generation so that no density styles are generated by default.\n  // If no default density styles have been generated yet, we ensure that the styles\n  // are generated at root. For legacy themes our goal is to generate default density\n  // styles **once** and at root. This matches the old behavior where density styles were\n  // part of the base component styles (that did not use view encapsulation).\n  // TODO: Remove this compatibility logic when the legacy theming API is removed.\n  $_mat-density-generate-at-root: _mat-is-legacy-constructed-theme($theme) !global;\n  $_mat-density-generate-styles: not $duplicate-legacy-density !global;\n\n  @content;\n  $mat-theme-ignore-duplication-warnings: $orig-mat-theme-ignore-duplication-warnings !global;\n\n  $_mat-density-generate-at-root: false !global;\n  $_mat-density-generate-styles: true !global;\n}\n\n\n\n$mat-ripple-color-opacity: 0.1;\n\n@mixin mat-ripple() {\n\n  // The host element of an mat-ripple directive should always have a position of \"absolute\" or\n  // \"relative\" so that the ripples inside are correctly positioned relatively to the container.\n  .mat-ripple {\n    overflow: hidden;\n\n    // By default, every ripple container should have position: relative in favor of creating an\n    // easy API for developers using the MatRipple directive.\n    position: relative;\n\n    // Promote containers that have ripples to a new layer. We want to target `:not(:empty)`,\n    // because we don't want all ripple containers to have their own layer since they're used in a\n    // lot of places and the layer is only relevant while animating. Note that ideally we'd use\n    // the `contain` property here (see #13175), because `:empty` can be broken by having extra\n    // text inside the element, but it isn't very well supported yet.\n    &:not(:empty) {\n      transform: translateZ(0);\n    }\n  }\n\n  .mat-ripple.mat-ripple-unbounded {\n    overflow: visible;\n  }\n\n  .mat-ripple-element {\n    position: absolute;\n    border-radius: 50%;\n    pointer-events: none;\n\n    transition: opacity, transform 0ms cubic-bezier(0, 0, 0.2, 1);\n    transform: scale(0);\n\n    // In high contrast mode the ripple is opaque, causing it to obstruct the content.\n    @include cdk-high-contrast(active, off) {\n      display: none;\n    }\n  }\n}\n\n/* Colors for the ripple elements.*/\n@mixin mat-ripple-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $foreground: map-get($config, foreground);\n  $foreground-base: map-get($foreground, base);\n\n  .mat-ripple-element {\n    // If the ripple color is resolves to a color *type*, we can use it directly, otherwise\n    // (e.g. it resolves to a CSS variable) we fall back to using the color and setting an opacity.\n    @if (type-of($foreground-base) == color) {\n      background-color: rgba($foreground-base, $mat-ripple-color-opacity);\n    }\n    @else {\n      background-color: $foreground-base;\n      opacity: $mat-ripple-color-opacity;\n    }\n  }\n}\n\n@mixin mat-ripple-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-ripple') {\n    $color: mat-get-color-config($theme);\n    @if $color != null {\n      @include mat-ripple-color($color);\n    }\n  }\n}\n\n\n\n// This mixin ensures an element spans to fill the nearest ancestor with defined positioning.\n@mixin mat-fill {\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  position: absolute;\n}\n\n\n/// Mixin that turns on strong focus indicators.\n///\n/// @example\n///   .my-app {\n///     @include mat-strong-focus-indicators($config);\n///   }\n@mixin mat-strong-focus-indicators($config: ()) {\n  // Default focus indicator config.\n  $default-config: (\n    border-style: solid,\n    border-width: 3px,\n    border-radius: 4px,\n  );\n\n  // Merge default config with user config.\n  $config: map-merge($default-config, $config);\n  $border-style: map-get($config, border-style);\n  $border-width: map-get($config, border-width);\n  $border-radius: map-get($config, border-radius);\n\n  // Base styles for focus indicators.\n  .mat-focus-indicator::before {\n    @include mat-fill();\n    box-sizing: border-box;\n    pointer-events: none;\n    border: $border-width $border-style transparent;\n    border-radius: $border-radius;\n  }\n\n  // By default, all focus indicators are flush with the bounding box of their\n  // host element. For particular elements (listed below), default inset/offset\n  // values are necessary to ensure that the focus indicator is sufficiently\n  // contrastive and renders appropriately.\n\n  .mat-focus-indicator.mat-flat-button::before,\n  .mat-focus-indicator.mat-raised-button::before,\n  .mat-focus-indicator.mat-fab::before,\n  .mat-focus-indicator.mat-mini-fab::before,\n  .mat-focus-indicator.mat-chip::before,\n  .mat-focus-indicator.mat-sort-header-container::before {\n    margin: -($border-width + 2px);\n  }\n\n  .mat-focus-indicator.mat-stroked-button::before,\n  .mat-focus-indicator.mat-calendar-body-cell-content::before {\n    margin: -($border-width + 3px);\n  }\n\n  .mat-focus-indicator.mat-tab-link::before,\n  .mat-focus-indicator.mat-tab-label::before {\n    margin: 5px;\n  }\n\n  // Render the focus indicator on focus. Defining a pseudo element's\n  // content will cause it to render.\n\n  // Checkboxes, radios, and slide toggles render focus indicators when the\n  // associated visually-hidden input is focused.\n  .mat-checkbox-input:focus ~ .mat-focus-indicator::before,\n  .mat-radio-input:focus ~ .mat-focus-indicator::before,\n  .mat-slide-toggle-input:focus ~ .mat-slide-toggle-thumb-container .mat-focus-indicator::before,\n\n  // For options, render the focus indicator when the class .mat-active\n  // is present.\n  .mat-focus-indicator.mat-option.mat-active::before,\n\n  // For calendar cells, render the focus indicator when the parent cell is\n  // focused.\n  .mat-calendar-body-cell:focus .mat-focus-indicator::before,\n\n  // For all other components, render the focus indicator on focus.\n  .mat-focus-indicator:focus::before {\n    content: '';\n  }\n}\n\n// Mixin that applies the border color for the focus indicators.\n@mixin _mat-strong-focus-indicators-border-color($color) {\n  .mat-focus-indicator::before {\n    border-color: $color;\n  }\n}\n\n@mixin mat-strong-focus-indicators-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  @include _mat-strong-focus-indicators-border-color(mat-color(map-get($config, primary)));\n}\n\n/// Mixin that sets the color of the focus indicators.\n///\n/// @param {color|map} $theme-or-color\n///   If theme, focus indicators are set to the primary color of the theme. If\n///   color, focus indicators are set to that color.\n///\n/// @example\n///   .demo-dark-theme {\n///     @include mat-strong-focus-indicators-theme($dark-theme-map);\n///   }\n///\n/// @example\n///   .demo-red-theme {\n///     @include mat-strong-focus-indicators-theme(#f00);\n///   }\n/* stylelint-disable-next-line material/theme-mixin-api */\n@mixin mat-strong-focus-indicators-theme($theme-or-color) {\n  @if type-of($theme-or-color) != 'map' {\n    @include _mat-strong-focus-indicators-border-color($theme-or-color);\n  }\n  @else {\n    $theme: _mat-legacy-get-theme($theme-or-color);\n    @include _mat-check-duplicate-theme-styles($theme, 'mat-strong-focus-indicators') {\n      $color: mat-get-color-config($theme);\n      @if $color != null {\n        @include mat-strong-focus-indicators-color($color);\n      }\n    }\n  }\n}\n\n// Mixin that ensures focus indicator host elements are positioned so that the focus indicator\n// pseudo element within is positioned relative to the host. Private mixin included within\n// `mat-core`.\n@mixin _mat-strong-focus-indicators-positioning() {\n  .mat-focus-indicator {\n    position: relative;\n  }\n}\n\n\n\n\n// Utility for fetching a nested value from a typography config.\n@function _mat-get-type-value($config, $level, $name) {\n  @return map-get(map-get($config, $level), $name);\n}\n\n// Gets the font size for a level inside a typography config.\n@function mat-font-size($config, $level) {\n  @return _mat-get-type-value($config, $level, font-size);\n}\n\n// Gets the line height for a level inside a typography config.\n@function mat-line-height($config, $level) {\n  @return _mat-get-type-value($config, $level, line-height);\n}\n\n// Gets the font weight for a level inside a typography config.\n@function mat-font-weight($config, $level) {\n  @return _mat-get-type-value($config, $level, font-weight);\n}\n\n// Gets the letter spacing for a level inside a typography config.\n@function mat-letter-spacing($config, $level) {\n  @return _mat-get-type-value($config, $level, letter-spacing);\n}\n\n// Gets the font-family from a typography config and removes the quotes around it.\n@function mat-font-family($config, $level: null) {\n  $font-family: map-get($config, font-family);\n\n  @if $level != null {\n    $font-family: _mat-get-type-value($config, $level, font-family);\n  }\n\n  // Guard against unquoting non-string values, because it's deprecated.\n  @return if(type-of($font-family) == string, unquote($font-family), $font-family);\n}\n\n// Outputs the shorthand `font` CSS property, based on a set of typography values. Falls back to\n// the individual properties if a value that isn't allowed in the shorthand is passed in.\n@mixin mat-typography-font-shorthand($font-size, $font-weight, $line-height, $font-family) {\n  // If any of the values are set to `inherit`, we can't use the shorthand\n  // so we fall back to passing in the individual properties.\n  @if ($font-size == inherit or\n       $font-weight == inherit or\n       $line-height == inherit or\n       $font-family == inherit or\n       $font-size == null or\n       $font-weight == null or\n       $line-height == null or\n       $font-family == null) {\n\n    font-size: $font-size;\n    font-weight: $font-weight;\n    line-height: $line-height;\n    font-family: $font-family;\n  }\n  @else {\n    // Otherwise use the shorthand `font`, because it's the least amount of bytes. Note\n    // that we need to use interpolation for `font-size/line-height` in order to prevent\n    // Sass from dividing the two values.\n    font: $font-weight #{$font-size}/#{$line-height} $font-family;\n  }\n}\n\n// Converts a typography level into CSS styles.\n@mixin mat-typography-level-to-styles($config, $level) {\n  $font-size: mat-font-size($config, $level);\n  $font-weight: mat-font-weight($config, $level);\n  $line-height: mat-line-height($config, $level);\n  $font-family: mat-font-family($config, $level);\n\n  @include mat-typography-font-shorthand($font-size, $font-weight, $line-height, $font-family);\n  letter-spacing: mat-letter-spacing($config, $level);\n}\n\n\n@mixin mat-option-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $foreground: map-get($config, foreground);\n  $background: map-get($config, background);\n  $primary: map-get($config, primary);\n  $accent: map-get($config, accent);\n  $warn: map-get($config, warn);\n\n  .mat-option {\n    color: mat-color($foreground, text);\n\n    &:hover:not(.mat-option-disabled),\n    &:focus:not(.mat-option-disabled) {\n      background: mat-color($background, hover);\n    }\n\n    // In multiple mode there is a checkbox to show that the option is selected.\n    &.mat-selected:not(.mat-option-multiple):not(.mat-option-disabled) {\n      background: mat-color($background, hover);\n    }\n\n    &.mat-active {\n      background: mat-color($background, hover);\n      color: mat-color($foreground, text);\n    }\n\n    &.mat-option-disabled {\n      color: mat-color($foreground, hint-text);\n    }\n  }\n\n  .mat-primary .mat-option.mat-selected:not(.mat-option-disabled) {\n    color: mat-color($primary, text);\n  }\n\n  .mat-accent .mat-option.mat-selected:not(.mat-option-disabled) {\n    color: mat-color($accent, text);\n  }\n\n  .mat-warn .mat-option.mat-selected:not(.mat-option-disabled) {\n    color: mat-color($warn, text);\n  }\n}\n\n@mixin mat-option-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-option {\n    font: {\n      family: mat-font-family($config);\n      size: mat-font-size($config, subheading-2);\n    }\n  }\n}\n\n@mixin _mat-option-density($config-or-theme) {}\n\n@mixin mat-option-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-option') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-option-color($color);\n    }\n    @if $density != null {\n      @include _mat-option-density($density);\n    }\n    @if $typography != null {\n      @include mat-option-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n@mixin mat-optgroup-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $foreground: map-get($config, foreground);\n\n  .mat-optgroup-label {\n    color: mat-color($foreground, secondary-text);\n  }\n\n  .mat-optgroup-disabled .mat-optgroup-label {\n    color: mat-color($foreground, hint-text);\n  }\n}\n\n@mixin mat-optgroup-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-optgroup-label {\n    @include mat-typography-level-to-styles($config, body-2);\n  }\n}\n\n@mixin _mat-optgroup-density($config-or-theme) {}\n\n@mixin mat-optgroup-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-optgroup') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-optgroup-color($color);\n    }\n    @if $density != null {\n      @include _mat-optgroup-density($density);\n    }\n    @if $typography != null {\n      @include mat-optgroup-typography($typography);\n    }\n  }\n}\n\n\n\n\n@mixin mat-pseudo-checkbox-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $is-dark-theme: map-get($config, is-dark);\n  $primary: map-get($config, primary);\n  $accent: map-get($config, accent);\n  $warn: map-get($config, warn);\n  $background: map-get($config, background);\n\n  // NOTE(traviskaufman): While the spec calls for translucent blacks/whites for disabled colors,\n  // this does not work well with elements layered on top of one another. To get around this we\n  // blend the colors together based on the base color and the theme background.\n  $white-30pct-opacity-on-dark: #686868;\n  $black-26pct-opacity-on-light: #b0b0b0;\n  $disabled-color: if($is-dark-theme, $white-30pct-opacity-on-dark, $black-26pct-opacity-on-light);\n  $colored-box-selector: '.mat-pseudo-checkbox-checked, .mat-pseudo-checkbox-indeterminate';\n\n  .mat-pseudo-checkbox {\n    color: mat-color(map-get($config, foreground), secondary-text);\n\n    &::after {\n      color: mat-color($background, background);\n    }\n  }\n\n  .mat-pseudo-checkbox-disabled {\n    color: $disabled-color;\n  }\n\n  .mat-primary .mat-pseudo-checkbox-checked,\n  .mat-primary .mat-pseudo-checkbox-indeterminate {\n    background: mat-color(map-get($config, primary));\n  }\n\n  // Default to the accent color. Note that the pseudo checkboxes are meant to inherit the\n  // theme from their parent, rather than implementing their own theming, which is why we\n  // don't attach to the `mat-*` classes. Also note that this needs to be below `.mat-primary`\n  // in order to allow for the color to be overwritten if the checkbox is inside a parent that\n  // has `mat-accent` and is placed inside another parent that has `mat-primary`.\n  .mat-pseudo-checkbox-checked,\n  .mat-pseudo-checkbox-indeterminate,\n  .mat-accent .mat-pseudo-checkbox-checked,\n  .mat-accent .mat-pseudo-checkbox-indeterminate {\n    background: mat-color(map-get($config, accent));\n  }\n\n  .mat-warn .mat-pseudo-checkbox-checked,\n  .mat-warn .mat-pseudo-checkbox-indeterminate {\n    background: mat-color(map-get($config, warn));\n  }\n\n  .mat-pseudo-checkbox-checked,\n  .mat-pseudo-checkbox-indeterminate {\n    &.mat-pseudo-checkbox-disabled {\n      background: $disabled-color;\n    }\n  }\n}\n\n@mixin mat-pseudo-checkbox-typography($config-or-theme) {}\n\n@mixin _mat-pseudo-checkbox-density($config-or-theme) {}\n\n@mixin mat-pseudo-checkbox-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-pseudo-checkbox') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-pseudo-checkbox-color($color);\n    }\n    @if $density != null {\n      @include _mat-pseudo-checkbox-density($density);\n    }\n    @if $typography != null {\n      @include mat-pseudo-checkbox-typography($typography);\n    }\n  }\n}\n\n\n\n// Represents a typography level from the Material design spec.\n@function mat-typography-level(\n  $font-size,\n  $line-height: $font-size,\n  $font-weight: 400,\n  $font-family: null,\n  $letter-spacing: normal) {\n\n  @return (\n    font-size: $font-size,\n    line-height: $line-height,\n    font-weight: $font-weight,\n    font-family: $font-family,\n    letter-spacing: $letter-spacing\n  );\n}\n\n// Represents a collection of typography levels.\n// Defaults come from https://material.io/guidelines/style/typography.html\n// Note: The spec doesn't mention letter spacing. The values here come from\n// eyeballing it until it looked exactly like the spec examples.\n@function mat-typography-config(\n  $font-family:   'Roboto, \"Helvetica Neue\", sans-serif',\n  $display-4:     mat-typography-level(112px, 112px, 300, $letter-spacing: -0.05em),\n  $display-3:     mat-typography-level(56px, 56px, 400, $letter-spacing: -0.02em),\n  $display-2:     mat-typography-level(45px, 48px, 400, $letter-spacing: -0.005em),\n  $display-1:     mat-typography-level(34px, 40px, 400),\n  $headline:      mat-typography-level(24px, 32px, 400),\n  $title:         mat-typography-level(20px, 32px, 500),\n  $subheading-2:  mat-typography-level(16px, 28px, 400),\n  $subheading-1:  mat-typography-level(15px, 24px, 400),\n  $body-2:        mat-typography-level(14px, 24px, 500),\n  $body-1:        mat-typography-level(14px, 20px, 400),\n  $caption:       mat-typography-level(12px, 20px, 400),\n  $button:        mat-typography-level(14px, 14px, 500),\n  // Line-height must be unit-less fraction of the font-size.\n  $input:         mat-typography-level(inherit, 1.125, 400)\n) {\n\n  // Declare an initial map with all of the levels.\n  $config: (\n    display-4:      $display-4,\n    display-3:      $display-3,\n    display-2:      $display-2,\n    display-1:      $display-1,\n    headline:       $headline,\n    title:          $title,\n    subheading-2:   $subheading-2,\n    subheading-1:   $subheading-1,\n    body-2:         $body-2,\n    body-1:         $body-1,\n    caption:        $caption,\n    button:         $button,\n    input:          $input,\n  );\n\n  // Loop through the levels and set the `font-family` of the ones that don't have one to the base.\n  // Note that Sass can't modify maps in place, which means that we need to merge and re-assign.\n  @each $key, $level in $config {\n    @if map-get($level, font-family) == null {\n      $new-level: map-merge($level, (font-family: $font-family));\n      $config: map-merge($config, ($key: $new-level));\n    }\n  }\n\n  // Add the base font family to the config.\n  @return map-merge($config, (font-family: $font-family));\n}\n\n// Whether a config is for the Material Design 2018 typography system.\n@function mat-private-typography-is-2018-config($config) {\n  @return map-get($config, headline-1) != null;\n}\n\n// Whether a config is for the Material Design 2014 typography system.\n@function mat-private-typography-is-2014-config($config) {\n  @return map-get($config, headline) != null;\n}\n\n// Given a config for either the 2014 or 2018 Material Design typography system,\n// produces a normalized typography config for the 2014 Material Design typography system.\n// 2014 - https://material.io/archive/guidelines/style/typography.html#typography-styles\n// 2018 - https://material.io/design/typography/the-type-system.html#type-scale\n@function mat-private-typography-to-2014-config($config) {\n  @if mat-private-typography-is-2018-config($config) {\n    @return mat-typography-config(\n        $display-4: map-get($config, headline-1),\n        $display-3: map-get($config, headline-2),\n        $display-2: map-get($config, headline-3),\n        $display-1: map-get($config, headline-4),\n        $headline: map-get($config, headline-5),\n        $title: map-get($config, headline-6),\n        $subheading-2: map-get($config, subtitle-1),\n        $subheading-1: map-get($config, subtitle-2),\n        $body-2: map-get($config, body-1),\n        $body-1: map-get($config, body-2),\n        $button: map-get($config, button),\n        $caption: map-get($config, caption),\n    );\n  }\n  @return $config;\n}\n\n// Given a config for either the 2014 or 2018 Material Design typography system,\n// produces a normalized typography config for the 2018 Material Design typography system.\n// 2014 - https://material.io/archive/guidelines/style/typography.html#typography-styles\n// 2018 - https://material.io/design/typography/the-type-system.html#type-scale\n@function mat-private-typography-to-2018-config($config) {\n  @if mat-private-typography-is-2014-config($config) {\n    @return (\n        headline-1: map-get($config, display-4),\n        headline-2: map-get($config, display-3),\n        headline-3: map-get($config, display-2),\n        headline-4: map-get($config, display-1),\n        headline-5: map-get($config, headline),\n        headline-6: map-get($config, title),\n        subtitle-1: map-get($config, subheading-2),\n        subtitle-2: map-get($config, subheading-1),\n        body-1: map-get($config, body-2),\n        body-2: map-get($config, body-1),\n        button: map-get($config, button),\n        caption: map-get($config, caption),\n    );\n  }\n  @return $config;\n}\n\n// Adds the base typography styles, based on a config.\n/* stylelint-disable-next-line material/theme-mixin-api */\n@mixin mat-base-typography($config, $selector: '.mat-typography') {\n  .mat-h1, .mat-headline, #{$selector} h1 {\n    @include mat-typography-level-to-styles($config, headline);\n    margin: 0 0 16px;\n  }\n\n  .mat-h2, .mat-title, #{$selector} h2 {\n    @include mat-typography-level-to-styles($config, title);\n    margin: 0 0 16px;\n  }\n\n  .mat-h3, .mat-subheading-2, #{$selector} h3 {\n    @include mat-typography-level-to-styles($config, subheading-2);\n    margin: 0 0 16px;\n  }\n\n  .mat-h4, .mat-subheading-1, #{$selector} h4 {\n    @include mat-typography-level-to-styles($config, subheading-1);\n    margin: 0 0 16px;\n  }\n\n  // Note: the spec doesn't have anything that would correspond to h5 and h6, but we add these for\n  // consistency. The font sizes come from the Chrome user agent styles which have h5 at 0.83em\n  // and h6 at 0.67em.\n  .mat-h5, #{$selector} h5 {\n    @include mat-typography-font-shorthand(\n       // calc is used here to support css variables\n      calc(#{mat-font-size($config, body-1)} * 0.83),\n      mat-font-weight($config, body-1),\n      mat-line-height($config, body-1),\n      mat-font-family($config, body-1)\n    );\n\n    margin: 0 0 12px;\n  }\n\n  .mat-h6, #{$selector} h6 {\n    @include mat-typography-font-shorthand(\n       // calc is used here to support css variables\n      calc(#{mat-font-size($config, body-1)} * 0.67),\n      mat-font-weight($config, body-1),\n      mat-line-height($config, body-1),\n      mat-font-family($config, body-1)\n    );\n\n    margin: 0 0 12px;\n  }\n\n  .mat-body-strong, .mat-body-2 {\n    @include mat-typography-level-to-styles($config, body-2);\n  }\n\n  .mat-body, .mat-body-1, #{$selector} {\n    @include mat-typography-level-to-styles($config, body-1);\n\n    p {\n      margin: 0 0 12px;\n    }\n  }\n\n  .mat-small, .mat-caption {\n    @include mat-typography-level-to-styles($config, caption);\n  }\n\n  .mat-display-4, #{$selector} .mat-display-4 {\n    @include mat-typography-level-to-styles($config, display-4);\n    margin: 0 0 56px;\n  }\n\n  .mat-display-3, #{$selector} .mat-display-3 {\n    @include mat-typography-level-to-styles($config, display-3);\n    margin: 0 0 64px;\n  }\n\n  .mat-display-2, #{$selector} .mat-display-2 {\n    @include mat-typography-level-to-styles($config, display-2);\n    margin: 0 0 64px;\n  }\n\n  .mat-display-1, #{$selector} .mat-display-1 {\n    @include mat-typography-level-to-styles($config, display-1);\n    margin: 0 0 64px;\n  }\n}\n\n\n\n\n\n@mixin mat-autocomplete-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $foreground: map-get($config, foreground);\n  $background: map-get($config, background);\n\n  .mat-autocomplete-panel {\n    @include _mat-theme-overridable-elevation(4, $config);\n    background: mat-color($background, card);\n    color: mat-color($foreground, text);\n\n    // Selected options in autocompletes should not be gray, but we\n    // only want to override the background for selected options if\n    // they are *not* in hover or focus state. This change has to be\n    // made here because base option styles are shared between the\n    // autocomplete and the select.\n    .mat-option.mat-selected:not(.mat-active):not(:hover) {\n      background: mat-color($background, card);\n\n      &:not(.mat-option-disabled) {\n        color: mat-color($foreground, text);\n      }\n    }\n  }\n}\n\n@mixin mat-autocomplete-typography($config-or-theme) {}\n\n@mixin _mat-autocomplete-density($config-or-theme) {}\n\n@mixin mat-autocomplete-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-autocomplete') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-autocomplete-color($color);\n    }\n    @if $density != null {\n      @include _mat-autocomplete-density($density);\n    }\n    @if $typography != null {\n      @include mat-autocomplete-typography($typography);\n    }\n  }\n}\n\n// This contains all of the styles for the badge\n// rather than just the color/theme because of\n// no style sheet support for directives.\n\n\n\n\n\n\n$mat-badge-font-size: 12px;\n$mat-badge-font-weight: 600;\n$mat-badge-default-size: 22px !default;\n$mat-badge-small-size: $mat-badge-default-size - 6;\n$mat-badge-large-size: $mat-badge-default-size + 6;\n\n// Mixin for building offset given different sizes\n@mixin _mat-badge-size($size) {\n  .mat-badge-content {\n    width: $size;\n    height: $size;\n    line-height: $size;\n  }\n\n  &.mat-badge-above {\n    .mat-badge-content {\n      top: -$size / 2;\n    }\n  }\n\n  &.mat-badge-below {\n    .mat-badge-content {\n      bottom: -$size / 2;\n    }\n  }\n\n  &.mat-badge-before {\n    .mat-badge-content {\n      left: -$size;\n    }\n  }\n\n  [dir='rtl'] &.mat-badge-before {\n    .mat-badge-content {\n      left: auto;\n      right: -$size;\n    }\n  }\n\n  &.mat-badge-after {\n    .mat-badge-content {\n      right: -$size;\n    }\n  }\n\n  [dir='rtl'] &.mat-badge-after {\n    .mat-badge-content {\n      right: auto;\n      left: -$size;\n    }\n  }\n\n  &.mat-badge-overlap {\n    &.mat-badge-before {\n      .mat-badge-content {\n        left: -$size / 2;\n      }\n    }\n\n    [dir='rtl'] &.mat-badge-before {\n      .mat-badge-content {\n        left: auto;\n        right: -$size / 2;\n      }\n    }\n\n    &.mat-badge-after {\n      .mat-badge-content {\n        right: -$size / 2;\n      }\n    }\n\n    [dir='rtl'] &.mat-badge-after {\n      .mat-badge-content {\n        right: auto;\n        left: -$size / 2;\n      }\n    }\n  }\n}\n\n@mixin mat-badge-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $accent: map-get($config, accent);\n  $warn: map-get($config, warn);\n  $primary: map-get($config, primary);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n\n  .mat-badge-content {\n    color: mat-color($primary, default-contrast);\n    background: mat-color($primary);\n\n    @include cdk-high-contrast(active, off) {\n      outline: solid 1px;\n      border-radius: 0;\n    }\n  }\n\n  .mat-badge-accent {\n    .mat-badge-content {\n      background: mat-color($accent);\n      color: mat-color($accent, default-contrast);\n    }\n  }\n\n  .mat-badge-warn {\n    .mat-badge-content {\n      color: mat-color($warn, default-contrast);\n      background: mat-color($warn);\n    }\n  }\n\n  .mat-badge {\n    position: relative;\n  }\n\n  .mat-badge-hidden {\n    .mat-badge-content {\n      display: none;\n    }\n  }\n\n  .mat-badge-disabled {\n    .mat-badge-content {\n      $app-background: mat-color($background, 'background');\n      $badge-color: mat-color($foreground, disabled-button);\n\n      // The disabled color usually has some kind of opacity, but because the badge is overlayed\n      // on top of something else, it won't look good if it's opaque. If it is a color *type*,\n      // we convert it into a solid color by taking the opacity from the rgba value and using\n      // the value to determine the percentage of the background to put into foreground when\n      // mixing the colors together.\n      @if (type-of($badge-color) == color and type-of($app-background) == color) {\n        $badge-opacity: opacity($badge-color);\n        background: mix($app-background, rgba($badge-color, 1), (1 - $badge-opacity) * 100%);\n      }\n      @else {\n        background: $badge-color;\n      }\n\n      color: mat-color($foreground, disabled-text);\n    }\n  }\n\n  .mat-badge-content {\n    position: absolute;\n    text-align: center;\n    display: inline-block;\n    border-radius: 50%;\n    transition: transform 200ms ease-in-out;\n    transform: scale(0.6);\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    pointer-events: none;\n  }\n\n  .ng-animate-disabled .mat-badge-content,\n  .mat-badge-content._mat-animation-noopable {\n    transition: none;\n  }\n\n  // The active class is added after the element is added\n  // so it can animate scale to default\n  .mat-badge-content.mat-badge-active {\n    // Scale to `none` instead of `1` to avoid blurry text in some browsers.\n    transform: none;\n  }\n\n  .mat-badge-small {\n    @include _mat-badge-size($mat-badge-small-size);\n  }\n  .mat-badge-medium {\n    @include _mat-badge-size($mat-badge-default-size);\n  }\n  .mat-badge-large {\n    @include _mat-badge-size($mat-badge-large-size);\n  }\n}\n\n@mixin mat-badge-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-badge-content {\n    font-weight: $mat-badge-font-weight;\n    font-size: $mat-badge-font-size;\n    font-family: mat-font-family($config);\n  }\n\n  .mat-badge-small .mat-badge-content {\n    // Set the font size to 75% of the original.\n    font-size: $mat-badge-font-size * 0.75;\n  }\n\n  .mat-badge-large .mat-badge-content {\n    font-size: $mat-badge-font-size * 2;\n  }\n}\n\n@mixin _mat-badge-density($config-or-theme) {}\n\n@mixin mat-badge-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-badge') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-badge-color($color);\n    }\n    @if $density != null {\n      @include _mat-badge-density($density);\n    }\n    @if $typography != null {\n      @include mat-badge-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n\n@mixin mat-bottom-sheet-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n\n  .mat-bottom-sheet-container {\n    @include _mat-theme-elevation(16, $config);\n    background: mat-color($background, dialog);\n    color: mat-color($foreground, text);\n  }\n}\n\n@mixin mat-bottom-sheet-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-bottom-sheet-container {\n    @include mat-typography-level-to-styles($config, body-1);\n  }\n}\n\n@mixin _mat-bottom-sheet-density($config-or-theme) {}\n\n@mixin mat-bottom-sheet-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-bottom-sheet') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-bottom-sheet-color($color);\n    }\n    @if $density != null {\n      @include _mat-bottom-sheet-density($density);\n    }\n    @if $typography != null {\n      @include mat-bottom-sheet-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n$_mat-button-ripple-opacity: 0.1;\n\n// Applies a focus style to an mat-button element for each of the supported palettes.\n@mixin _mat-button-focus-overlay-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $primary: map-get($config, primary);\n  $accent: map-get($config, accent);\n  $warn: map-get($config, warn);\n\n  &.mat-primary .mat-button-focus-overlay {\n    background-color: mat-color($primary);\n  }\n\n  &.mat-accent .mat-button-focus-overlay {\n    background-color: mat-color($accent);\n  }\n\n  &.mat-warn .mat-button-focus-overlay {\n    background-color: mat-color($warn);\n  }\n\n  &.mat-button-disabled .mat-button-focus-overlay {\n    background-color: transparent;\n  }\n}\n\n// Applies the background color for a ripple. If the value provided is not a Sass color,\n// we assume that we've been given a CSS variable. Since we can't perform alpha-blending\n// on a CSS variable, we instead add the opacity directly to the ripple element.\n@mixin _mat-button-ripple-background($palette, $hue, $opacity) {\n  $background-color: mat-color($palette, $hue, $opacity);\n  background-color: $background-color;\n  @if (type-of($background-color) != color) {\n    opacity: $opacity;\n  }\n}\n\n@mixin _mat-button-ripple-color($theme, $hue, $opacity: $_mat-button-ripple-opacity) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n\n  &.mat-primary .mat-ripple-element {\n    @include _mat-button-ripple-background($primary, $hue, $opacity);\n  }\n\n  &.mat-accent .mat-ripple-element {\n    @include _mat-button-ripple-background($accent, $hue, $opacity);\n  }\n\n  &.mat-warn .mat-ripple-element {\n    @include _mat-button-ripple-background($warn, $hue, $opacity);\n  }\n}\n\n// Applies a property to an mat-button element for each of the supported palettes.\n@mixin _mat-button-theme-property($theme, $property, $hue) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  &.mat-primary {\n    #{$property}: mat-color($primary, $hue);\n  }\n  &.mat-accent {\n    #{$property}: mat-color($accent, $hue);\n  }\n  &.mat-warn {\n    #{$property}: mat-color($warn, $hue);\n  }\n\n  &.mat-primary, &.mat-accent, &.mat-warn, &.mat-button-disabled {\n    &.mat-button-disabled {\n      $palette: if($property == 'color', $foreground, $background);\n      #{$property}: mat-color($palette, disabled-button);\n    }\n  }\n}\n\n@mixin mat-button-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $primary: map-get($config, primary);\n  $accent: map-get($config, accent);\n  $warn: map-get($config, warn);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n\n  .mat-button, .mat-icon-button, .mat-stroked-button {\n    // Buttons without a background color should inherit the font color. This is necessary to\n    // ensure that the button is readable on custom background colors. It's wrong to always assume\n    // that those buttons are always placed inside of containers with the default background\n    // color of the theme (e.g. themed toolbars).\n    color: inherit;\n    background: transparent;\n\n    @include _mat-button-theme-property($config, 'color', text);\n    @include _mat-button-focus-overlay-color($config);\n\n    // Setup the ripple color to be based on the text color. This ensures that the ripples\n    // are matching with the current theme palette and are in contrast to the background color\n    // (e.g in themed toolbars).\n    .mat-ripple-element {\n      opacity: $_mat-button-ripple-opacity;\n      background-color: currentColor;\n    }\n  }\n\n  .mat-button-focus-overlay {\n    background: map-get($foreground, base);\n  }\n\n  // Note: this needs a bit extra specificity, because we're not guaranteed the inclusion\n  // order of the theme styles and the button reset may end up resetting this as well.\n  .mat-stroked-button:not(.mat-button-disabled) {\n    border-color: mat-color($foreground, divider);\n  }\n\n  .mat-flat-button, .mat-raised-button, .mat-fab, .mat-mini-fab {\n    // Default font and background color when not using any color palette.\n    color: mat-color($foreground, text);\n    background-color: mat-color($background, raised-button);\n\n    @include _mat-button-theme-property($config, 'color', default-contrast);\n    @include _mat-button-theme-property($config, 'background-color', default);\n    @include _mat-button-ripple-color($config, default-contrast);\n  }\n\n  .mat-stroked-button, .mat-flat-button {\n    @include _mat-theme-overridable-elevation(0, $config);\n  }\n\n  .mat-raised-button {\n    @include _mat-theme-overridable-elevation(2, $config);\n\n    &:not(.mat-button-disabled):active {\n      @include _mat-theme-overridable-elevation(8, $config);\n    }\n\n    &.mat-button-disabled {\n      @include _mat-theme-overridable-elevation(0, $config);\n    }\n  }\n\n  .mat-fab, .mat-mini-fab {\n    @include _mat-theme-overridable-elevation(6, $config);\n\n    &:not(.mat-button-disabled):active {\n      @include _mat-theme-overridable-elevation(12, $config);\n    }\n\n    &.mat-button-disabled {\n      @include _mat-theme-overridable-elevation(0, $config);\n    }\n  }\n}\n\n@mixin mat-button-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-button, .mat-raised-button, .mat-icon-button, .mat-stroked-button,\n  .mat-flat-button, .mat-fab, .mat-mini-fab {\n    font: {\n      family: mat-font-family($config, button);\n      size: mat-font-size($config, button);\n      weight: mat-font-weight($config, button);\n    }\n  }\n}\n\n@mixin _mat-button-density($config-or-theme) {}\n\n@mixin mat-button-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-button') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-button-color($color);\n    }\n    @if $density != null {\n      @include _mat-button-density($density);\n    }\n    @if $typography != null {\n      @include mat-button-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n\n// Taken from mat-density with small modifications to not rely on the new Sass module\n// system, and to support arbitrary properties in a density configuration.\n// https://github.com/material-components/material-components-web/blob/master/packages/mdc-density\n\n$_mat-density-interval: 4px !default;\n$_mat-density-minimum-scale: minimum !default;\n$_mat-density-maximum-scale: maximum !default;\n$_mat-density-supported-scales: (default, minimum, maximum) !default;\n$_mat-density-default-scale: 0 !default;\n\n// Whether density should be generated at root. This will be temporarily set to `true`\n// whenever density styles for legacy themes are generated.\n$_mat-density-generate-at-root: false;\n// Whether density styles should be generated. This will be temporarily set to `false` if\n// duplicate density styles for a legacy theme would be generated. For legacy themes,\n// we always generate the default density **only once** at root.\n$_mat-density-generate-styles: true;\n\n// Mixin that can be used to wrap density styles of given components. The mixin will\n// move the density styles to root if the `$_mat-density-generate-at-root` global variable\n// is set. If `$_mat-density-generate-styles` is set to `false`, generation of density\n// styles wrapped in this mixin is skipped. This mixin exists to improve backwards compatibility\n// of the new theming API where density styles are included as part of themes. Previously,\n// density styles of components were part of their base styles. With the new API, they are\n// part of the theming system. The `<..>-theme` mixins generate density by default unless\n// the density configuration is explicitly specified as per new API. This means, that projects\n// using `<..>-theme` mixins for separate themes (like `.dark-theme`) will cause duplicate\n// density styles. This is breaking as it increases specificity of density styles. This mixin\n// provides an API to control generation of density styles so that we can ensure they are only\n// created *once* and at root.\n@mixin _mat-density-legacy-compatibility() {\n  @if $_mat-density-generate-styles and $_mat-density-generate-at-root {\n    @at-root {\n      @content;\n    }\n  }\n  @else if $_mat-density-generate-styles {\n    @content;\n  }\n}\n\n@function _mat-density-prop-value($density-config, $density-scale, $property-name) {\n  @if (type-of($density-scale) == 'string' and\n      index($list: $_mat-density-supported-scales, $value: $density-scale) == null) {\n    @error 'mat-density: Supported density scales #{$_mat-density-supported-scales}, '  +\n      'but received #{$density-scale}.';\n  }\n\n  $value: null;\n  $property-scale-map: map-get($density-config, $property-name);\n\n  @if map-has-key($property-scale-map, $density-scale) {\n    $value: map-get($property-scale-map, $density-scale);\n  }\n  @else {\n    $value: map-get($property-scale-map, default) + $density-scale * $_mat-density-interval;\n  }\n\n  $min-value: map-get($property-scale-map, $_mat-density-minimum-scale);\n  $max-value: map-get($property-scale-map, $_mat-density-maximum-scale);\n\n  @if ($value < $min-value or $value > $max-value) {\n    @error 'mat-density: #{$property-name} must be between #{$min-value} and ' +\n      '#{$max-value} (inclusive), but received #{$value}.';\n  }\n\n  @return $value;\n}\n\n$mat-button-toggle-standard-height: 48px !default;\n// Minimum height for highest density can vary based on the content that developers\n// project into button-toggle's. We use a minimum of `24px` though because commonly\n// icons or text are displayed. Icons by default have a size of `24px`.\n$mat-button-toggle-standard-minimum-height: 24px !default;\n$mat-button-toggle-standard-maximum-height: $mat-button-toggle-standard-height !default;\n\n$mat-button-toggle-standard-density-config: (\n  height: (\n    default: $mat-button-toggle-standard-height,\n    maximum: $mat-button-toggle-standard-maximum-height,\n    minimum: $mat-button-toggle-standard-minimum-height,\n  )\n) !default;\n\n\n@mixin mat-button-toggle-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $foreground: map-get($config, foreground);\n  $background: map-get($config, background);\n  $divider-color: mat-color($foreground, divider);\n\n  .mat-button-toggle-standalone,\n  .mat-button-toggle-group {\n    @include _mat-theme-elevation(2, $config);\n  }\n\n  .mat-button-toggle-standalone.mat-button-toggle-appearance-standard,\n  .mat-button-toggle-group-appearance-standard {\n    box-shadow: none;\n  }\n\n  .mat-button-toggle {\n    color: mat-color($foreground, hint-text);\n\n    .mat-button-toggle-focus-overlay {\n      background-color: mat-color($background, focused-button);\n    }\n  }\n\n  .mat-button-toggle-appearance-standard {\n    color: mat-color($foreground, text);\n    background: mat-color($background, card);\n\n    .mat-button-toggle-focus-overlay {\n      background-color: mat-color($background, focused-button, 1);\n    }\n  }\n\n  .mat-button-toggle-group-appearance-standard .mat-button-toggle + .mat-button-toggle {\n    border-left: solid 1px $divider-color;\n  }\n\n  [dir='rtl'] .mat-button-toggle-group-appearance-standard .mat-button-toggle + .mat-button-toggle {\n    border-left: none;\n    border-right: solid 1px $divider-color;\n  }\n\n  .mat-button-toggle-group-appearance-standard.mat-button-toggle-vertical {\n    .mat-button-toggle + .mat-button-toggle {\n      border-left: none;\n      border-right: none;\n      border-top: solid 1px $divider-color;\n    }\n  }\n\n  .mat-button-toggle-checked {\n    background-color: mat-color($background, selected-button);\n    color: mat-color($foreground, secondary-text);\n\n    &.mat-button-toggle-appearance-standard {\n      color: mat-color($foreground, text);\n    }\n  }\n\n  .mat-button-toggle-disabled {\n    color: mat-color($foreground, disabled-button);\n    background-color: mat-color($background, disabled-button-toggle);\n\n    &.mat-button-toggle-appearance-standard {\n      background: mat-color($background, card);\n    }\n\n    &.mat-button-toggle-checked {\n      background-color: mat-color($background, selected-disabled-button);\n    }\n  }\n\n  .mat-button-toggle-standalone.mat-button-toggle-appearance-standard,\n  .mat-button-toggle-group-appearance-standard {\n    border: solid 1px $divider-color;\n  }\n}\n\n@mixin mat-button-toggle-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-button-toggle {\n    font-family: mat-font-family($config);\n  }\n}\n\n@mixin _mat-button-toggle-density($config-or-theme) {\n  $density-scale: mat-get-density-config($config-or-theme);\n  $standard-height: _mat-density-prop-value(\n      $mat-button-toggle-standard-density-config, $density-scale, height);\n\n  @include _mat-density-legacy-compatibility() {\n    .mat-button-toggle-appearance-standard .mat-button-toggle-label-content {\n      line-height: $standard-height;\n    }\n  }\n}\n\n@mixin mat-button-toggle-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-button-toggle') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-button-toggle-color($color);\n    }\n    @if $density != null {\n      @include _mat-button-toggle-density($density);\n    }\n    @if $typography != null {\n      @include mat-button-toggle-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n\n\n@mixin mat-card-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n\n  .mat-card {\n    @include _mat-theme-overridable-elevation(1, $config);\n    background: mat-color($background, card);\n    color: mat-color($foreground, text);\n\n    // Needs extra specificity to be able to override the elevation selectors.\n    &.mat-card-flat {\n      @include _mat-theme-overridable-elevation(0, $config);\n    }\n  }\n\n  .mat-card-subtitle {\n    color: mat-color($foreground, secondary-text);\n  }\n}\n\n@mixin mat-card-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-card {\n    font-family: mat-font-family($config);\n  }\n\n  .mat-card-title {\n    font: {\n      size: mat-font-size($config, headline);\n      weight: mat-font-weight($config, title);\n    }\n  }\n\n  .mat-card-header .mat-card-title {\n    font-size: mat-font-size($config, title);\n  }\n\n  .mat-card-subtitle,\n  .mat-card-content {\n    font-size: mat-font-size($config, body-1);\n  }\n}\n\n@mixin _mat-card-density($config-or-theme) {}\n\n@mixin mat-card-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-card') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-card-color($color);\n    }\n    @if $density != null {\n      @include _mat-card-density($density);\n    }\n    @if $typography != null {\n      @include mat-card-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n@mixin mat-checkbox-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $is-dark-theme: map-get($config, is-dark);\n  $primary: map-get($config, primary);\n  $accent: map-get($config, accent);\n  $warn: map-get($config, warn);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n\n\n  // The color of the checkbox's checkmark / mixedmark.\n  $checkbox-mark-color: mat-color($background, background);\n\n  // NOTE(traviskaufman): While the spec calls for translucent blacks/whites for disabled colors,\n  // this does not work well with elements layered on top of one another. To get around this we\n  // blend the colors together based on the base color and the theme background.\n  $white-30pct-opacity-on-dark: #686868;\n  $black-26pct-opacity-on-light: #b0b0b0;\n  $disabled-color: if($is-dark-theme, $white-30pct-opacity-on-dark, $black-26pct-opacity-on-light);\n\n  .mat-checkbox-frame {\n    border-color: mat-color($foreground, secondary-text);\n  }\n\n  .mat-checkbox-checkmark {\n    fill: $checkbox-mark-color;\n  }\n\n  .mat-checkbox-checkmark-path {\n    // !important is needed here because a stroke must be set as an\n    // attribute on the SVG in order for line animation to work properly.\n    stroke: $checkbox-mark-color !important;\n  }\n\n  .mat-checkbox-mixedmark {\n    background-color: $checkbox-mark-color;\n  }\n\n  .mat-checkbox-indeterminate, .mat-checkbox-checked {\n    &.mat-primary .mat-checkbox-background {\n      background-color: mat-color($primary);\n    }\n\n    &.mat-accent .mat-checkbox-background {\n      background-color: mat-color($accent);\n    }\n\n    &.mat-warn .mat-checkbox-background {\n      background-color: mat-color($warn);\n    }\n  }\n\n  .mat-checkbox-disabled {\n    &.mat-checkbox-checked,\n    &.mat-checkbox-indeterminate {\n      .mat-checkbox-background {\n        background-color: $disabled-color;\n      }\n    }\n\n    &:not(.mat-checkbox-checked) {\n      .mat-checkbox-frame {\n        border-color: $disabled-color;\n      }\n    }\n\n    .mat-checkbox-label {\n      color: mat-color($foreground, secondary-text);\n    }\n  }\n\n  // Switch this to a solid color since we're using `opacity`\n  // to control how opaque the ripple should be.\n  .mat-checkbox .mat-ripple-element {\n    background-color: map-get(map-get($config, foreground), base);\n  }\n\n  .mat-checkbox-checked:not(.mat-checkbox-disabled),\n  .mat-checkbox:active:not(.mat-checkbox-disabled) {\n    &.mat-primary .mat-ripple-element {\n      background: mat-color($primary);\n    }\n\n    &.mat-accent .mat-ripple-element {\n      background: mat-color($accent);\n    }\n\n    &.mat-warn .mat-ripple-element {\n      background: mat-color($warn);\n    }\n  }\n}\n\n@mixin mat-checkbox-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-checkbox {\n    font-family: mat-font-family($config);\n  }\n\n  // TODO(kara): Remove this style when fixing vertical baseline\n  .mat-checkbox-layout .mat-checkbox-label {\n    line-height: mat-line-height($config, body-2);\n  }\n}\n\n@mixin _mat-checkbox-density($config-or-theme) {}\n\n@mixin mat-checkbox-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-checkbox') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-checkbox-color($color);\n    }\n    @if $density != null {\n      @include _mat-checkbox-density($density);\n    }\n    @if $typography != null {\n      @include mat-checkbox-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n\n$mat-chip-remove-font-size: 18px;\n\n@mixin _mat-chip-element-color($foreground, $background) {\n  background-color: $background;\n  color: $foreground;\n\n  .mat-chip-remove {\n    color: $foreground;\n    opacity: 0.4;\n  }\n}\n\n\n// Applies the background color for a ripple element.\n// If the color value provided is not a Sass color,\n// we assume that we've been given a CSS variable.\n// Since we can't perform alpha-blending on a CSS variable,\n// we instead add the opacity directly to the ripple element.\n@mixin _mat-chips-ripple-background($palette, $default-contrast, $opacity) {\n  $background-color: mat-color($palette, $default-contrast, $opacity);\n  background-color: $background-color;\n  @if (type-of($background-color) != color) {\n    opacity: $opacity;\n  }\n}\n\n@mixin _mat-chip-theme-color($palette) {\n  @include _mat-chip-element-color(mat-color($palette, default-contrast), mat-color($palette));\n\n  .mat-ripple-element {\n    @include _mat-chips-ripple-background($palette, default-contrast, 0.1);\n  }\n}\n\n@mixin mat-chips-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $is-dark-theme: map-get($config, is-dark);\n  $primary: map-get($config, primary);\n  $accent: map-get($config, accent);\n  $warn: map-get($config, warn);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n\n  $unselected-background: mat-color($background, unselected-chip);\n  $unselected-foreground: mat-color($foreground, text);\n\n  .mat-chip.mat-standard-chip {\n    @include _mat-chip-element-color($unselected-foreground, $unselected-background);\n\n    &:not(.mat-chip-disabled) {\n      &:active {\n        @include _mat-theme-elevation(3, $config);\n      }\n\n      .mat-chip-remove:hover {\n        opacity: 0.54;\n      }\n    }\n\n    &.mat-chip-disabled {\n      opacity: 0.4;\n    }\n\n    &::after {\n      background: map-get($foreground, base);\n    }\n  }\n\n  .mat-chip.mat-standard-chip.mat-chip-selected {\n    &.mat-primary {\n      @include _mat-chip-theme-color($primary);\n    }\n\n    &.mat-warn {\n      @include _mat-chip-theme-color($warn);\n    }\n\n    &.mat-accent {\n      @include _mat-chip-theme-color($accent);\n    }\n  }\n}\n\n@mixin mat-chips-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-chip {\n    font-size: mat-font-size($config, body-2);\n    font-weight: mat-font-weight($config, body-2);\n\n    .mat-chip-trailing-icon.mat-icon,\n    .mat-chip-remove.mat-icon {\n      font-size: $mat-chip-remove-font-size;\n    }\n  }\n}\n\n@mixin _mat-chips-density($config-or-theme) {}\n\n@mixin mat-chips-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-chips') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-chips-color($color);\n    }\n    @if $density != null {\n      @include _mat-chips-density($density);\n    }\n    @if $typography != null {\n      @include mat-chips-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n\n@mixin mat-divider-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $foreground: map-get($config, foreground);\n\n  .mat-divider {\n    border-top-color: mat-color($foreground, divider);\n  }\n\n  .mat-divider-vertical {\n    border-right-color: mat-color($foreground, divider);\n  }\n}\n\n@mixin mat-divider-typography($config-or-theme) {}\n\n@mixin _mat-divider-density($config-or-theme) {}\n\n@mixin mat-divider-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-divider') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-divider-color($color);\n    }\n    @if $density != null {\n      @include _mat-divider-density($density);\n    }\n    @if $typography != null {\n      @include mat-divider-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n@mixin mat-table-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n\n  .mat-table {\n    background: mat-color($background, 'card');\n  }\n\n  .mat-table thead, .mat-table tbody, .mat-table tfoot,\n  mat-header-row, mat-row, mat-footer-row,\n  [mat-header-row], [mat-row], [mat-footer-row],\n  .mat-table-sticky {\n    background: inherit;\n  }\n\n  mat-row, mat-header-row, mat-footer-row,\n  th.mat-header-cell, td.mat-cell, td.mat-footer-cell {\n    border-bottom-color: mat-color($foreground, divider);\n  }\n\n  .mat-header-cell {\n    color: mat-color($foreground, secondary-text);\n  }\n\n  .mat-cell, .mat-footer-cell {\n    color: mat-color($foreground, text);\n  }\n}\n\n@mixin mat-table-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-table {\n    font-family: mat-font-family($config);\n  }\n\n  .mat-header-cell {\n    font-size: mat-font-size($config, caption);\n    font-weight: mat-font-weight($config, body-2);\n  }\n\n  .mat-cell, .mat-footer-cell {\n    font-size: mat-font-size($config, body-1);\n  }\n}\n\n@mixin _mat-table-density($config-or-theme) {}\n\n@mixin mat-table-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-table') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-table-color($color);\n    }\n    @if $density != null {\n      @include _mat-table-density($density);\n    }\n    @if $typography != null {\n      @include mat-table-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n\n\n$mat-datepicker-selected-today-box-shadow-width: 1px;\n$mat-datepicker-selected-fade-amount: 0.6;\n$mat-datepicker-range-fade-amount: 0.2;\n$mat-datepicker-today-fade-amount: 0.2;\n$mat-calendar-body-font-size: 13px !default;\n$mat-calendar-weekday-table-font-size: 11px !default;\n\n@mixin _mat-datepicker-color($palette) {\n  @include mat-date-range-colors(\n    mat-color($palette, default, $mat-datepicker-range-fade-amount));\n\n  .mat-calendar-body-selected {\n    background-color: mat-color($palette);\n    color: mat-color($palette, default-contrast);\n  }\n\n  .mat-calendar-body-disabled > .mat-calendar-body-selected {\n    $background: mat-color($palette);\n\n    @if (type-of($background) == color) {\n      background-color: fade-out($background, $mat-datepicker-selected-fade-amount);\n    }\n    @else {\n      // If we couldn't resolve to background to a color (e.g. it's a CSS variable),\n      // fall back to fading the content out via `opacity`.\n      opacity: $mat-datepicker-today-fade-amount;\n    }\n  }\n\n  .mat-calendar-body-today.mat-calendar-body-selected {\n    box-shadow: inset 0 0 0 $mat-datepicker-selected-today-box-shadow-width\n                mat-color($palette, default-contrast);\n  }\n\n  .mat-calendar-body-cell:not(.mat-calendar-body-disabled):hover,\n  .cdk-keyboard-focused .mat-calendar-body-active,\n  .cdk-program-focused .mat-calendar-body-active {\n    & > .mat-calendar-body-cell-content {\n      @include _mat-datepicker-unselected-cell {\n        background-color: mat-color($palette, 0.3);\n      }\n    }\n  }\n}\n\n// Utility mixin to target cells that aren't selected. Used to make selector easier to follow.\n@mixin _mat-datepicker-unselected-cell {\n  &:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n    @content;\n  }\n}\n\n@mixin mat-datepicker-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $foreground: map-get($config, foreground);\n  $background: map-get($config, background);\n  $disabled-color: mat-color($foreground, disabled-text);\n\n  .mat-calendar-arrow {\n    border-top-color: mat-color($foreground, icon);\n  }\n\n  // The prev/next buttons need a bit more specificity to\n  // avoid being overwritten by the .mat-icon-button.\n  .mat-datepicker-toggle,\n  .mat-datepicker-content .mat-calendar-next-button,\n  .mat-datepicker-content .mat-calendar-previous-button {\n    color: mat-color($foreground, icon);\n  }\n\n  .mat-calendar-table-header {\n    color: mat-color($foreground, hint-text);\n  }\n\n  .mat-calendar-table-header-divider::after {\n    background: mat-color($foreground, divider);\n  }\n\n  .mat-calendar-body-label {\n    color: mat-color($foreground, secondary-text);\n  }\n\n  .mat-calendar-body-cell-content,\n  .mat-date-range-input-separator {\n    color: mat-color($foreground, text);\n    border-color: transparent;\n  }\n\n  .mat-calendar-body-disabled > .mat-calendar-body-cell-content {\n    @include _mat-datepicker-unselected-cell {\n      color: $disabled-color;\n    }\n  }\n\n  .mat-form-field-disabled .mat-date-range-input-separator {\n    color: $disabled-color;\n  }\n\n  .mat-calendar-body-in-preview {\n    $divider-color: mat-color($foreground, divider);\n\n    @if type-of($divider-color) == color {\n      // The divider color is set under the assumption that it'll be used\n      // for a solid border, but because we're using a dashed border for the\n      // preview range, we need to bump its opacity to ensure that it's visible.\n      color: rgba($divider-color, min(opacity($divider-color) * 2, 1));\n    }\n    @else {\n      color: $divider-color;\n    }\n  }\n\n  .mat-calendar-body-today {\n    @include _mat-datepicker-unselected-cell {\n      // Note: though it's not text, the border is a hint about the fact that this is today's date,\n      // so we use the hint color.\n      border-color: mat-color($foreground, hint-text);\n    }\n  }\n\n  .mat-calendar-body-disabled > .mat-calendar-body-today {\n    @include _mat-datepicker-unselected-cell {\n      $color: mat-color($foreground, hint-text);\n\n      @if (type-of($color) == color) {\n        border-color: fade-out($color, $mat-datepicker-today-fade-amount);\n      }\n      @else {\n        // If the color didn't resolve to a color value, but something like a CSS variable, we can't\n        // fade it out so we fall back to reducing the element opacity. Note that we don't use the\n        // $mat-datepicker-today-fade-amount, because hint text usually has some opacity applied\n        // to it already and we don't want them to stack on top of each other.\n        opacity: 0.5;\n      }\n    }\n  }\n\n  @include _mat-datepicker-color(map-get($config, primary));\n\n  .mat-datepicker-content {\n    @include _mat-theme-elevation(4, $config);\n    background-color: mat-color($background, card);\n    color: mat-color($foreground, text);\n\n    &.mat-accent {\n      @include _mat-datepicker-color(map-get($config, accent));\n    }\n\n    &.mat-warn {\n      @include _mat-datepicker-color(map-get($config, warn));\n    }\n  }\n\n  .mat-datepicker-content-touch {\n    @include _mat-theme-elevation(0, $config);\n  }\n\n  .mat-datepicker-toggle-active {\n    color: mat-color(map-get($config, primary), text);\n\n    &.mat-accent {\n      color: mat-color(map-get($config, accent), text);\n    }\n\n    &.mat-warn {\n      color: mat-color(map-get($config, warn), text);\n    }\n  }\n\n  .mat-date-range-input-inner[disabled] {\n    color: mat-color($foreground, disabled-text);\n  }\n}\n\n@mixin mat-datepicker-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-calendar {\n    font-family: mat-font-family($config);\n  }\n\n  .mat-calendar-body {\n    font-size: $mat-calendar-body-font-size;\n  }\n\n  .mat-calendar-body-label,\n  .mat-calendar-period-button {\n    font: {\n      size: mat-font-size($config, button);\n      weight: mat-font-weight($config, button);\n    }\n  }\n\n  .mat-calendar-table-header th {\n    font: {\n      size: $mat-calendar-weekday-table-font-size;\n      weight: mat-font-weight($config, body-1);\n    }\n  }\n}\n\n@mixin mat-date-range-colors(\n  $range-color,\n  $comparison-color: rgba(#f9ab00, $mat-datepicker-range-fade-amount),\n  $overlap-color: #a8dab5,\n  $overlap-selected-color: darken($overlap-color, 30%)) {\n\n  .mat-calendar-body-in-range::before {\n    background: $range-color;\n  }\n\n  .mat-calendar-body-comparison-identical,\n  .mat-calendar-body-in-comparison-range::before {\n    background: $comparison-color;\n  }\n\n  .mat-calendar-body-comparison-bridge-start::before,\n  [dir='rtl'] .mat-calendar-body-comparison-bridge-end::before {\n    background: linear-gradient(to right, $range-color 50%, $comparison-color 50%);\n  }\n\n  .mat-calendar-body-comparison-bridge-end::before,\n  [dir='rtl'] .mat-calendar-body-comparison-bridge-start::before {\n    background: linear-gradient(to left, $range-color 50%, $comparison-color 50%);\n  }\n\n  .mat-calendar-body-in-range > .mat-calendar-body-comparison-identical,\n  .mat-calendar-body-in-comparison-range.mat-calendar-body-in-range::after {\n    background: $overlap-color;\n  }\n\n  .mat-calendar-body-comparison-identical.mat-calendar-body-selected,\n  .mat-calendar-body-in-comparison-range > .mat-calendar-body-selected {\n    background: $overlap-selected-color;\n  }\n}\n\n@mixin _mat-datepicker-density($config-or-theme) {}\n\n@mixin mat-datepicker-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-datepicker') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-datepicker-color($color);\n    }\n    @if $density != null {\n      @include _mat-datepicker-density($density);\n    }\n    @if $typography != null {\n      @include mat-datepicker-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n\n\n@mixin mat-dialog-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n\n  .mat-dialog-container {\n    @include _mat-theme-elevation(24, $config);\n    background: mat-color($background, dialog);\n    color: mat-color($foreground, text);\n  }\n}\n\n@mixin mat-dialog-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-dialog-title {\n    @include mat-typography-level-to-styles($config, title);\n  }\n}\n\n@mixin _mat-dialog-density($config-or-theme) {}\n\n@mixin mat-dialog-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-dialog') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-dialog-color($color);\n    }\n    @if $density != null {\n      @include _mat-dialog-density($density);\n    }\n    @if $typography != null {\n      @include mat-dialog-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n\n// Default minimum and maximum height for collapsed panel headers.\n$mat-expansion-panel-header-collapsed-height: 48px !default;\n$mat-expansion-panel-header-collapsed-minimum-height: 36px !default;\n$mat-expansion-panel-header-collapsed-maximum-height:\n    $mat-expansion-panel-header-collapsed-height !default;\n\n// Default minimum and maximum height for expanded panel headers.\n$mat-expansion-panel-header-expanded-height: 64px !default;\n$mat-expansion-panel-header-expanded-minimum-height: 48px !default;\n$mat-expansion-panel-header-expanded-maximum-height:\n    $mat-expansion-panel-header-expanded-height !default;\n\n// Density configuration for the expansion panel. Captures the\n// height for both expanded and collapsed panel headers.\n$mat-expansion-panel-header-density-config: (\n  collapsed-height: (\n    default: $mat-expansion-panel-header-collapsed-height,\n    maximum: $mat-expansion-panel-header-collapsed-maximum-height,\n    minimum: $mat-expansion-panel-header-collapsed-minimum-height,\n  ),\n  expanded-height: (\n    default: $mat-expansion-panel-header-expanded-height,\n    maximum: $mat-expansion-panel-header-expanded-maximum-height,\n    minimum: $mat-expansion-panel-header-expanded-minimum-height,\n  )\n) !default;\n\n// Note: Keep this in sync with the animation timing for the toggle indicator\n// and body expansion. These are animated using Angular animations.\n$mat-expansion-panel-header-transition: 225ms cubic-bezier(0.4, 0, 0.2, 1);\n\n\n@mixin mat-expansion-panel-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n\n  .mat-expansion-panel {\n    @include _mat-theme-overridable-elevation(2, $config);\n    background: mat-color($background, card);\n    color: mat-color($foreground, text);\n  }\n\n  .mat-action-row {\n    border-top-color: mat-color($foreground, divider);\n  }\n\n  .mat-expansion-panel {\n    & .mat-expansion-panel-header.cdk-keyboard-focused,\n    & .mat-expansion-panel-header.cdk-program-focused,\n    &:not(.mat-expanded) .mat-expansion-panel-header:hover {\n      &:not([aria-disabled='true']) {\n        background: mat-color($background, hover);\n      }\n    }\n  }\n\n  // Disable the hover on touch devices since it can appear like it is stuck. We can't use\n  // `@media (hover)` above, because the desktop support browser support isn't great.\n  @media (hover: none) {\n    .mat-expansion-panel:not(.mat-expanded):not([aria-disabled='true'])\n      .mat-expansion-panel-header:hover {\n      background: mat-color($background, card);\n    }\n  }\n\n  .mat-expansion-panel-header-title {\n    color: mat-color($foreground, text);\n  }\n\n  .mat-expansion-panel-header-description,\n  .mat-expansion-indicator::after {\n    color: mat-color($foreground, secondary-text);\n  }\n\n  .mat-expansion-panel-header[aria-disabled='true'] {\n    color: mat-color($foreground, disabled-button);\n\n    .mat-expansion-panel-header-title,\n    .mat-expansion-panel-header-description {\n      color: inherit;\n    }\n  }\n}\n\n@mixin mat-expansion-panel-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-expansion-panel-header {\n    font: {\n      family: mat-font-family($config, subheading-1);\n      size: mat-font-size($config, subheading-1);\n      weight: mat-font-weight($config, subheading-1);\n    }\n  }\n\n  .mat-expansion-panel-content {\n    @include mat-typography-level-to-styles($config, body-1);\n  }\n}\n\n@mixin _mat-expansion-panel-density($config-or-theme) {\n  $density-scale: mat-get-density-config($config-or-theme);\n  $expanded-height: _mat-density-prop-value(\n        $mat-expansion-panel-header-density-config, $density-scale, expanded-height);\n  $collapsed-height: _mat-density-prop-value(\n      $mat-expansion-panel-header-density-config, $density-scale, collapsed-height);\n\n  @include _mat-density-legacy-compatibility() {\n    .mat-expansion-panel-header {\n      height: $collapsed-height;\n\n      &.mat-expanded {\n        height: $expanded-height;\n      }\n    }\n  }\n}\n\n@mixin mat-expansion-panel-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-expansion-panel') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-expansion-panel-color($color);\n    }\n    @if $density != null {\n      @include _mat-expansion-panel-density($density);\n    }\n    @if $typography != null {\n      @include mat-expansion-panel-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n// This mixin will ensure that lines that overflow the container will hide the overflow and\n// truncate neatly with an ellipsis.\n@mixin mat-truncate-line() {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n// Mixin to provide all mat-line styles, changing secondary font size based on whether the list\n// is in dense mode.\n@mixin mat-line-base($secondary-font-size) {\n  .mat-line {\n    @include mat-truncate-line();\n    display: block;\n    box-sizing: border-box;\n\n    // all lines but the top line should have smaller text\n    &:nth-child(n+2) {\n      font-size: $secondary-font-size;\n    }\n  }\n}\n\n// This mixin normalizes default element styles, e.g. font weight for heading text.\n@mixin mat-normalize-text() {\n  & > * {\n    margin: 0;\n    padding: 0;\n    font-weight: normal;\n    font-size: inherit;\n  }\n}\n\n// This mixin provides base styles for the wrapper around mat-line elements in a list.\n@mixin mat-line-wrapper-base() {\n  @include mat-normalize-text();\n\n  display: flex;\n  flex-direction: column;\n  flex: auto;\n  box-sizing: border-box;\n  overflow: hidden;\n\n  // Must remove wrapper when lines are empty or it takes up horizontal\n  // space and pushes other elements to the right.\n  &:empty {\n    display: none;\n  }\n}\n\n\n\n// Include this empty mixin for consistency with the other components.\n@mixin mat-grid-list-color($config-or-theme) {}\n\n@mixin mat-grid-list-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-grid-tile-header,\n  .mat-grid-tile-footer {\n    @include mat-line-base(mat-font-size($config, caption));\n    font-size: mat-font-size($config, body-1);\n  }\n}\n\n@mixin _mat-grid-list-density($config-or-theme) {}\n\n@mixin mat-grid-list-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-grid-list') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-grid-list-color($color);\n    }\n    @if $density != null {\n      @include _mat-grid-list-density($density);\n    }\n    @if $typography != null {\n      @include mat-grid-list-typography($typography);\n    }\n  }\n}\n\n\n\n\n@mixin mat-icon-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $primary: map-get($config, primary);\n  $accent: map-get($config, accent);\n  $warn: map-get($config, warn);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n\n  .mat-icon {\n    &.mat-primary {\n      color: mat-color($primary, text);\n    }\n\n    &.mat-accent {\n      color: mat-color($accent, text);\n    }\n\n    &.mat-warn {\n      color: mat-color($warn, text);\n    }\n  }\n}\n\n@mixin mat-icon-typography($config-or-theme) {}\n\n@mixin _mat-icon-density($config-or-theme) {}\n\n@mixin mat-icon-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-icon') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-icon-color($color);\n    }\n    @if $density != null {\n      @include _mat-icon-density($density);\n    }\n    @if $typography != null {\n      @include mat-icon-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n\n// Renders a gradient for showing the dashed line when the input is disabled.\n// Unlike using a border, a gradient allows us to adjust the spacing of the dotted line\n// to match the Material Design spec.\n@mixin mat-control-disabled-underline($color) {\n  background-image: linear-gradient(to right, $color 0%, $color 33%, transparent 0%);\n  background-size: 4px 100%;\n  background-repeat: repeat-x;\n}\n\n// Figures out the color of the placeholder for a form control.\n// Used primarily to prevent the various form controls from\n// becoming out of sync since these colors aren't in a palette.\n@function _mat-control-placeholder-color($config) {\n  $foreground: map-get($config, foreground);\n  $is-dark-theme: map-get($config, is-dark);\n  @return mat-color($foreground, secondary-text, if($is-dark-theme, 0.5, 0.42));\n}\n\n\n/* stylelint-disable material/no-prefixes */\n@mixin user-select($value) {\n  -webkit-user-select: $value;\n  -moz-user-select: $value;\n  -ms-user-select: $value;\n  user-select: $value;\n}\n\n@mixin input-placeholder {\n  &::placeholder {\n    @content;\n  }\n\n  &::-moz-placeholder {\n    @content;\n  }\n\n  &::-webkit-input-placeholder {\n    @content;\n  }\n\n  &:-ms-input-placeholder {\n    @content;\n  }\n}\n\n@mixin cursor-grab {\n  cursor: -webkit-grab;\n  cursor: grab;\n}\n\n@mixin cursor-grabbing {\n  cursor: -webkit-grabbing;\n  cursor: grabbing;\n}\n\n@mixin backface-visibility($value) {\n  -webkit-backface-visibility: $value;\n  backface-visibility: $value;\n}\n\n@mixin position-sticky($important: false) {\n  position: -webkit-sticky #{if($important, '!important', '')};\n  position: sticky #{if($important, '!important', '')};\n}\n/* stylelint-enable */\n\n\n\n@mixin mat-input-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $primary: map-get($config, primary);\n  $accent: map-get($config, accent);\n  $warn: map-get($config, warn);\n  $foreground: map-get($config, foreground);\n\n  .mat-form-field-type-mat-native-select .mat-form-field-infix::after {\n    color: mat-color($foreground, secondary-text);\n  }\n\n  .mat-input-element:disabled,\n  .mat-form-field-type-mat-native-select.mat-form-field-disabled .mat-form-field-infix::after {\n    color: mat-color($foreground, disabled-text);\n  }\n\n  .mat-input-element {\n    caret-color: mat-color($primary, text);\n\n    @include input-placeholder {\n      color: _mat-control-placeholder-color($config);\n    }\n\n    // On dark themes we set the native `select` color to some shade of white,\n    // however the color propagates to all of the `option` elements, which are\n    // always on a white background inside the dropdown, causing them to blend in.\n    // Since we can't change background of the dropdown, we need to explicitly\n    // reset the color of the options to something dark.\n    @if (map-get($config, is-dark)) {\n      option {\n        color: $dark-primary-text;\n      }\n\n      option:disabled {\n        color: $dark-disabled-text;\n      }\n    }\n  }\n\n  .mat-form-field.mat-accent .mat-input-element {\n    caret-color: mat-color($accent, text);\n  }\n\n  .mat-form-field.mat-warn .mat-input-element,\n  .mat-form-field-invalid .mat-input-element {\n    caret-color: mat-color($warn, text);\n  }\n\n  .mat-form-field-type-mat-native-select.mat-form-field-invalid .mat-form-field-infix::after {\n    color: mat-color($warn, text);\n  }\n}\n\n@mixin mat-input-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  // The unit-less line-height from the font config.\n  $line-height: mat-line-height($config, input);\n\n  // The amount of space between the top of the line and the top of the actual text\n  // (as a fraction of the font-size).\n  $line-spacing: ($line-height - 1) / 2;\n\n  // <input> elements seem to have their height set slightly too large on Safari causing the text to\n  // be misaligned w.r.t. the placeholder. Adding this margin corrects it.\n  input.mat-input-element {\n    margin-top: -$line-spacing * 1em;\n  }\n}\n\n@mixin _mat-input-density($config-or-theme) {}\n\n@mixin mat-input-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-input') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-input-color($color);\n    }\n    @if $density != null {\n      @include _mat-input-density($density);\n    }\n    @if $typography != null {\n      @include mat-input-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n\n\n@mixin mat-list-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n\n  .mat-list-base {\n    .mat-list-item {\n      color: mat-color($foreground, text);\n    }\n\n    .mat-list-option {\n      color: mat-color($foreground, text);\n    }\n\n    .mat-subheader {\n      color: mat-color($foreground, secondary-text);\n    }\n  }\n\n  .mat-list-item-disabled {\n    background-color: mat-color($background, disabled-list-option);\n  }\n\n  .mat-list-option,\n  .mat-nav-list .mat-list-item,\n  .mat-action-list .mat-list-item {\n    &:hover, &:focus {\n      background: mat-color($background, 'hover');\n    }\n  }\n\n  .mat-list-single-selected-option {\n    &, &:hover, &:focus {\n      background: mat-color($background, hover, 0.12);\n    }\n  }\n}\n\n@mixin mat-list-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  $font-family: mat-font-family($config);\n\n  .mat-list-item {\n    font-family: $font-family;\n  }\n\n  .mat-list-option {\n    font-family: $font-family;\n  }\n\n  // Default list\n  .mat-list-base {\n    .mat-list-item {\n      font-size: mat-font-size($config, subheading-2);\n      @include mat-line-base(mat-font-size($config, body-1));\n    }\n\n    .mat-list-option {\n      font-size: mat-font-size($config, subheading-2);\n      @include mat-line-base(mat-font-size($config, body-1));\n    }\n\n    .mat-subheader {\n      font-family: mat-font-family($config, body-2);\n      font-size: mat-font-size($config, body-2);\n      font-weight: mat-font-weight($config, body-2);\n    }\n  }\n\n  // Dense list\n  .mat-list-base[dense] {\n    .mat-list-item {\n      font-size: mat-font-size($config, caption);\n      @include mat-line-base(mat-font-size($config, caption));\n    }\n\n    .mat-list-option {\n      font-size: mat-font-size($config, caption);\n      @include mat-line-base(mat-font-size($config, caption));\n    }\n\n    .mat-subheader {\n      font-family: $font-family;\n      font-size: mat-font-size($config, caption);\n      font-weight: mat-font-weight($config, body-2);\n    }\n  }\n}\n\n@mixin _mat-list-density($config-or-theme) {}\n\n@mixin mat-list-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-list') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-list-color($color);\n    }\n    @if $density != null {\n      @include _mat-list-density($density);\n    }\n    @if $typography != null {\n      @include mat-list-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n\n\n@mixin mat-menu-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n\n  .mat-menu-panel {\n    @include _mat-theme-overridable-elevation(4, $config);\n    background: mat-color($background, 'card');\n  }\n\n  .mat-menu-item {\n    background: transparent;\n    color: mat-color($foreground, 'text');\n\n    &[disabled] {\n      &,\n      &::after,\n      .mat-icon-no-color {\n        color: mat-color($foreground, 'disabled');\n      }\n    }\n  }\n\n  .mat-menu-item .mat-icon-no-color,\n  .mat-menu-item-submenu-trigger::after {\n    color: mat-color($foreground, 'icon');\n  }\n\n  .mat-menu-item:hover,\n  .mat-menu-item.cdk-program-focused,\n  .mat-menu-item.cdk-keyboard-focused,\n  .mat-menu-item-highlighted {\n    &:not([disabled]) {\n      background: mat-color($background, 'hover');\n    }\n  }\n}\n\n@mixin mat-menu-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-menu-item {\n    font: {\n      family: mat-font-family($config, body-1);\n      size: mat-font-size($config, body-1);\n      weight: mat-font-weight($config, body-1);\n    }\n  }\n}\n\n@mixin _mat-menu-density($config-or-theme) {}\n\n@mixin mat-menu-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-menu') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-menu-color($color);\n    }\n    @if $density != null {\n      @include _mat-menu-density($density);\n    }\n    @if $typography != null {\n      @include mat-menu-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n\n$mat-paginator-height: 56px !default;\n// Minimum height for paginator's in the highest density is determined based on how\n// much the paginator can shrink until the content exceeds (i.e. navigation buttons).\n$mat-paginator-minimum-height: 40px !default;\n$mat-paginator-maximum-height: $mat-paginator-height !default;\n\n$mat-paginator-density-config: (\n  height: (\n    default: $mat-paginator-height,\n    maximum: $mat-paginator-maximum-height,\n    minimum: $mat-paginator-minimum-height,\n  )\n) !default;\n\n\n@mixin mat-paginator-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $foreground: map-get($config, foreground);\n  $background: map-get($config, background);\n\n  .mat-paginator {\n    background: mat-color($background, 'card');\n  }\n\n  .mat-paginator,\n  .mat-paginator-page-size .mat-select-trigger {\n    color: mat-color($foreground, secondary-text);\n  }\n\n  .mat-paginator-decrement,\n  .mat-paginator-increment {\n    border-top: 2px solid mat-color($foreground, 'icon');\n    border-right: 2px solid mat-color($foreground, 'icon');\n  }\n\n  .mat-paginator-first,\n  .mat-paginator-last {\n    border-top: 2px solid mat-color($foreground, 'icon');\n  }\n\n  .mat-icon-button[disabled] {\n    .mat-paginator-decrement,\n    .mat-paginator-increment,\n    .mat-paginator-first,\n    .mat-paginator-last {\n      border-color: mat-color($foreground, 'disabled');\n    }\n  }\n}\n\n@mixin mat-paginator-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-paginator,\n  .mat-paginator-page-size .mat-select-trigger {\n    font: {\n      family: mat-font-family($config, caption);\n      size: mat-font-size($config, caption);\n    }\n  }\n}\n\n@mixin _mat-paginator-density($config-or-theme) {\n  $density-scale: mat-get-density-config($config-or-theme);\n  $height: _mat-density-prop-value($mat-paginator-density-config, $density-scale, height);\n\n  @include _mat-density-legacy-compatibility() {\n    .mat-paginator-container {\n      min-height: $height;\n    }\n  }\n}\n\n@mixin mat-paginator-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-paginator') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-paginator-color($color);\n    }\n    @if $density != null {\n      @include _mat-paginator-density($density);\n    }\n    @if $typography != null {\n      @include mat-paginator-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n@mixin mat-progress-bar-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $primary: map-get($config, primary);\n  $accent: map-get($config, accent);\n  $warn: map-get($config, warn);\n\n  .mat-progress-bar-background {\n    fill: mat-color($primary, lighter);\n  }\n\n  .mat-progress-bar-buffer {\n    background-color: mat-color($primary, lighter);\n  }\n\n  .mat-progress-bar-fill::after {\n    background-color: mat-color($primary);\n  }\n\n  .mat-progress-bar.mat-accent {\n    .mat-progress-bar-background {\n      fill: mat-color($accent, lighter);\n    }\n\n    .mat-progress-bar-buffer {\n      background-color: mat-color($accent, lighter);\n    }\n\n    .mat-progress-bar-fill::after {\n      background-color: mat-color($accent);\n    }\n  }\n\n  .mat-progress-bar.mat-warn {\n    .mat-progress-bar-background {\n      fill: mat-color($warn, lighter);\n    }\n\n    .mat-progress-bar-buffer {\n      background-color: mat-color($warn, lighter);\n    }\n\n    .mat-progress-bar-fill::after {\n      background-color: mat-color($warn);\n    }\n  }\n}\n\n@mixin mat-progress-bar-typography($config-or-theme) {}\n\n@mixin _mat-progress-bar-density($config-or-theme) {}\n\n@mixin mat-progress-bar-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-progress-bar') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-progress-bar-color($color);\n    }\n    @if $density != null {\n      @include _mat-progress-bar-density($density);\n    }\n    @if $typography != null {\n      @include mat-progress-bar-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n@mixin mat-progress-spinner-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $primary: map-get($config, primary);\n  $accent: map-get($config, accent);\n  $warn: map-get($config, warn);\n\n  .mat-progress-spinner, .mat-spinner {\n    circle {\n      stroke: mat-color($primary);\n    }\n\n    &.mat-accent circle {\n      stroke: mat-color($accent);\n    }\n\n    &.mat-warn circle {\n      stroke: mat-color($warn);\n    }\n  }\n}\n\n@mixin mat-progress-spinner-typography($config-or-theme) {}\n\n@mixin _mat-progress-spinner-density($config-or-theme) {}\n\n@mixin mat-progress-spinner-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-progress-spinner') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-progress-spinner-color($color);\n    }\n    @if $density != null {\n      @include _mat-progress-spinner-density($density);\n    }\n    @if $typography != null {\n      @include mat-progress-spinner-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n@mixin _mat-radio-color($palette) {\n  &.mat-radio-checked .mat-radio-outer-circle {\n    border-color: mat-color($palette);\n  }\n\n  .mat-radio-inner-circle,\n  .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple),\n  &.mat-radio-checked .mat-radio-persistent-ripple,\n  &:active .mat-radio-persistent-ripple {\n    background-color: mat-color($palette);\n  }\n}\n\n@mixin mat-radio-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $primary: map-get($config, primary);\n  $accent: map-get($config, accent);\n  $warn: map-get($config, warn);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n\n  .mat-radio-outer-circle {\n    border-color: mat-color($foreground, secondary-text);\n  }\n\n  .mat-radio-button {\n    &.mat-primary {\n      @include _mat-radio-color($primary);\n    }\n\n    &.mat-accent {\n      @include _mat-radio-color($accent);\n    }\n\n    &.mat-warn {\n      @include _mat-radio-color($warn);\n    }\n\n    // This needs extra specificity, because the classes above are combined\n    // (e.g. `.mat-radio-button.mat-accent`) which increases their specificity a lot.\n    // TODO: consider making the selectors into descendants (`.mat-primary .mat-radio-button`).\n    &.mat-radio-disabled {\n      &.mat-radio-checked .mat-radio-outer-circle,\n      .mat-radio-outer-circle {\n        border-color: mat-color($foreground, disabled);\n      }\n\n      .mat-radio-ripple .mat-ripple-element,\n      .mat-radio-inner-circle {\n        background-color: mat-color($foreground, disabled);\n      }\n\n      .mat-radio-label-content {\n        color: mat-color($foreground, disabled);\n      }\n    }\n\n    // Switch this to a solid color since we're using `opacity`\n    // to control how opaque the ripple should be.\n    .mat-ripple-element {\n      background-color: map-get($foreground, base);\n    }\n  }\n}\n\n@mixin mat-radio-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-radio-button {\n    font-family: mat-font-family($config);\n  }\n}\n\n@mixin _mat-radio-density($config-or-theme) {}\n\n@mixin mat-radio-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-radio') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-radio-color($color);\n    }\n    @if $density != null {\n      @include _mat-radio-density($density);\n    }\n    @if $typography != null {\n      @include mat-radio-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n\n\n\n@mixin mat-select-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $foreground: map-get($config, foreground);\n  $background: map-get($config, background);\n  $primary: map-get($config, primary);\n  $accent: map-get($config, accent);\n  $warn: map-get($config, warn);\n\n  .mat-select-value {\n    color: mat-color($foreground, text);\n  }\n\n  .mat-select-placeholder {\n    color: _mat-control-placeholder-color($config);\n  }\n\n  .mat-select-disabled .mat-select-value {\n    color: mat-color($foreground, disabled-text);\n  }\n\n  .mat-select-arrow {\n    color: mat-color($foreground, secondary-text);\n  }\n\n  .mat-select-panel {\n    background: mat-color($background, card);\n    @include _mat-theme-overridable-elevation(4, $config);\n\n    .mat-option.mat-selected:not(.mat-option-multiple) {\n      background: mat-color($background, hover, 0.12);\n    }\n  }\n\n  .mat-form-field {\n    &.mat-focused {\n      &.mat-primary .mat-select-arrow {\n        color: mat-color($primary, text);\n      }\n\n      &.mat-accent .mat-select-arrow {\n        color: mat-color($accent, text);\n      }\n\n      &.mat-warn .mat-select-arrow {\n        color: mat-color($warn, text);\n      }\n    }\n\n    .mat-select.mat-select-invalid .mat-select-arrow {\n      color: mat-color($warn, text);\n    }\n\n    .mat-select.mat-select-disabled .mat-select-arrow {\n      color: mat-color($foreground, disabled-text);\n    }\n  }\n}\n\n@mixin mat-select-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  // The unit-less line-height from the font config.\n  $line-height: mat-line-height($config, input);\n\n  .mat-select {\n    font-family: mat-font-family($config);\n  }\n\n  .mat-select-trigger {\n    height: $line-height * 1em;\n  }\n}\n\n@mixin _mat-select-density($config-or-theme) {}\n\n@mixin mat-select-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-select') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-select-color($color);\n    }\n    @if $density != null {\n      @include _mat-select-density($density);\n    }\n    @if $typography != null {\n      @include mat-select-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n@mixin mat-sidenav-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $primary: map-get($config, primary);\n  $accent: map-get($config, accent);\n  $warn: map-get($config, warn);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n\n  $drawer-background-color: mat-color($background, dialog);\n  $drawer-container-background-color:  mat-color($background, background);\n  $drawer-push-background-color: mat-color($background, dialog);\n  $drawer-side-border: solid 1px mat-color($foreground, divider);\n\n  .mat-drawer-container {\n    background-color: $drawer-container-background-color;\n    color: mat-color($foreground, text);\n  }\n\n  .mat-drawer {\n    background-color: $drawer-background-color;\n    color: mat-color($foreground, text);\n\n    &.mat-drawer-push {\n      background-color: $drawer-push-background-color;\n    }\n\n    &:not(.mat-drawer-side) {\n      // The elevation of z-16 is noted in the design specifications.\n      // See https://material.io/design/components/navigation-drawer.html\n      @include _mat-theme-elevation(16, $config);\n    }\n  }\n\n  .mat-drawer-side {\n    border-right: $drawer-side-border;\n\n    &.mat-drawer-end {\n      border-left: $drawer-side-border;\n      border-right: none;\n    }\n  }\n\n  [dir='rtl'] .mat-drawer-side {\n    border-left: $drawer-side-border;\n    border-right: none;\n\n    &.mat-drawer-end {\n      border-left: none;\n      border-right: $drawer-side-border;\n    }\n  }\n\n  .mat-drawer-backdrop.mat-drawer-shown {\n    $opacity: 0.6;\n    $backdrop-color: mat-color($background, card, $opacity);\n\n    @if (type-of($backdrop-color) == color) {\n      // We use invert() here to have the darken the background color expected to be used. If the\n      // background is light, we use a dark backdrop. If the background is dark,\n      // we use a light backdrop.\n      background-color: invert($backdrop-color);\n    }\n    @else {\n      // If we couldn't resolve the backdrop color to a color value, fall back to using\n      // `opacity` to make it opaque since its end value could be a solid color.\n      background-color: $backdrop-color;\n      opacity: $opacity;\n    }\n  }\n}\n\n@mixin mat-sidenav-typography($config-or-theme) {}\n\n@mixin _mat-sidenav-density($config-or-theme) {}\n\n@mixin mat-sidenav-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-sidenav') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-sidenav-color($color);\n    }\n    @if $density != null {\n      @include _mat-sidenav-density($density);\n    }\n    @if $typography != null {\n      @include mat-sidenav-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n\n@mixin _mat-slide-toggle-checked($palette, $thumb-checked-hue) {\n  &.mat-checked {\n    .mat-slide-toggle-thumb {\n      background-color: mat-color($palette, $thumb-checked-hue);\n    }\n\n    .mat-slide-toggle-bar {\n      // Opacity is determined from the specs for the selection controls.\n      // See: https://material.io/design/components/selection-controls.html#specs\n      background-color: mat-color($palette, $thumb-checked-hue, 0.54);\n    }\n\n    .mat-ripple-element {\n      // Set no opacity for the ripples because the ripple opacity will be adjusted dynamically\n      // based on the type of interaction with the slide-toggle (e.g. for hover, focus)\n      background-color: mat-color($palette, $thumb-checked-hue);\n    }\n  }\n}\n\n@mixin mat-slide-toggle-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $is-dark: map-get($config, is-dark);\n  $primary: map-get($config, primary);\n  $accent: map-get($config, accent);\n  $warn: map-get($config, warn);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n\n  // Color hues are based on the specs which briefly show the hues that are applied to a switch.\n  // The 2018 specs no longer describe how dark switches should look like. Due to the lack of\n  // information for dark themed switches, we partially keep the old behavior that is based on\n  // the previous specifications. For the checked color we always use the `default` hue because\n  // that follows MDC and also makes it easier for people to create a custom theme without needing\n  // to specify each hue individually.\n  $thumb-unchecked-hue: if($is-dark, 400, 50);\n  $thumb-checked-hue: default;\n\n  $bar-unchecked-color: mat-color($foreground, disabled);\n  $ripple-unchecked-color: mat-color($foreground, base);\n\n  .mat-slide-toggle {\n    @include _mat-slide-toggle-checked($accent, $thumb-checked-hue);\n\n    &.mat-primary {\n      @include _mat-slide-toggle-checked($primary, $thumb-checked-hue);\n    }\n\n    &.mat-warn {\n      @include _mat-slide-toggle-checked($warn, $thumb-checked-hue);\n    }\n\n    &:not(.mat-checked) .mat-ripple-element {\n      // Set no opacity for the ripples because the ripple opacity will be adjusted dynamically\n      // based on the type of interaction with the slide-toggle (e.g. for hover, focus)\n      background-color: $ripple-unchecked-color;\n    }\n  }\n\n  .mat-slide-toggle-thumb {\n    @include _mat-theme-elevation(1, $config);\n    background-color: mat-color($mat-grey, $thumb-unchecked-hue);\n  }\n\n  .mat-slide-toggle-bar {\n    background-color: $bar-unchecked-color;\n  }\n}\n\n@mixin mat-slide-toggle-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-slide-toggle-content {\n    font-family: mat-font-family($config);\n  }\n}\n\n@mixin _mat-slide-toggle-density($config-or-theme) {}\n\n@mixin mat-slide-toggle-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-slide-toggle') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-slide-toggle-color($color);\n    }\n    @if $density != null {\n      @include _mat-slide-toggle-density($density);\n    }\n    @if $typography != null {\n      @include mat-slide-toggle-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n\n@mixin _mat-slider-inner-content-theme($palette) {\n  .mat-slider-track-fill,\n  .mat-slider-thumb,\n  .mat-slider-thumb-label {\n    background-color: mat-color($palette);\n  }\n\n  .mat-slider-thumb-label-text {\n    color: mat-color($palette, default-contrast);\n  }\n\n  .mat-slider-focus-ring {\n    $opacity: 0.2;\n    $color: mat-color($palette, default, $opacity);\n    background-color: $color;\n\n    // `mat-color` uses `rgba` for the opacity which won't work with\n    // CSS variables so we need to use `opacity` as a fallback.\n    @if (type-of($color) != color) {\n      opacity: $opacity;\n    }\n  }\n}\n\n@mixin mat-slider-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $primary: map-get($config, primary);\n  $accent: map-get($config, accent);\n  $warn: map-get($config, warn);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n\n  $mat-slider-off-color: mat-color($foreground, slider-off);\n  $mat-slider-off-focused-color: mat-color($foreground, slider-off-active);\n  $mat-slider-disabled-color: mat-color($foreground, slider-off);\n  $mat-slider-labeled-min-value-thumb-color: mat-color($foreground, slider-min);\n  $mat-slider-labeled-min-value-thumb-label-color: mat-color($foreground, slider-off);\n  $mat-slider-tick-opacity: 0.7;\n  $mat-slider-tick-color: mat-color($foreground, base, $mat-slider-tick-opacity);\n  $mat-slider-tick-size: 2px;\n\n  .mat-slider-track-background {\n    background-color: $mat-slider-off-color;\n  }\n\n  .mat-primary {\n    @include _mat-slider-inner-content-theme($primary);\n  }\n\n  .mat-accent {\n    @include _mat-slider-inner-content-theme($accent);\n  }\n\n  .mat-warn {\n    @include _mat-slider-inner-content-theme($warn);\n  }\n\n  .mat-slider:hover,\n  .cdk-focused {\n    .mat-slider-track-background {\n      background-color: $mat-slider-off-focused-color;\n    }\n  }\n\n  .mat-slider-disabled {\n    .mat-slider-track-background,\n    .mat-slider-track-fill,\n    .mat-slider-thumb {\n      background-color: $mat-slider-disabled-color;\n    }\n\n    &:hover {\n      .mat-slider-track-background {\n        background-color: $mat-slider-disabled-color;\n      }\n    }\n  }\n\n  .mat-slider-min-value {\n    .mat-slider-focus-ring {\n      $opacity: 0.12;\n      $color: mat-color($foreground, base, $opacity);\n      background-color: $color;\n\n      // `mat-color` uses `rgba` for the opacity which won't work with\n      // CSS variables so we need to use `opacity` as a fallback.\n      @if (type-of($color) != color) {\n        opacity: $opacity;\n      }\n    }\n\n    &.mat-slider-thumb-label-showing {\n      .mat-slider-thumb,\n      .mat-slider-thumb-label {\n        background-color: $mat-slider-labeled-min-value-thumb-color;\n      }\n\n      &.cdk-focused {\n        .mat-slider-thumb,\n        .mat-slider-thumb-label {\n          background-color: $mat-slider-labeled-min-value-thumb-label-color;\n        }\n      }\n    }\n\n    &:not(.mat-slider-thumb-label-showing) {\n      .mat-slider-thumb {\n        border-color: $mat-slider-off-color;\n        background-color: transparent;\n      }\n\n      &:hover,\n      &.cdk-focused {\n        .mat-slider-thumb {\n          border-color: $mat-slider-off-focused-color;\n        }\n\n        &.mat-slider-disabled .mat-slider-thumb {\n          border-color: $mat-slider-disabled-color;\n        }\n      }\n    }\n  }\n\n  .mat-slider-has-ticks .mat-slider-wrapper::after {\n    border-color: $mat-slider-tick-color;\n\n    // `mat-color` uses `rgba` for the opacity which won't work with\n    // CSS variables so we need to use `opacity` as a fallback.\n    @if (type-of($mat-slider-tick-color) != color) {\n      opacity: $mat-slider-tick-opacity;\n    }\n  }\n\n  .mat-slider-horizontal .mat-slider-ticks {\n    background-image: repeating-linear-gradient(to right, $mat-slider-tick-color,\n        $mat-slider-tick-color $mat-slider-tick-size, transparent 0, transparent);\n    // Firefox doesn't draw the gradient correctly with 'to right'\n    // (see https://bugzilla.mozilla.org/show_bug.cgi?id=1314319).\n    background-image: -moz-repeating-linear-gradient(0.0001deg, $mat-slider-tick-color,\n        $mat-slider-tick-color $mat-slider-tick-size, transparent 0, transparent);\n\n    // `mat-color` uses `rgba` for the opacity which won't work with\n    // CSS variables so we need to use `opacity` as a fallback.\n    @if (type-of($mat-slider-tick-color) != color) {\n      opacity: $mat-slider-tick-opacity;\n    }\n  }\n\n  .mat-slider-vertical .mat-slider-ticks {\n    background-image: repeating-linear-gradient(to bottom, $mat-slider-tick-color,\n        $mat-slider-tick-color $mat-slider-tick-size, transparent 0, transparent);\n\n    // `mat-color` uses `rgba` for the opacity which won't work with\n    // CSS variables so we need to use `opacity` as a fallback.\n    @if (type-of($mat-slider-tick-color) != color) {\n      opacity: $mat-slider-tick-opacity;\n    }\n  }\n}\n\n@mixin mat-slider-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-slider-thumb-label-text {\n    font: {\n      family: mat-font-family($config);\n      size: mat-font-size($config, caption);\n      weight: mat-font-weight($config, body-2);\n    }\n  }\n}\n\n@mixin _mat-slider-density($config-or-theme) {}\n\n@mixin mat-slider-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-slider') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-slider-color($color);\n    }\n    @if $density != null {\n      @include _mat-slider-density($density);\n    }\n    @if $typography != null {\n      @include mat-slider-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n$mat-stepper-header-height: 72px !default;\n// Minimum height for highest density stepper's is determined based on how much\n// stepper headers can shrink until the step icon or step label exceed. We can't use\n// a value below `42px` because the optional label for steps would otherwise exceed.\n$mat-stepper-header-minimum-height: 42px !default;\n$mat-stepper-header-maximum-height: $mat-stepper-header-height !default;\n\n$mat-stepper-density-config: (\n  height: (\n    default: $mat-stepper-header-height,\n    maximum: $mat-stepper-header-maximum-height,\n    minimum: $mat-stepper-header-minimum-height,\n  )\n) !default;\n\n// Note: These variables are not denoted with `!default` because they are used in the non-theme\n// component styles. Modifying these variables does not have the desired effect for consumers.\n$mat-stepper-label-header-height: 24px;\n$mat-stepper-label-position-bottom-top-gap: 16px;\n$mat-stepper-label-min-width: 50px;\n\n$mat-vertical-stepper-content-margin: 36px;\n\n$mat-stepper-side-gap: 24px;\n$mat-stepper-line-width: 1px;\n$mat-stepper-line-gap: 8px;\n\n$mat-step-sub-label-font-size: 12px;\n$mat-step-header-icon-size: 16px;\n\n\n@mixin mat-stepper-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $foreground: map-get($config, foreground);\n  $background: map-get($config, background);\n  $primary: map-get($config, primary);\n  $accent: map-get($config, accent);\n  $warn: map-get($config, warn);\n\n  .mat-step-header {\n    &.cdk-keyboard-focused,\n    &.cdk-program-focused,\n    &:hover {\n      background-color: mat-color($background, hover);\n    }\n\n    // On touch devices the :hover state will linger on the element after a tap.\n    // Reset it via `@media` after the declaration, because the media query isn't\n    // supported by all browsers yet.\n    @media (hover: none) {\n      &:hover {\n        background: none;\n      }\n    }\n\n    .mat-step-label,\n    .mat-step-optional {\n      // TODO(josephperrott): Update to using a corrected disabled-text contrast\n      // instead of secondary-text.\n      color: mat-color($foreground, secondary-text);\n    }\n\n    .mat-step-icon {\n      // TODO(josephperrott): Update to using a corrected disabled-text contrast\n      // instead of secondary-text.\n      background-color: mat-color($foreground, secondary-text);\n      color: mat-color($primary, default-contrast);\n    }\n\n    .mat-step-icon-selected,\n    .mat-step-icon-state-done,\n    .mat-step-icon-state-edit {\n      background-color: mat-color($primary);\n      color: mat-color($primary, default-contrast);\n    }\n\n    &.mat-accent {\n      .mat-step-icon {\n        color: mat-color($accent, default-contrast);\n      }\n\n      .mat-step-icon-selected,\n      .mat-step-icon-state-done,\n      .mat-step-icon-state-edit {\n        background-color: mat-color($accent);\n        color: mat-color($accent, default-contrast);\n      }\n    }\n\n    &.mat-warn {\n      .mat-step-icon {\n        color: mat-color($warn, default-contrast);\n      }\n\n      .mat-step-icon-selected,\n      .mat-step-icon-state-done,\n      .mat-step-icon-state-edit {\n        background-color: mat-color($warn);\n        color: mat-color($warn, default-contrast);\n      }\n    }\n\n    .mat-step-icon-state-error {\n      background-color: transparent;\n      color: mat-color($warn, text);\n    }\n\n    .mat-step-label.mat-step-label-active {\n      color: mat-color($foreground, text);\n    }\n\n    .mat-step-label.mat-step-label-error {\n      color: mat-color($warn, text);\n    }\n  }\n\n  .mat-stepper-horizontal, .mat-stepper-vertical {\n    background-color: mat-color($background, card);\n  }\n\n  .mat-stepper-vertical-line::before {\n    border-left-color: mat-color($foreground, divider);\n  }\n\n  .mat-horizontal-stepper-header::before,\n  .mat-horizontal-stepper-header::after,\n  .mat-stepper-horizontal-line {\n    border-top-color: mat-color($foreground, divider);\n  }\n}\n\n@mixin mat-stepper-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-stepper-vertical, .mat-stepper-horizontal {\n    font-family: mat-font-family($config);\n  }\n\n  .mat-step-label {\n    font: {\n      size: mat-font-size($config, body-1);\n      weight: mat-font-weight($config, body-1);\n    };\n  }\n\n  .mat-step-sub-label-error {\n    font-weight: normal;\n  }\n\n  .mat-step-label-error {\n    font-size: mat-font-size($config, body-2);\n  }\n\n  .mat-step-label-selected {\n    font: {\n      size: mat-font-size($config, body-2);\n      weight: mat-font-weight($config, body-2);\n    };\n  }\n}\n\n@mixin _mat-stepper-density($config-or-theme) {\n  $density-scale: mat-get-density-config($config-or-theme);\n  $height: _mat-density-prop-value($mat-stepper-density-config, $density-scale, height);\n  $vertical-padding: ($height - $mat-stepper-label-header-height) / 2;\n\n  @include _mat-density-legacy-compatibility() {\n    .mat-horizontal-stepper-header {\n      height: $height;\n    }\n\n    .mat-stepper-label-position-bottom .mat-horizontal-stepper-header,\n    .mat-vertical-stepper-header {\n      padding: $vertical-padding $mat-stepper-side-gap;\n    }\n\n    // Ensures that the vertical lines for the step content exceed into the step\n    // headers with a given distance (`$mat-stepper-line-gap`) to the step icon.\n    .mat-stepper-vertical-line::before {\n      top: $mat-stepper-line-gap - $vertical-padding;\n      bottom: $mat-stepper-line-gap - $vertical-padding;\n    }\n\n    // Ensures that the horizontal lines for the step header are centered vertically.\n    .mat-stepper-label-position-bottom .mat-horizontal-stepper-header {\n      &::after, &::before {\n        top: $vertical-padding + $mat-stepper-label-header-height / 2;\n      }\n    }\n\n    // Ensures that the horizontal line for the step content is aligned centered vertically.\n    .mat-stepper-label-position-bottom .mat-stepper-horizontal-line {\n      top: $vertical-padding + $mat-stepper-label-header-height / 2;\n    }\n  }\n}\n\n@mixin mat-stepper-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-stepper') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-stepper-color($color);\n    }\n    @if $density != null {\n      @include _mat-stepper-density($density);\n    }\n    @if $typography != null {\n      @include mat-stepper-typography($typography);\n    }\n  }\n}\n\n\n\n\n@mixin mat-sort-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n\n  .mat-sort-header-arrow {\n    $table-background: mat-color($background, 'card');\n    $text-color: mat-color($foreground, secondary-text);\n\n    // Because the arrow is made up of multiple elements that are stacked on top of each other,\n    // we can't use the semi-transparent color from the theme directly. If the value is a color\n    // *type*, we convert it into a solid color by taking the opacity from the rgba value and\n    // using the value to determine the percentage of the background to put into foreground\n    // when mixing the colors together. Otherwise, if it resolves to something different\n    // (e.g. it resolves to a CSS variable), we use the color directly.\n    @if (type-of($table-background) == color and type-of($text-color) == color) {\n      $text-opacity: opacity($text-color);\n      color: mix($table-background, rgba($text-color, 1), (1 - $text-opacity) * 100%);\n    }\n    @else {\n      color: $text-color;\n    }\n  }\n}\n\n@mixin mat-sort-typography($config-or-theme) {}\n\n@mixin _mat-sort-density($config-or-theme) {}\n\n@mixin mat-sort-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-sort') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-sort-color($color);\n    }\n    @if $density != null {\n      @include _mat-sort-density($density);\n    }\n    @if $typography != null {\n      @include mat-sort-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n@mixin mat-tabs-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $primary: map-get($config, primary);\n  $accent: map-get($config, accent);\n  $warn: map-get($config, warn);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n  $header-border: 1px solid mat-color($foreground, divider);\n\n  .mat-tab-nav-bar,\n  .mat-tab-header {\n    border-bottom: $header-border;\n  }\n\n  .mat-tab-group-inverted-header {\n    .mat-tab-nav-bar,\n    .mat-tab-header {\n      border-top: $header-border;\n      border-bottom: none;\n    }\n  }\n\n  .mat-tab-label, .mat-tab-link {\n    color: mat-color($foreground, text);\n\n    &.mat-tab-disabled {\n      color: mat-color($foreground, disabled-text);\n    }\n  }\n\n  .mat-tab-header-pagination-chevron {\n    border-color: mat-color($foreground, text);\n  }\n\n  .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron {\n    border-color: mat-color($foreground, disabled-text);\n  }\n\n  // Remove header border when there is a background color\n  .mat-tab-group[class*='mat-background-'] .mat-tab-header,\n  .mat-tab-nav-bar[class*='mat-background-'] {\n    border-bottom: none;\n    border-top: none;\n  }\n\n  .mat-tab-group, .mat-tab-nav-bar {\n    $theme-colors: (\n      primary: $primary,\n      accent: $accent,\n      warn: $warn\n    );\n\n    @each $name, $color in $theme-colors {\n      // Set the foreground color of the tabs\n      &.mat-#{$name} {\n        @include _mat-tab-label-focus($color);\n        @include _mat-ink-bar($color);\n\n        // Override ink bar when background color is the same\n        &.mat-background-#{$name} {\n          @include _mat-ink-bar($color, default-contrast);\n        }\n      }\n    }\n\n    @each $name, $color in $theme-colors {\n      // Set background color of the tabs and override focus color\n      &.mat-background-#{$name} {\n        @include _mat-tab-label-focus($color);\n        @include _mat-tabs-background($color);\n      }\n    }\n  }\n}\n\n@mixin _mat-ink-bar($color, $hue: default) {\n  .mat-ink-bar {\n    background-color: mat-color($color, $hue);\n  }\n}\n\n@mixin _mat-tab-label-focus($tab-focus-color) {\n  .mat-tab-label,\n  .mat-tab-link {\n    &.cdk-keyboard-focused,\n    &.cdk-program-focused {\n      &:not(.mat-tab-disabled) {\n        background-color: mat-color($tab-focus-color, lighter, 0.3);\n      }\n    }\n  }\n}\n\n@mixin _mat-tabs-background($background-color) {\n  // Set background color for the tab group\n  .mat-tab-header, .mat-tab-links, .mat-tab-header-pagination {\n    background-color: mat-color($background-color);\n  }\n\n  // Set labels to contrast against background\n  .mat-tab-label, .mat-tab-link {\n    color: mat-color($background-color, default-contrast);\n\n    &.mat-tab-disabled {\n      color: mat-color($background-color, default-contrast, 0.4);\n    }\n  }\n\n  // Set pagination chevrons to contrast background\n  .mat-tab-header-pagination-chevron {\n    border-color: mat-color($background-color, default-contrast);\n  }\n\n  .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron {\n    border-color: mat-color($background-color, default-contrast, 0.4);\n  }\n\n  // Set ripples color to be the contrast color of the new background. Otherwise the ripple\n  // color will be based on the app background color.\n  .mat-ripple-element {\n    background-color: mat-color($background-color, default-contrast, 0.12);\n  }\n}\n\n@mixin mat-tabs-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-tab-group {\n    font-family: mat-font-family($config);\n  }\n\n  .mat-tab-label, .mat-tab-link {\n    font: {\n      family: mat-font-family($config, button);\n      size: mat-font-size($config, button);\n      weight: mat-font-weight($config, button);\n    }\n  }\n}\n\n@mixin _mat-tabs-density($config-or-theme) {}\n\n@mixin mat-tabs-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-tabs') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-tabs-color($color);\n    }\n    @if $density != null {\n      @include _mat-tabs-density($density);\n    }\n    @if $typography != null {\n      @include mat-tabs-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n\n// Minimum height for toolbar's in the highest density is difficult to determine because\n// developers can project arbitrary content. We use a minimum value that ensures that most\n// common content (e.g. icon buttons) does not exceed the row boundaries in highest density.\n$mat-toolbar-minimum-height: 44px !default;\n\n$mat-toolbar-height-desktop: 64px !default;\n$mat-toolbar-maximum-height-desktop: $mat-toolbar-height-desktop !default;\n$mat-toolbar-minimum-height-desktop: $mat-toolbar-minimum-height !default;\n\n$mat-toolbar-height-mobile: 56px !default;\n$mat-toolbar-maximum-height-mobile: $mat-toolbar-height-mobile !default;\n$mat-toolbar-minimum-height-mobile: $mat-toolbar-minimum-height !default;\n\n$mat-toolbar-desktop-density-config: (\n  height: (\n    default: $mat-toolbar-height-desktop,\n    maximum: $mat-toolbar-maximum-height-desktop,\n    minimum: $mat-toolbar-minimum-height-desktop,\n  )\n) !default;\n\n$mat-toolbar-mobile-density-config: (\n  height: (\n    default: $mat-toolbar-height-mobile,\n    maximum: $mat-toolbar-maximum-height-mobile,\n    minimum: $mat-toolbar-minimum-height-mobile,\n  )\n) !default;\n\n\n@mixin _mat-toolbar-height($height) {\n  .mat-toolbar-multiple-rows {\n    min-height: $height;\n  }\n  .mat-toolbar-row, .mat-toolbar-single-row {\n    height: $height;\n  }\n}\n\n@mixin _mat-toolbar-color($palette) {\n  background: mat-color($palette);\n  color: mat-color($palette, default-contrast);\n}\n\n@mixin _mat-toolbar-form-field-overrides {\n  .mat-form-field-underline,\n  .mat-form-field-ripple,\n  .mat-focused .mat-form-field-ripple {\n    background-color: currentColor;\n  }\n\n  .mat-form-field-label,\n  .mat-focused .mat-form-field-label,\n  .mat-select-value,\n  .mat-select-arrow,\n  .mat-form-field.mat-focused .mat-select-arrow {\n    color: inherit;\n  }\n\n  .mat-input-element {\n    caret-color: currentColor;\n  }\n}\n\n@mixin mat-toolbar-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $primary: map-get($config, primary);\n  $accent: map-get($config, accent);\n  $warn: map-get($config, warn);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n\n  .mat-toolbar {\n    background: mat-color($background, app-bar);\n    color: mat-color($foreground, text);\n\n    &.mat-primary {\n      @include _mat-toolbar-color($primary);\n    }\n\n    &.mat-accent {\n      @include _mat-toolbar-color($accent);\n    }\n\n    &.mat-warn {\n      @include _mat-toolbar-color($warn);\n    }\n\n    @include _mat-toolbar-form-field-overrides;\n  }\n}\n\n@mixin mat-toolbar-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-toolbar,\n  .mat-toolbar h1,\n  .mat-toolbar h2,\n  .mat-toolbar h3,\n  .mat-toolbar h4,\n  .mat-toolbar h5,\n  .mat-toolbar h6 {\n    @include mat-typography-level-to-styles($config, title);\n    margin: 0;\n  }\n}\n\n@mixin _mat-toolbar-density($config-or-theme) {\n  $density-scale: mat-get-density-config($config-or-theme);\n  $height-desktop: _mat-density-prop-value(\n      $mat-toolbar-desktop-density-config, $density-scale, height);\n  $height-mobile: _mat-density-prop-value(\n      $mat-toolbar-mobile-density-config, $density-scale, height);\n\n  @include _mat-density-legacy-compatibility() {\n    // Set the default height for the toolbar.\n    @include _mat-toolbar-height($height-desktop);\n\n    // As per specs, toolbars should have a different height in mobile devices. This has been\n    // specified in the old guidelines and is still observable in the new specifications by\n    // looking at the spec images. See: https://material.io/design/components/app-bars-top.html#anatomy\n    @media ($mat-xsmall) {\n      @include _mat-toolbar-height($height-mobile);\n    }\n  }\n}\n\n@mixin mat-toolbar-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-toolbar') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-toolbar-color($color);\n    }\n    @if $density != null {\n      @include _mat-toolbar-density($density);\n    }\n    @if $typography != null {\n      @include mat-toolbar-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n$mat-tooltip-target-height: 22px;\n$mat-tooltip-font-size: 10px;\n$mat-tooltip-vertical-padding: ($mat-tooltip-target-height - $mat-tooltip-font-size) / 2;\n\n$mat-tooltip-handset-target-height: 30px;\n$mat-tooltip-handset-font-size: 14px;\n$mat-tooltip-handset-vertical-padding:\n    ($mat-tooltip-handset-target-height - $mat-tooltip-handset-font-size) / 2;\n\n@mixin mat-tooltip-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $background: map-get($config, background);\n\n  .mat-tooltip {\n    background: mat-color($background, tooltip, 0.9);\n  }\n}\n\n@mixin mat-tooltip-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-tooltip {\n    font-family: mat-font-family($config);\n    font-size: $mat-tooltip-font-size;\n    padding-top: $mat-tooltip-vertical-padding;\n    padding-bottom: $mat-tooltip-vertical-padding;\n  }\n\n  .mat-tooltip-handset {\n    font-size: $mat-tooltip-handset-font-size;\n    padding-top: $mat-tooltip-handset-vertical-padding;\n    padding-bottom: $mat-tooltip-handset-vertical-padding;\n  }\n}\n\n@mixin _mat-tooltip-density($config-or-theme) {}\n\n@mixin mat-tooltip-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-tooltip') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-tooltip-color($color);\n    }\n    @if $density != null {\n      @include _mat-tooltip-density($density);\n    }\n    @if $typography != null {\n      @include mat-tooltip-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n\n\n@mixin mat-snack-bar-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $is-dark-theme: map-get($config, is-dark);\n  $accent: map-get($config, accent);\n\n  .mat-snack-bar-container {\n    // Use the primary text on the dark theme, even though the lighter one uses\n    // a secondary, because the contrast on the light primary text is poor.\n    color: if($is-dark-theme, $dark-primary-text, $light-secondary-text);\n    background: if($is-dark-theme, map-get($mat-grey, 50), #323232);\n\n    @include _mat-theme-elevation(6, $config);\n  }\n\n  .mat-simple-snackbar-action {\n    color: if($is-dark-theme, inherit, mat-color($accent, text));\n  }\n}\n\n@mixin mat-snack-bar-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-simple-snackbar {\n    font: {\n      family: mat-font-family($config, body-1);\n      size: mat-font-size($config, body-1);\n    }\n  }\n\n  .mat-simple-snackbar-action {\n    line-height: 1;\n    font: {\n      family: inherit;\n      size: inherit;\n      weight: mat-font-weight($config, button);\n    }\n  }\n}\n\n@mixin _mat-snack-bar-density($config-or-theme) {}\n\n@mixin mat-snack-bar-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-snack-bar') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-snack-bar-color($color);\n    }\n    @if $density != null {\n      @include _mat-snack-bar-density($density);\n    }\n    @if $typography != null {\n      @include mat-snack-bar-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// Theme styles that only apply to the fill appearance of the form-field.\n\n@mixin mat-form-field-fill-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $foreground: map-get($config, foreground);\n  $is-dark-theme: map-get($config, is-dark);\n\n  $fill-background: mat-color($foreground, base, if($is-dark-theme, 0.1, 0.04));\n  $fill-disabled-background: mat-color($foreground, base, if($is-dark-theme, 0.05, 0.02));\n  $underline-color: mat-color($foreground, divider, if($is-dark-theme, 0.5, 0.42));\n  $label-disabled-color: mat-color($foreground, disabled-text);\n\n  .mat-form-field-appearance-fill {\n    .mat-form-field-flex {\n      background-color: $fill-background;\n    }\n\n    &.mat-form-field-disabled .mat-form-field-flex {\n      background-color: $fill-disabled-background;\n    }\n\n    .mat-form-field-underline::before {\n      background-color: $underline-color;\n    }\n\n    &.mat-form-field-disabled {\n      .mat-form-field-label {\n        color: $label-disabled-color;\n      }\n\n      .mat-form-field-underline::before {\n        background-color: transparent;\n      }\n    }\n  }\n}\n\n// Used to make instances of the _mat-form-field-label-floating mixin negligibly different,\n// and prevent Google's CSS Optimizer from collapsing the declarations. This is needed because some\n// of the selectors contain pseudo-classes not recognized in all browsers. If a browser encounters\n// an unknown pseudo-class it will discard the entire rule set.\n$mat-form-field-fill-dedupe: 0;\n\n// Applies a floating label above the form field control itself.\n@mixin _mat-form-field-fill-label-floating($font-scale, $infix-padding, $infix-margin-top) {\n  transform: translateY(-$infix-margin-top - $infix-padding + $mat-form-field-fill-dedupe)\n             scale($font-scale);\n  width: 100% / $font-scale + $mat-form-field-fill-dedupe;\n\n  $mat-form-field-fill-dedupe: $mat-form-field-fill-dedupe + 0.00001 !global;\n}\n\n@mixin mat-form-field-fill-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  // The unit-less line-height from the font config.\n  $line-height: mat-line-height($config, input);\n  // The amount to scale the font for the floating label and subscript.\n  $subscript-font-scale: 0.75;\n  // The padding on top of the infix.\n  $infix-padding-top: 0.25em;\n  // The padding below the infix.\n  $infix-padding-bottom: 0.75em;\n  // The margin applied to the form-field-infix to reserve space for the floating label.\n  $infix-margin-top: 1em * $line-height * $subscript-font-scale;\n  // The amount we offset the label from the input text in the fill appearance.\n  $fill-appearance-label-offset: -0.5em;\n\n  .mat-form-field-appearance-fill {\n    .mat-form-field-infix {\n      padding: $infix-padding-top 0 $infix-padding-bottom 0;\n    }\n\n    .mat-form-field-label {\n      top: $infix-margin-top + $infix-padding-top;\n      margin-top: $fill-appearance-label-offset;\n    }\n\n    &.mat-form-field-can-float {\n      &.mat-form-field-should-float .mat-form-field-label,\n      .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n        @include _mat-form-field-fill-label-floating(\n                $subscript-font-scale, $infix-padding-top + $fill-appearance-label-offset,\n                $infix-margin-top);\n      }\n\n      // Server-side rendered matInput with a label attribute but label not shown\n      // (used as a pure CSS stand-in for mat-form-field-should-float).\n      .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\n      .mat-form-field-label {\n        @include _mat-form-field-fill-label-floating(\n                $subscript-font-scale, $infix-padding-top + $fill-appearance-label-offset,\n                $infix-margin-top);\n      }\n    }\n  }\n}\n\n@mixin _mat-form-field-fill-density($config-or-theme) {}\n\n@mixin mat-form-field-fill-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-form-field-fill') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-form-field-fill-color($color);\n    }\n    @if $density != null {\n      @include _mat-form-field-fill-density($density);\n    }\n    @if $typography != null {\n      @include mat-form-field-fill-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n\n\n// Theme styles that only apply to the legacy appearance of the form-field.\n\n@mixin mat-form-field-legacy-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $foreground: map-get($config, foreground);\n  $is-dark-theme: map-get($config, is-dark);\n\n  $label-color: mat-color($foreground, secondary-text);\n  $underline-color: mat-color($foreground, divider, if($is-dark-theme, 0.7, 0.42));\n\n  .mat-form-field-appearance-legacy {\n    .mat-form-field-label {\n      color: $label-color;\n    }\n\n    .mat-hint {\n      color: $label-color;\n    }\n\n    .mat-form-field-underline {\n      background-color: $underline-color;\n    }\n\n    &.mat-form-field-disabled .mat-form-field-underline {\n      @include mat-control-disabled-underline($underline-color);\n    }\n  }\n}\n\n// Used to make instances of the _mat-form-field-label-floating mixin negligibly different,\n// and prevent Google's CSS Optimizer from collapsing the declarations. This is needed because some\n// of the selectors contain pseudo-classes not recognized in all browsers. If a browser encounters\n// an unknown pseudo-class it will discard the entire rule set.\n$mat-form-field-legacy-dedupe: 0;\n\n// Applies a floating label above the form field control itself.\n@mixin _mat-form-field-legacy-label-floating($font-scale, $infix-padding, $infix-margin-top) {\n  // We use perspective to fix the text blurriness as described here:\n  // http://www.useragentman.com/blog/2014/05/04/fixing-typography-inside-of-2-d-css-transforms/\n  // This results in a small jitter after the label floats on Firefox, which the\n  // translateZ fixes.\n  transform: translateY(-$infix-margin-top - $infix-padding) scale($font-scale) perspective(100px)\n  translateZ(0.001px + $mat-form-field-legacy-dedupe);\n  // The tricks above used to smooth out the animation on chrome and firefox actually make things\n  // worse on IE, so we don't include them in the IE version.\n  -ms-transform: translateY(-$infix-margin-top - $infix-padding + $mat-form-field-legacy-dedupe)\n                  scale($font-scale);\n\n  width: 100% / $font-scale + $mat-form-field-legacy-dedupe;\n\n  $mat-form-field-legacy-dedupe: $mat-form-field-legacy-dedupe + 0.00001 !global;\n}\n\n// Same as mixin above, but omits the translateZ for printing purposes.\n@mixin _mat-form-field-legacy-label-floating-print($font-scale, $infix-padding, $infix-margin-top) {\n  // This results in a small jitter after the label floats on Firefox, which the\n  // translateZ fixes.\n  transform: translateY(-$infix-margin-top - $infix-padding + $mat-form-field-legacy-dedupe)\n                  scale($font-scale);\n  // The tricks above used to smooth out the animation on chrome and firefox actually make things\n  // worse on IE, so we don't include them in the IE version.\n  $mat-form-field-legacy-dedupe: $mat-form-field-legacy-dedupe + 0.00001 !global;\n}\n\n@mixin mat-form-field-legacy-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  // The unit-less line-height from the font config.\n  $line-height: mat-line-height($config, input);\n  // The amount to scale the font for the floating label and subscript.\n  $subscript-font-scale: 0.75;\n  // The amount of space between the top of the line and the top of the actual text\n  // (as a fraction of the font-size).\n  $line-spacing: ($line-height - 1) / 2;\n  // The padding on the infix. Mocks show half of the text size, but seem to measure from the edge\n  // of the text itself, not the edge of the line; therefore we subtract off the line spacing.\n  $infix-padding: 0.5em - $line-spacing;\n  // The margin applied to the form-field-infix to reserve space for the floating label.\n  $infix-margin-top: 1em * $line-height * $subscript-font-scale;\n  // The space between the bottom of the .mat-form-field-flex area and the subscript wrapper.\n  // Mocks show half of the text size, but this margin is applied to an element with the subscript\n  // text font size, so we need to divide by the scale factor to make it half of the original text\n  // size. We again need to subtract off the line spacing since the mocks measure to the edge of the\n  // text, not the  edge of the line.\n  $subscript-margin-top: 0.5em / $subscript-font-scale - ($line-spacing * 2);\n  // The padding applied to the form-field-wrapper to reserve space for the subscript, since it's\n  // absolutely positioned. This is a combination of the subscript's margin and line-height, but we\n  // need to multiply by the subscript font scale factor since the wrapper has a larger font size.\n  $wrapper-padding-bottom: ($subscript-margin-top + $line-height) * $subscript-font-scale;\n\n  .mat-form-field-appearance-legacy {\n    .mat-form-field-wrapper {\n      padding-bottom: $wrapper-padding-bottom;\n    }\n\n    .mat-form-field-infix {\n      padding: $infix-padding 0;\n    }\n\n    &.mat-form-field-can-float {\n      &.mat-form-field-should-float .mat-form-field-label,\n      .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n        @include _mat-form-field-legacy-label-floating(\n                $subscript-font-scale, $infix-padding, $infix-margin-top);\n      }\n\n      // @breaking-change 8.0.0 will rely on AutofillMonitor instead.\n      .mat-form-field-autofill-control:-webkit-autofill + .mat-form-field-label-wrapper\n      .mat-form-field-label {\n        @include _mat-form-field-legacy-label-floating(\n                $subscript-font-scale, $infix-padding, $infix-margin-top);\n      }\n\n      // Server-side rendered matInput with a label attribute but label not shown\n      // (used as a pure CSS stand-in for mat-form-field-should-float).\n      .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\n      .mat-form-field-label {\n        @include _mat-form-field-legacy-label-floating(\n                $subscript-font-scale, $infix-padding, $infix-margin-top);\n      }\n    }\n\n    .mat-form-field-label {\n      top: $infix-margin-top + $infix-padding;\n    }\n\n    .mat-form-field-underline {\n      // We want the underline to start at the end of the content box, not the padding box,\n      // so we move it up by the padding amount.\n      bottom: $wrapper-padding-bottom;\n    }\n\n    .mat-form-field-subscript-wrapper {\n      margin-top: $subscript-margin-top;\n\n      // We want the subscript to start at the end of the content box, not the padding box,\n      // so we move it up by the padding amount (adjusted for the smaller font size);\n      top: calc(100% - #{$wrapper-padding-bottom / $subscript-font-scale});\n    }\n  }\n\n  // translateZ causes the label to not appear while printing, so we override it to not\n  // apply translateZ while printing\n  @media print {\n    .mat-form-field-appearance-legacy {\n      &.mat-form-field-can-float {\n        &.mat-form-field-should-float .mat-form-field-label,\n        .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n          @include _mat-form-field-legacy-label-floating-print(\n                  $subscript-font-scale, $infix-padding, $infix-margin-top);\n        }\n\n        // @breaking-change 8.0.0 will rely on AutofillMonitor instead.\n        .mat-form-field-autofill-control:-webkit-autofill + .mat-form-field-label-wrapper\n        .mat-form-field-label {\n          @include _mat-form-field-legacy-label-floating-print(\n                  $subscript-font-scale, $infix-padding, $infix-margin-top);\n        }\n\n        // Server-side rendered matInput with a label attribute but label not shown\n        // (used as a pure CSS stand-in for mat-form-field-should-float).\n        .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\n        .mat-form-field-label {\n          @include _mat-form-field-legacy-label-floating-print(\n                  $subscript-font-scale, $infix-padding, $infix-margin-top);\n        }\n      }\n    }\n  }\n}\n\n@mixin _mat-form-field-legacy-density($config-or-theme) {}\n\n@mixin mat-form-field-legacy-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-form-field-legacy') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-form-field-legacy-color($color);\n    }\n    @if $density != null {\n      @include _mat-form-field-legacy-density($density);\n    }\n    @if $typography != null {\n      @include mat-form-field-legacy-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n\n\n// Theme styles that only apply to the outline appearance of the form-field.\n\n@mixin mat-form-field-outline-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $primary: map-get($config, primary);\n  $accent: map-get($config, accent);\n  $warn: map-get($config, warn);\n  $foreground: map-get($config, foreground);\n  $is-dark-theme: map-get($config, is-dark);\n\n  $label-disabled-color: mat-color($foreground, disabled-text);\n  $outline-color: mat-color($foreground, divider, if($is-dark-theme, 0.3, 0.12));\n  $outline-color-hover: mat-color($foreground, divider, if($is-dark-theme, 1, 0.87));\n  $outline-color-primary: mat-color($primary);\n  $outline-color-accent: mat-color($accent);\n  $outline-color-warn: mat-color($warn);\n  $outline-color-disabled: mat-color($foreground, divider, if($is-dark-theme, 0.15, 0.06));\n\n  .mat-form-field-appearance-outline {\n    .mat-form-field-outline {\n      color: $outline-color;\n    }\n\n    .mat-form-field-outline-thick {\n      color: $outline-color-hover;\n    }\n\n    &.mat-focused {\n      .mat-form-field-outline-thick {\n        color: $outline-color-primary;\n      }\n\n      &.mat-accent .mat-form-field-outline-thick {\n        color: $outline-color-accent;\n      }\n\n      &.mat-warn .mat-form-field-outline-thick {\n        color: $outline-color-warn;\n      }\n    }\n\n    // Class repeated so that rule is specific enough to override focused accent color case.\n    &.mat-form-field-invalid.mat-form-field-invalid {\n      .mat-form-field-outline-thick {\n        color: $outline-color-warn;\n      }\n    }\n\n    &.mat-form-field-disabled {\n      .mat-form-field-label {\n        color: $label-disabled-color;\n      }\n\n      .mat-form-field-outline {\n        color: $outline-color-disabled;\n      }\n    }\n  }\n}\n\n// Used to make instances of the _mat-form-field-label-floating mixin negligibly different,\n// and prevent Google's CSS Optimizer from collapsing the declarations. This is needed because some\n// of the selectors contain pseudo-classes not recognized in all browsers. If a browser encounters\n// an unknown pseudo-class it will discard the entire rule set.\n$mat-form-field-outline-dedupe: 0;\n\n// Applies a floating label above the form field control itself.\n@mixin _mat-form-field-outline-label-floating($font-scale, $infix-padding, $infix-margin-top) {\n  transform: translateY(-$infix-margin-top - $infix-padding + $mat-form-field-outline-dedupe)\n  scale($font-scale);\n  width: 100% / $font-scale + $mat-form-field-outline-dedupe;\n\n  $mat-form-field-outline-dedupe: $mat-form-field-outline-dedupe + 0.00001 !global;\n}\n\n@mixin mat-form-field-outline-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  // The unit-less line-height from the font config.\n  $line-height: mat-line-height($config, input);\n  // The amount to scale the font for the floating label and subscript.\n  $subscript-font-scale: 0.75;\n  // The padding above and below the infix.\n  $infix-padding: 1em;\n  // The margin applied to the form-field-infix to reserve space for the floating label.\n  $infix-margin-top: 1em * $line-height * $subscript-font-scale;\n  // The space between the bottom of the .mat-form-field-flex area and the subscript wrapper.\n  // Mocks show half of the text size, but this margin is applied to an element with the subscript\n  // text font size, so we need to divide by the scale factor to make it half of the original text\n  // size.\n  $subscript-margin-top: 0.5em / $subscript-font-scale;\n  // The padding applied to the form-field-wrapper to reserve space for the subscript, since it's\n  // absolutely positioned. This is a combination of the subscript's margin and line-height, but we\n  // need to multiply by the subscript font scale factor since the wrapper has a larger font size.\n  $wrapper-padding-bottom: ($subscript-margin-top + $line-height) * $subscript-font-scale;\n  // The amount we offset the label from the input text in the outline appearance.\n  $outline-appearance-label-offset: -0.25em;\n\n  .mat-form-field-appearance-outline {\n    .mat-form-field-infix {\n      padding: $infix-padding 0 $infix-padding 0;\n    }\n\n    .mat-form-field-label {\n      top: $infix-margin-top + $infix-padding;\n      margin-top: $outline-appearance-label-offset;\n    }\n\n    &.mat-form-field-can-float {\n      &.mat-form-field-should-float .mat-form-field-label,\n      .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n        @include _mat-form-field-outline-label-floating(\n                $subscript-font-scale, $infix-padding + $outline-appearance-label-offset,\n                $infix-margin-top);\n      }\n\n      // Server-side rendered matInput with a label attribute but label not shown\n      // (used as a pure CSS stand-in for mat-form-field-should-float).\n      .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\n      .mat-form-field-label {\n        @include _mat-form-field-outline-label-floating(\n                $subscript-font-scale, $infix-padding + $outline-appearance-label-offset,\n                $infix-margin-top);\n      }\n    }\n  }\n}\n\n@mixin _mat-form-field-outline-density($config-or-theme) {}\n\n@mixin mat-form-field-outline-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-form-field-outline') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-form-field-outline-color($color);\n    }\n    @if $density != null {\n      @include _mat-form-field-outline-density($density);\n    }\n    @if $typography != null {\n      @include mat-form-field-outline-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n\n\n\n// Theme styles that only apply to the standard appearance of the form-field.\n\n@mixin mat-form-field-standard-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $foreground: map-get($config, foreground);\n  $is-dark-theme: map-get($config, is-dark);\n\n  $underline-color: mat-color($foreground, divider, if($is-dark-theme, 0.7, 0.42));\n\n  .mat-form-field-appearance-standard {\n    .mat-form-field-underline {\n      background-color: $underline-color;\n    }\n\n    &.mat-form-field-disabled .mat-form-field-underline {\n      @include mat-control-disabled-underline($underline-color);\n    }\n  }\n}\n\n@mixin mat-form-field-standard-typography($config-or-theme) {}\n\n@mixin _mat-form-field-standard-density($config-or-theme) {}\n\n@mixin mat-form-field-standard-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-form-field-standard') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-form-field-standard-color($color);\n    }\n    @if $density != null {\n      @include _mat-form-field-standard-density($density);\n    }\n    @if $typography != null {\n      @include mat-form-field-standard-typography($typography);\n    }\n  }\n}\n\n\n// Color styles that apply to all appearances of the form-field.\n@mixin mat-form-field-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $primary: map-get($config, primary);\n  $accent: map-get($config, accent);\n  $warn: map-get($config, warn);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n  $is-dark-theme: map-get($config, is-dark);\n\n  // Label colors. Required is used for the `*` star shown in the label.\n  $label-color: mat-color($foreground, secondary-text, if($is-dark-theme, 0.7, 0.6));\n  $focused-label-color: mat-color($primary, text);\n  $required-label-color: mat-color($accent, text);\n\n  // Underline colors.\n  $underline-color-base: mat-color($foreground, divider, if($is-dark-theme, 1, 0.87));\n  $underline-color-accent: mat-color($accent, text);\n  $underline-color-warn: mat-color($warn, text);\n  $underline-focused-color: mat-color($primary, text);\n\n  .mat-form-field-label {\n    color: $label-color;\n  }\n\n  .mat-hint {\n    color: $label-color;\n  }\n\n  .mat-form-field.mat-focused .mat-form-field-label {\n    color: $focused-label-color;\n\n    &.mat-accent {\n      color: $underline-color-accent;\n    }\n\n    &.mat-warn {\n      color: $underline-color-warn;\n    }\n  }\n\n  .mat-focused .mat-form-field-required-marker {\n    color: $required-label-color;\n  }\n\n  .mat-form-field-ripple {\n    background-color: $underline-color-base;\n  }\n\n  .mat-form-field.mat-focused {\n    .mat-form-field-ripple {\n      background-color: $underline-focused-color;\n\n      &.mat-accent {\n        background-color: $underline-color-accent;\n      }\n\n      &.mat-warn {\n        background-color: $underline-color-warn;\n      }\n    }\n  }\n\n  .mat-form-field-type-mat-native-select.mat-focused:not(.mat-form-field-invalid) {\n    .mat-form-field-infix::after {\n      color: $underline-focused-color;\n    }\n\n    &.mat-accent .mat-form-field-infix::after {\n      color: $underline-color-accent;\n    }\n\n    &.mat-warn .mat-form-field-infix::after {\n      color: $underline-color-warn;\n    }\n  }\n\n  // Styling for the error state of the form field. Note that while the same can be\n  // achieved with the ng-* classes, we use this approach in order to ensure that the same\n  // logic is used to style the error state and to show the error messages.\n  .mat-form-field.mat-form-field-invalid {\n    .mat-form-field-label {\n      color: $underline-color-warn;\n\n      &.mat-accent,\n      .mat-form-field-required-marker {\n        color: $underline-color-warn;\n      }\n    }\n\n    .mat-form-field-ripple,\n    .mat-form-field-ripple.mat-accent {\n      background-color: $underline-color-warn;\n    }\n  }\n\n  .mat-error {\n    color: $underline-color-warn;\n  }\n\n  @include mat-form-field-legacy-color($config);\n  @include mat-form-field-standard-color($config);\n  @include mat-form-field-fill-color($config);\n  @include mat-form-field-outline-color($config);\n}\n\n// Used to make instances of the _mat-form-field-label-floating mixin negligibly different,\n// and prevent Google's CSS Optimizer from collapsing the declarations. This is needed because some\n// of the selectors contain pseudo-classes not recognized in all browsers. If a browser encounters\n// an unknown pseudo-class it will discard the entire rule set.\n$mat-form-field-dedupe: 0;\n\n// Applies a floating label above the form field control itself.\n@mixin _mat-form-field-label-floating($font-scale, $infix-padding, $infix-margin-top) {\n  transform: translateY(-$infix-margin-top - $infix-padding + $mat-form-field-dedupe)\n             scale($font-scale);\n  width: 100% / $font-scale + $mat-form-field-dedupe;\n\n  $mat-form-field-dedupe: $mat-form-field-dedupe + 0.00001 !global;\n}\n\n@mixin mat-form-field-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  // The unit-less line-height from the font config.\n  $line-height: mat-line-height($config, input);\n\n  // The amount to scale the font for the floating label and subscript.\n  $subscript-font-scale: 0.75;\n  // The amount to scale the font for the prefix and suffix icons.\n  $prefix-suffix-icon-font-scale: 1.5;\n\n  // The padding on the infix. Mocks show half of the text size.\n  $infix-padding: 0.5em;\n  // The margin applied to the form-field-infix to reserve space for the floating label.\n  $infix-margin-top: 1em * $line-height * $subscript-font-scale;\n  // Font size to use for the label and subscript text.\n  $subscript-font-size: $subscript-font-scale * 100%;\n  // Font size to use for the for the prefix and suffix icons.\n  $prefix-suffix-icon-font-size: $prefix-suffix-icon-font-scale * 100%;\n  // The space between the bottom of the .mat-form-field-flex area and the subscript wrapper.\n  // Mocks show half of the text size, but this margin is applied to an element with the subscript\n  // text font size, so we need to divide by the scale factor to make it half of the original text\n  // size.\n  $subscript-margin-top: 0.5em / $subscript-font-scale;\n  // The padding applied to the form-field-wrapper to reserve space for the subscript, since it's\n  // absolutely positioned. This is a combination of the subscript's margin and line-height, but we\n  // need to multiply by the subscript font scale factor since the wrapper has a larger font size.\n  $wrapper-padding-bottom: ($subscript-margin-top + $line-height) * $subscript-font-scale;\n\n  .mat-form-field {\n    @include mat-typography-level-to-styles($config, input);\n  }\n\n  .mat-form-field-wrapper {\n    padding-bottom: $wrapper-padding-bottom;\n  }\n\n  .mat-form-field-prefix,\n  .mat-form-field-suffix {\n    // Allow icons in a prefix or suffix to adapt to the correct size.\n    .mat-icon {\n      font-size: $prefix-suffix-icon-font-size;\n      line-height: $line-height;\n    }\n\n    // Allow icon buttons in a prefix or suffix to adapt to the correct size.\n    .mat-icon-button {\n      height: $prefix-suffix-icon-font-scale * 1em;\n      width: $prefix-suffix-icon-font-scale * 1em;\n\n      .mat-icon {\n        height: $line-height * 1em;\n        line-height: $line-height;\n      }\n    }\n  }\n\n  .mat-form-field-infix {\n    padding: $infix-padding 0;\n    // Throws off the baseline if we do it as a real margin, so we do it as a border instead.\n    border-top: $infix-margin-top solid transparent;\n  }\n\n  .mat-form-field-can-float {\n    &.mat-form-field-should-float .mat-form-field-label,\n    .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n      @include _mat-form-field-label-floating(\n              $subscript-font-scale, $infix-padding, $infix-margin-top);\n    }\n\n    // Server-side rendered matInput with a label attribute but label not shown\n    // (used as a pure CSS stand-in for mat-form-field-should-float).\n    .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\n        .mat-form-field-label {\n      @include _mat-form-field-label-floating(\n              $subscript-font-scale, $infix-padding, $infix-margin-top);\n    }\n  }\n\n  .mat-form-field-label-wrapper {\n    top: -$infix-margin-top;\n    padding-top: $infix-margin-top;\n  }\n\n  .mat-form-field-label {\n    top: $infix-margin-top + $infix-padding;\n  }\n\n  .mat-form-field-underline {\n    // We want the underline to start at the end of the content box, not the padding box,\n    // so we move it up by the padding amount.\n    bottom: $wrapper-padding-bottom;\n  }\n\n  .mat-form-field-subscript-wrapper {\n    font-size: $subscript-font-size;\n    margin-top: $subscript-margin-top;\n\n    // We want the subscript to start at the end of the content box, not the padding box,\n    // so we move it up by the padding amount (adjusted for the smaller font size);\n    top: calc(100% - #{$wrapper-padding-bottom / $subscript-font-scale});\n  }\n\n  @include mat-form-field-legacy-typography($config);\n  @include mat-form-field-standard-typography($config);\n  @include mat-form-field-fill-typography($config);\n  @include mat-form-field-outline-typography($config);\n}\n\n@mixin _mat-form-field-density($config-or-theme) {\n  $density-scale: mat-get-density-config($config-or-theme);\n  @include _mat-form-field-legacy-density($density-scale);\n  @include _mat-form-field-standard-density($density-scale);\n  @include _mat-form-field-fill-density($density-scale);\n  @include _mat-form-field-outline-density($density-scale);\n}\n\n@mixin mat-form-field-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-form-field') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-form-field-color($color);\n    }\n    @if $density != null {\n      @include _mat-form-field-density($density);\n    }\n    @if $typography != null {\n      @include mat-form-field-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n$mat-tree-node-height: 48px !default;\n// Minimum height for tree nodes in highest density is difficult to determine as\n// developers can display arbitrary content. We use a minimum height which ensures\n// that common content placed in tree nodes does not exceed (e.g. icons, checkboxes).\n$mat-tree-node-minimum-height: 24px !default;\n$mat-tree-node-maximum-height: $mat-tree-node-height !default;\n\n$mat-tree-density-config: (\n  height: (\n    default: $mat-tree-node-height,\n    maximum: $mat-tree-node-maximum-height,\n    minimum: $mat-tree-node-minimum-height,\n  )\n) !default;\n\n\n@mixin mat-tree-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n\n  .mat-tree {\n    background: mat-color($background, 'card');\n  }\n\n  .mat-tree-node,\n  .mat-nested-tree-node {\n    color: mat-color($foreground, text);\n  }\n}\n\n@mixin mat-tree-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-tree {\n    font-family: mat-font-family($config);\n  }\n\n  .mat-tree-node,\n  .mat-nested-tree-node {\n    font-weight: mat-font-weight($config, body-1);\n    font-size: mat-font-size($config, body-1);\n  }\n}\n\n@mixin _mat-tree-density($config-or-theme) {\n  $density-scale: mat-get-density-config($config-or-theme);\n  $height: _mat-density-prop-value($mat-tree-density-config, $density-scale, height);\n\n  @include _mat-density-legacy-compatibility() {\n    .mat-tree-node {\n      min-height: $height;\n    }\n  }\n}\n\n@mixin mat-tree-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-tree') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-tree-color($color);\n    }\n    @if $density != null {\n      @include _mat-tree-density($density);\n    }\n    @if $typography != null {\n      @include mat-tree-typography($typography);\n    }\n  }\n}\n\n\n\n\n// Includes all of the typographic styles.\n@mixin angular-material-typography($config-or-theme: null) {\n  $config: if(_mat-is-theme-object($config-or-theme),\n      mat-get-typography-config($config-or-theme), $config-or-theme);\n\n  // If no actual color configuration has been specified, create a default one.\n  @if not $config {\n    $config: mat-typography-config();\n  }\n\n  // TODO: COMP-309: Do not use individual mixins. Instead, use the all-theme mixin and only\n  // specify a `typography` config while setting `color` and `density` to `null`. This is currently\n  // not possible as it would introduce a circular dependency for typography because the `mat-core`\n  // mixin that is transitively loaded by the `all-theme` file, imports `all-typography` which\n  // would then load `all-theme` again. This ultimately results a circular dependency.\n\n  @include mat-badge-typography($config);\n  @include mat-base-typography($config);\n  @include mat-autocomplete-typography($config);\n  @include mat-bottom-sheet-typography($config);\n  @include mat-button-typography($config);\n  @include mat-button-toggle-typography($config);\n  @include mat-card-typography($config);\n  @include mat-checkbox-typography($config);\n  @include mat-chips-typography($config);\n  @include mat-divider-typography($config);\n  @include mat-table-typography($config);\n  @include mat-datepicker-typography($config);\n  @include mat-dialog-typography($config);\n  @include mat-expansion-panel-typography($config);\n  @include mat-form-field-typography($config);\n  @include mat-grid-list-typography($config);\n  @include mat-icon-typography($config);\n  @include mat-input-typography($config);\n  @include mat-menu-typography($config);\n  @include mat-paginator-typography($config);\n  @include mat-progress-bar-typography($config);\n  @include mat-progress-spinner-typography($config);\n  @include mat-radio-typography($config);\n  @include mat-select-typography($config);\n  @include mat-sidenav-typography($config);\n  @include mat-slide-toggle-typography($config);\n  @include mat-slider-typography($config);\n  @include mat-stepper-typography($config);\n  @include mat-sort-typography($config);\n  @include mat-tabs-typography($config);\n  @include mat-toolbar-typography($config);\n  @include mat-tooltip-typography($config);\n  @include mat-list-typography($config);\n  @include mat-option-typography($config);\n  @include mat-optgroup-typography($config);\n  @include mat-snack-bar-typography($config);\n  @include mat-tree-typography($config);\n}\n\n\n// Mixin that renders all of the core styles that are not theme-dependent.\n@mixin mat-core($typography-config: null) {\n  @include angular-material-typography($typography-config);\n  @include mat-ripple();\n  @include cdk-a11y();\n  @include cdk-overlay();\n  @include cdk-text-field();\n\n  @include _mat-strong-focus-indicators-positioning();\n  @include _mat-mdc-core();\n}\n\n@mixin mat-core-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  // Wrapper element that provides the theme background when the user's content isn't\n  // inside of a `mat-sidenav-container`. Note that we need to exclude the ampersand\n  // selector in case the mixin is included at the top level.\n  .mat-app-background#{if(&, ', &.mat-app-background', '')} {\n    $background: map-get($config, background);\n    $foreground: map-get($config, foreground);\n\n    background-color: mat-color($background, background);\n    color: mat-color($foreground, text);\n  }\n\n  // Provides external CSS classes for each elevation value. Each CSS class is formatted as\n  // `mat-elevation-z$zValue` where `$zValue` corresponds to the z-space to which the element is\n  // elevated.\n  @for $zValue from 0 through 24 {\n    .#{$_mat-elevation-prefix}#{$zValue} {\n      @include _mat-theme-elevation($zValue, $config);\n    }\n  }\n\n  // Marker that is used to determine whether the user has added a theme to their page.\n  @at-root {\n    .mat-theme-loaded-marker {\n      display: none;\n    }\n  }\n}\n\n// Mixin that renders all of the core styles that depend on the theme.\n@mixin mat-core-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  // Wrap the sub-theme includes in the duplicate theme styles mixin. This ensures that\n  // there won't be multiple warnings. e.g. if `mat-core-theme` reports a warning, then\n  // the imported themes (such as `mat-ripple-theme`) should not report again.\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-core') {\n    @include mat-ripple-theme($theme);\n    @include mat-option-theme($theme);\n    @include mat-optgroup-theme($theme);\n    @include mat-pseudo-checkbox-theme($theme);\n\n    $color: mat-get-color-config($theme);\n    @if $color != null {\n      @include mat-core-color($color);\n    }\n  }\n}\n\n// Mixin that renders all of the core MDC styles. Private mixin included with `mat-core`.\n@mixin _mat-mdc-core() {\n  @include _mat-mdc-strong-focus-indicators-positioning();\n}\n\n// Mixin that ensures focus indicator host elements are positioned so that the focus indicator\n// pseudo element within is positioned relative to the host. Private mixin included within\n// `_mat-mdc-core`.\n@mixin _mat-mdc-strong-focus-indicators-positioning() {\n  .mat-mdc-focus-indicator {\n    position: relative;\n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// Create a theme.\n@mixin angular-material-theme($theme-or-color-config) {\n  @include _mat-check-duplicate-theme-styles($theme-or-color-config, 'angular-material-theme') {\n    @include mat-core-theme($theme-or-color-config);\n    @include mat-autocomplete-theme($theme-or-color-config);\n    @include mat-badge-theme($theme-or-color-config);\n    @include mat-bottom-sheet-theme($theme-or-color-config);\n    @include mat-button-theme($theme-or-color-config);\n    @include mat-button-toggle-theme($theme-or-color-config);\n    @include mat-card-theme($theme-or-color-config);\n    @include mat-checkbox-theme($theme-or-color-config);\n    @include mat-chips-theme($theme-or-color-config);\n    @include mat-table-theme($theme-or-color-config);\n    @include mat-datepicker-theme($theme-or-color-config);\n    @include mat-dialog-theme($theme-or-color-config);\n    @include mat-divider-theme($theme-or-color-config);\n    @include mat-expansion-panel-theme($theme-or-color-config);\n    @include mat-form-field-theme($theme-or-color-config);\n    @include mat-grid-list-theme($theme-or-color-config);\n    @include mat-icon-theme($theme-or-color-config);\n    @include mat-input-theme($theme-or-color-config);\n    @include mat-list-theme($theme-or-color-config);\n    @include mat-menu-theme($theme-or-color-config);\n    @include mat-paginator-theme($theme-or-color-config);\n    @include mat-progress-bar-theme($theme-or-color-config);\n    @include mat-progress-spinner-theme($theme-or-color-config);\n    @include mat-radio-theme($theme-or-color-config);\n    @include mat-select-theme($theme-or-color-config);\n    @include mat-sidenav-theme($theme-or-color-config);\n    @include mat-slide-toggle-theme($theme-or-color-config);\n    @include mat-slider-theme($theme-or-color-config);\n    @include mat-stepper-theme($theme-or-color-config);\n    @include mat-sort-theme($theme-or-color-config);\n    @include mat-tabs-theme($theme-or-color-config);\n    @include mat-toolbar-theme($theme-or-color-config);\n    @include mat-tooltip-theme($theme-or-color-config);\n    @include mat-tree-theme($theme-or-color-config);\n    @include mat-snack-bar-theme($theme-or-color-config);\n  }\n}\n\n\n// Includes all of the color styles.\n@mixin angular-material-color($config-or-theme) {\n  // In case a theme object has been passed instead of a configuration for\n  // the color system, extract the color config from the theme object.\n  $config: if(_mat-is-theme-object($config-or-theme),\n      mat-get-color-config($config-or-theme), $config-or-theme);\n\n  @if $config == null {\n    @error 'No color configuration specified.';\n  }\n\n  @include angular-material-theme((\n    color: $config,\n    typography: null,\n    density: null,\n  ));\n}\n\n\n\n// Includes all of the density styles.\n@mixin _angular-material-density($config-or-theme) {\n  // In case a theme object has been passed instead of a configuration for\n  // the density system, extract the density config from the theme object.\n  $config: if(_mat-is-theme-object($config-or-theme),\n      mat-get-density-config($config-or-theme), $config-or-theme);\n\n  @if $config == null {\n    @error 'No density configuration specified.';\n  }\n\n  @include angular-material-theme((\n    color: null,\n    typography: null,\n    density: $config,\n  ));\n}\n\n\n\n","@import '../theme-functions';\n@import '../rtl';\n\n// Standard button sizing.\n$mat-button-padding: 0 rem(0.6) !default;\n$mat-button-min-width: rem(8.8) !default;\n$mat-button-margin: rem(0.6) rem(0.8) !default;\n$mat-button-line-height: rem(3.6) !default;\n$mat-button-border-radius: 3px !default;\n\n// FAB sizing.\n$mat-fab-border-radius: 50%;\n$mat-fab-size: rem(5.6) !default;\n$mat-fab-line-height: rem(5.6) !default;\n$mat-fab-padding: rem(1.6) !default;\n$mat-fab-mini-size: rem(4) !default;\n$mat-fab-mini-line-height: rem(4) !default;\n\n// Icon button sizing.\n$mat-icon-button-height: rem(4) !default;\n$mat-icon-button-width: rem(4) !default;\n$mat-icon-button-margin: rem(0.6) !default;\n$mat-icon-border-radius: $mat-fab-border-radius;\n\n/** Mixin to create distinct classes for fab positions, e.g. \".mat-fab-position-bottom-right\". */\n@mixin mat-fab-position($spot, $top: auto, $right: auto, $bottom: auto, $left: auto) {\n  [mat-fab].mat-fab-position-#{$spot},\n  .mat-fab.mat-fab-position-#{$spot},\n  [mat-fab].mat-fab-#{$spot},\n  .mat-fab.mat-fab-#{$spot} {\n    top: $top;\n    @include rtl(right, $right, $left);\n    @include rtl(left, $left, $right);\n\n    bottom: $bottom;\n    position: absolute;\n    &.fixed {\n      position: fixed;\n    }\n  }\n}\n\n@mixin td-button-utilities() {\n  $mat-fab-pos-offset: ($mat-fab-size - $mat-fab-padding) / 2;\n  @include mat-fab-position(bottom-right, auto, $mat-fab-pos-offset, $mat-fab-pos-offset, auto);\n  @include mat-fab-position(bottom-left, auto, auto, $mat-fab-pos-offset, $mat-fab-pos-offset);\n  @include mat-fab-position(top-right, $mat-fab-pos-offset, $mat-fab-pos-offset, auto, auto);\n  @include mat-fab-position(top-left, $mat-fab-pos-offset, auto, auto, $mat-fab-pos-offset);\n\n  button {\n    &[mat-icon-button] {\n      &.mat-icon-button-mini {\n        height: 24px;\n        line-height: 24px;\n        width: 24px;\n      }\n    }\n  }\n}\n","/* stylelint-disable function-url-quotes, no-duplicate-selectors */\n\n/*\n*\n*  Responsive attributes\n*\n*  References:\n*  1) https://scotch.io/tutorials/a-visual-guide-to-css3-flexbox-properties#flex\n*  2) https://css-tricks.com/almanac/properties/f/flex/\n*  3) https://css-tricks.com/snippets/css/a-guide-to-flexbox/\n*  4) https://github.com/philipwalton/flexbugs#3-min-height-on-a-flex-container-wont-apply-to-its-flex-items\n*  5) http://godban.com.ua/projects/flexgrid\n*\n*/\n\n// Layout\n// ------------------------------\n\n$baseline-grid: 8px !default;\n$layout-gutter-width: ($baseline-grid * 2) !default;\n\n$layout-breakpoint-xs: 600px !default;\n$layout-breakpoint-sm: 960px !default;\n$layout-breakpoint-md: 1280px !default;\n$layout-breakpoint-lg: 1920px !default;\n\n@-moz-document url-prefix() {\n  [layout-fill] {\n    margin: 0;\n    width: 100%;\n    min-height: 100%;\n    height: 100%;\n  }\n}\n\n@mixin flex-order-for-name($sizes: null) {\n  @if $sizes == null {\n    $sizes: '';\n\n    [flex-order] {\n      order: 0;\n    }\n  }\n\n  @for $i from -20 through 20 {\n    $order: '';\n    $suffix: '';\n\n    @each $s in $sizes {\n      @if $s != '' {\n        $suffix: '-#{$s}=\"#{$i}\"';\n      } @else {\n        $suffix: '=\"#{$i}\"';\n      }\n\n      $order: '[flex-order#{$suffix}]';\n    }\n\n    #{$order} {\n      order: #{$i};\n    }\n  }\n}\n\n@mixin offset-for-name($sizes: null) {\n  @if $sizes == null {\n    $sizes: '';\n  }\n\n  @for $i from 0 through 19 {\n    $offsets: '';\n    $suffix: '';\n\n    @each $s in $sizes {\n      @if $s != '' {\n        $suffix: '-#{$s}=\"#{$i * 5}\"';\n      } @else {\n        $suffix: '=\"#{$i * 5}\"';\n      }\n\n      $offsets: $offsets + '[flex-offset#{$suffix}], ';\n    }\n\n    #{$offsets} {\n      margin-left: #{$i * 5 + '%'};\n    }\n  }\n\n  @each $i in 33 {\n    $offsets: '';\n    $suffix: '';\n\n    @each $s in $sizes {\n      @if $s != '' {\n        $suffix: '-#{$s}=\"#{$i}\"';\n      } @else {\n        $suffix: '=\"#{$i}\"';\n      }\n\n      $offsets: '[flex-offset#{$suffix}], ';\n    }\n\n    #{$offsets} {\n      margin-left: calc(100% / 3);\n    }\n  }\n\n  @each $i in 66 {\n    $offsets: '';\n    $suffix: '';\n\n    @each $s in $sizes {\n      @if $s != '' {\n        $suffix: '-#{$s}=\"#{$i}\"';\n      } @else {\n        $suffix: '=\"#{$i}\"';\n      }\n\n      $offsets: '[flex-offset#{$suffix}]';\n    }\n\n    #{$offsets} {\n      margin-left: calc(200% / 3);\n    }\n  }\n}\n\n@mixin layout-for-name($name: null) {\n  @if $name == null {\n    $name: '';\n  }\n  @if $name != '' {\n    $name: '-#{$name}';\n  }\n\n  [layout#{$name}],\n  [layout#{$name}='column'],\n  [layout#{$name}='row'] {\n    box-sizing: border-box;\n    display: -webkit-box;\n    display: -webkit-flex;\n    display: -moz-box;\n    display: -ms-flexbox;\n    display: flex;\n  }\n  [layout#{$name}='column'] {\n    flex-direction: column;\n  }\n  [layout#{$name}='row'] {\n    flex-direction: row;\n  }\n}\n\n@mixin flex-properties-for-name($name: null) {\n  $flexName: 'flex';\n  @if $name != null {\n    $flexName: 'flex-#{$name}';\n    $name: '-#{$name}';\n  } @else {\n    $name: '';\n  }\n\n  [#{$flexName}] {\n    flex: 1;\n    box-sizing: border-box;\n  }\n  // === flex: 1 1 0%;\n\n  // IE mediaQuery hack for 8,9,10 to set the flex-basis properly for 'flex' values\n  // Details:\n  // Do not use unitless flex-basis values in the flex shorthand because IE 10-11 will error.\n  // Also use 0% instead of 0px since minifiers will often convert 0px to 0 (which is unitless and will have the same problem).\n  // Safari, however, fails with flex-basis : 0% and requires flex-basis : 0px\n  @media screen\\0 {\n    [#{$flexName}] {\n      flex: 1 1 0%;\n    }\n  }\n\n  [#{$flexName}='grow'],\n  [#{$flexName}-grow] {\n    flex: 1 1 100%;\n    box-sizing: border-box;\n  }\n  [#{$flexName}='initial'],\n  [#{$flexName}-initial] {\n    flex: 0 1 auto;\n    box-sizing: border-box;\n  }\n  [#{$flexName}='auto'],\n  [#{$flexName}-auto] {\n    flex: 1 1 auto;\n    box-sizing: border-box;\n  }\n  [#{$flexName}='none'],\n  [#{$flexName}-none] {\n    flex: 0 0 auto;\n    box-sizing: border-box;\n  }\n  [#{$flexName}='noshrink'],\n  [#{$flexName}-noshrink] {\n    flex: 1 0 auto;\n    box-sizing: border-box;\n  }\n  [#{$flexName}='nogrow'],\n  [#{$flexName}-nogrow] {\n    flex: 0 1 auto;\n    box-sizing: border-box;\n  }\n\n  // (1-20) * 5 = 0-100%\n  @for $i from 0 through 20 {\n    $value: #{$i * 5 + '%'};\n\n    [#{$flexName}='#{$i * 5}'] {\n      flex: 1 1 #{$value};\n      max-width: #{$value};\n      max-height: 100%;\n      box-sizing: border-box;\n    }\n\n    [layout='row'] > [#{$flexName}='#{$i * 5}'],\n    [layout#{$name}='row'] > [#{$flexName}='#{$i * 5}'] {\n      flex: 1 1 #{$value};\n      max-width: #{$value};\n      max-height: 100%;\n      box-sizing: border-box;\n    }\n\n    [layout='column'] > [#{$flexName}='#{$i * 5}'],\n    [layout#{$name}='column'] > [#{$flexName}='#{$i * 5}'] {\n      flex: 1 1 #{$value};\n      max-width: 100%;\n      max-height: #{$value};\n      box-sizing: border-box;\n    }\n  }\n\n  [layout='row'],\n  [layout#{$name}='row'] {\n    > [#{$flexName}='33'],\n    > [#{$flexName}='33'] {\n      flex: 1 1 33%;\n      max-width: calc(100% / 3);\n      max-height: 100%;\n      box-sizing: border-box;\n    }\n    > [#{$flexName}='34'],\n    > [#{$flexName}='34'] {\n      flex: 1 1 34%;\n      max-width: 34%;\n      max-height: 100%;\n      box-sizing: border-box;\n    }\n    > [#{$flexName}='66'],\n    > [#{$flexName}='66'] {\n      flex: 1 1 66%;\n      max-width: calc(200% / 3);\n      max-height: 100%;\n      box-sizing: border-box;\n    }\n    > [#{$flexName}='67'],\n    > [#{$flexName}='67'] {\n      flex: 1 1 67%;\n      max-width: 67%;\n      max-height: 100%;\n      box-sizing: border-box;\n    }\n  }\n  [layout='column'],\n  [layout#{$name}='column'] {\n    > [#{$flexName}='33'],\n    > [#{$flexName}='33'] {\n      flex: 1 1 33%;\n      max-width: 100%;\n      max-height: calc(100% / 3);\n      box-sizing: border-box;\n    }\n    > [#{$flexName}='34'],\n    > [#{$flexName}='34'] {\n      flex: 1 1 34%;\n      max-width: 100%;\n      max-height: 34%;\n      box-sizing: border-box;\n    }\n    > [#{$flexName}='66'],\n    > [#{$flexName}='66'] {\n      flex: 1 1 66%;\n      max-width: 100%;\n      max-height: calc(200% / 3);\n      box-sizing: border-box;\n    }\n    > [#{$flexName}='67'],\n    > [#{$flexName}='67'] {\n      flex: 1 1 67%;\n      max-width: 100%;\n      max-height: 67%;\n      box-sizing: border-box;\n    }\n  }\n}\n\n@mixin layout-align-for-name($suffix: null) {\n  // Alignment attributes for layout containers' children\n  // Arrange on the Main Axis\n  // center, start, end, space-between, space-around\n  // flex-start is the default for justify-content\n  // ------------------------------\n\n  $name: 'layout-align';\n  @if $suffix != null {\n    $name: 'layout-align-#{$suffix}';\n  }\n\n  [#{$name}],\n  [#{$name}=\"start stretch\"] // defaults\n  {\n    justify-content: flex-start;\n    align-content: stretch;\n    align-items: stretch;\n  }\n  // Main Axis Center\n  [#{$name}='start'],\n  [#{$name}='start start'],\n  [#{$name}='start center'],\n  [#{$name}='start end'],\n  [#{$name}='start stretch'] {\n    justify-content: flex-start;\n  }\n\n  // Main Axis Center\n  [#{$name}='center'],\n  [#{$name}='center start'],\n  [#{$name}='center center'],\n  [#{$name}='center end'],\n  [#{$name}='center stretch'] {\n    justify-content: center;\n  }\n\n  // Main Axis End\n  [#{$name}=\"end\"], //stretch\n  [#{$name}=\"end center\"],\n  [#{$name}=\"end start\"],\n  [#{$name}=\"end end\"],\n  [#{$name}=\"end stretch\"] {\n    justify-content: flex-end;\n  }\n\n  // Main Axis Space Around\n  [#{$name}=\"space-around\"], //stretch\n  [#{$name}=\"space-around center\"],\n  [#{$name}=\"space-around start\"],\n  [#{$name}=\"space-around end\"],\n  [#{$name}=\"space-around stretch\"] {\n    justify-content: space-around;\n  }\n\n  // Main Axis Space Between\n  [#{$name}=\"space-between\"], //stretch\n  [#{$name}=\"space-between center\"],\n  [#{$name}=\"space-between start\"],\n  [#{$name}=\"space-between end\"],\n  [#{$name}=\"space-between stretch\"] {\n    justify-content: space-between;\n  }\n\n  // Arrange on the Cross Axis\n  // center, start, end\n  // stretch is the default for align-items\n  // ------------------------------\n\n  // Cross Axis Start\n  [#{$name}='start start'],\n  [#{$name}='center start'],\n  [#{$name}='end start'],\n  [#{$name}='space-between start'],\n  [#{$name}='space-around start'] {\n    align-items: flex-start;\n    align-content: flex-start;\n  }\n\n  // Cross Axis Center\n  [#{$name}='start center'],\n  [#{$name}='center center'],\n  [#{$name}='end center'],\n  [#{$name}='space-between center'],\n  [#{$name}='space-around center'] {\n    align-items: center;\n    align-content: center;\n    max-width: 100%;\n\n    // IE11 overflow https://github.com/philipwalton/flexbugs#2-column-flex-items-set-to-align-itemscenter-overflow-their-container\n    & > * {\n      max-width: 100%;\n      box-sizing: border-box;\n    }\n  }\n\n  // Cross Axis Center IE overflow fix\n  [#{$name}='start center'] > *,\n  [#{$name}='center center'] > *,\n  [#{$name}='end center'] > *,\n  [#{$name}='space-between center'] > *,\n  [#{$name}='space-around center'] > * {\n    max-width: 100%;\n    box-sizing: border-box;\n  }\n\n  // Cross Axis End\n  [#{$name}='start end'],\n  [#{$name}='center end'],\n  [#{$name}='end end'],\n  [#{$name}='space-between end'],\n  [#{$name}='space-around end'] {\n    align-items: flex-end;\n    align-content: flex-end;\n  }\n\n  // Cross Axis  stretch\n  [#{$name}='start stretch'],\n  [#{$name}='center stretch'],\n  [#{$name}='end stretch'],\n  [#{$name}='space-between stretch'],\n  [#{$name}='space-around stretch'] {\n    align-items: stretch;\n    align-content: stretch;\n  }\n}\n\n@mixin layout-padding-margin() {\n  [layout-padding] > [flex-sm],\n  [layout-padding] > [flex-lt-md] {\n    padding: $layout-gutter-width / 4;\n  }\n  [layout-padding],\n  [layout-padding] > [flex],\n  [layout-padding] > [flex-gt-sm],\n  [layout-padding] > [flex-md],\n  [layout-padding] > [flex-lt-lg] {\n    padding: $layout-gutter-width / 2;\n  }\n  [layout-padding] > [flex-gt-md],\n  [layout-padding] > [flex-lg] {\n    padding: $layout-gutter-width / 1;\n  }\n\n  [layout-margin] > [flex-sm],\n  [layout-margin] > [flex-lt-md] {\n    margin: $layout-gutter-width / 4;\n  }\n\n  [layout-margin],\n  [layout-margin] > [flex],\n  [layout-margin] > [flex-gt-sm],\n  [layout-margin] > [flex-md],\n  [layout-margin] > [flex-lt-lg] {\n    margin: $layout-gutter-width / 2;\n  }\n\n  [layout-margin] > [flex-gt-md],\n  [layout-margin] > [flex-lg] {\n    margin: $layout-gutter-width / 1;\n  }\n\n  [layout-wrap] {\n    flex-wrap: wrap;\n  }\n\n  [layout-nowrap] {\n    flex-wrap: nowrap;\n  }\n\n  [layout-fill] {\n    margin: 0;\n    width: 100%;\n    min-height: 100%;\n    height: 100%;\n  }\n}\n\n@mixin layouts_for_breakpoint($name: null) {\n  @include flex-order-for-name($name);\n  @include offset-for-name($name);\n  @include layout-align-for-name($name);\n\n  @include flex-properties-for-name($name);\n  @include layout-for-name($name);\n}\n\n@mixin covalent-layout() {\n  /*\n  *  Apply Mixins to create Layout/Flexbox styles\n  *\n  */\n\n  @include layouts_for_breakpoint();\n  @include layout-padding-margin();\n\n  /**\n  * `hide-gt-sm show-gt-lg` should hide from 600px to 1200px\n  * `show-md hide-gt-sm` should show from 0px to 960px and hide at >960px\n  * `hide-gt-md show-gt-sm` should show everywhere (show overrides hide)`\n  *\n  *  hide means hide everywhere\n  *  Sizes:\n  *         $layout-breakpoint-xs:     600px !default;\n  *         $layout-breakpoint-sm:     960px !default;\n  *         $layout-breakpoint-md:     1280px !default;\n  *         $layout-breakpoint-lg:     1920px !default;\n  */\n\n  @media (max-width: $layout-breakpoint-xs - 1) {\n    // Xtra-SMALL  SCREEN\n    [hide-xs],\n    [hide] {\n      &:not([show-xs]):not([show]) {\n        display: none;\n      }\n    }\n    @include layouts_for_breakpoint(xs);\n  }\n\n  @media (min-width: $layout-breakpoint-xs) {\n    // BIGGER THAN Xtra-SMALL SCREEN\n    @include layouts_for_breakpoint(gt-xs);\n  }\n\n  @media (min-width: $layout-breakpoint-xs) and (max-width: $layout-breakpoint-sm - 1) {\n    // SMALL SCREEN\n    [hide-sm],\n    [hide-gt-xs] {\n      &:not([show-gt-xs]):not([show-sm]):not([show]) {\n        display: none;\n      }\n    }\n    [hide-sm]:not([show-sm]):not([show]) {\n      display: none;\n    }\n    @include layouts_for_breakpoint(sm);\n  }\n\n  @media (min-width: $layout-breakpoint-sm) {\n    // BIGGER THAN SMALL SCREEN\n    @include layouts_for_breakpoint(gt-sm);\n  }\n\n  @media (min-width: $layout-breakpoint-sm) and (max-width: $layout-breakpoint-md - 1) {\n    // MEDIUM SCREEN\n    [hide],\n    [hide-gt-xs],\n    [hide-gt-sm] {\n      &:not([show-gt-xs]):not([show-gt-sm]):not([show-md]):not([show]) {\n        display: none;\n      }\n    }\n    [hide-md]:not([show-md]):not([show]) {\n      display: none;\n    }\n    @include layouts_for_breakpoint(md);\n  }\n\n  @media (min-width: $layout-breakpoint-md) {\n    // BIGGER THAN MEDIUM SCREEN\n    @include layouts_for_breakpoint(gt-md);\n  }\n\n  @media (min-width: $layout-breakpoint-md) and (max-width: $layout-breakpoint-lg - 1) {\n    // LARGE SCREEN\n    [hide],\n    [hide-gt-xs],\n    [hide-gt-sm],\n    [hide-gt-md] {\n      &:not([show-gt-xs]):not([show-gt-sm]):not([show-gt-md]):not([show-lg]):not([show]) {\n        display: none;\n      }\n    }\n    [hide-lg]:not([show-lg]):not([show]) {\n      display: none;\n    }\n\n    @include layouts_for_breakpoint(lg);\n  }\n\n  @media (min-width: $layout-breakpoint-lg) {\n    // BIGGER THAN LARGE SCREEN\n    @include layouts_for_breakpoint(gt-lg);\n    @include layouts_for_breakpoint(xl);\n\n    // BIGGER THAN LARGE SCREEN\n    [hide],\n    [hide-gt-xs],\n    [hide-gt-sm],\n    [hide-gt-md],\n    [hide-gt-lg] {\n      &:not([show-gt-xs]):not([show-gt-sm]):not([show-gt-md]):not([show-gt-lg]):not([show-xl]):not([show]) {\n        display: none;\n      }\n    }\n    [hide-xl]:not([show-xl]):not([show-gt-lg]):not([show]) {\n      display: none;\n    }\n  }\n}\n","@import '../../../node_modules/@angular/material/theming';\n\n/**\n* Mimicking VS Dark+ theme as closely as possible\n*/\n@mixin covalent-highlight-theme() {\n  td-highlight {\n    background: #1e1e21;\n    .highlight {\n      color: $light-primary-text;\n    }\n    .copy-button {\n      color: $light-primary-text;\n    }\n\n    .hljs-comment,\n    .hljs-quote {\n      color: #608b4e;\n    }\n\n    .hljs-tag,\n    .hljs-name,\n    .hljs-selector-tag,\n    .hljs-literal {\n      color: #569cd6;\n    }\n\n    .hljs-keyword {\n      color: #c288bf;\n    }\n\n    .hljs-attr,\n    //.hljs-params, // Remove param color for now\n    .hljs-attribute {\n      color: #9cdcfe;\n    }\n\n    .hljs-string,\n    .hljs-selector-attr,\n    .hljs-regexp,\n    .hljs-link {\n      color: #ce9178;\n    }\n\n    .hljs-selector-id,\n    .hljs-selector-class,\n    .hljs-selector-pseudo {\n      color: #d7ba7d;\n    }\n\n    .hljs-meta {\n      color: #dcdcaa;\n    }\n\n    .hljs-built_in,\n    .hljs-builtin-name,\n    .hljs-type,\n    .hljs-section,\n    .hljs-class .hljs-title,\n    .hljs-symbol,\n    .hljs-bullet {\n      color: #4ec9b0;\n    }\n\n    .hljs-number {\n      color: #b5cea8;\n    }\n\n    .hljs-variable,\n    .hljs-template-variable {\n      color: #9fddfc;\n    }\n\n    .hljs-deletion {\n      color: #ffc8bd;\n    }\n\n    .hljs-addition {\n      background-color: #baeeba;\n    }\n\n    .hljs-emphasis {\n      font-style: italic;\n    }\n\n    .hljs-doctag,\n    .hljs-strong {\n      font-weight: bold;\n    }\n\n    .hljs-formula {\n      background-color: #eeeeee;\n      font-style: italic;\n    }\n  }\n}\n","@import '../chips/chips-theme';\n@import '../data-table/data-table-theme';\n@import '../dialogs/dialog-theme';\n@import '../expansion-panel/expansion-panel-theme';\n@import '../json-formatter/json-formatter-theme';\n@import '../message/message-theme';\n@import '../paging/paging-bar-theme';\n@import '../steps/steps-theme';\n\n@function td-typography-config(\n  $font-family: '\"Roboto\", \"Helvetica Neue\", sans-serif',\n  $headline: td-typography-level(24px, 32px, 400),\n  $title: td-typography-level(20px, 32px, 500),\n  $subheading-2: td-typography-level(16px, 28px, 400),\n  $subheading-1: td-typography-level(15px, 24px, 400),\n  $body-2: td-typography-level(14px, 24px, 500),\n  $body-1: td-typography-level(14px, 20px, 400),\n  $caption: td-typography-level(12px, 20px, 400)\n) {\n  @return (\n    font-family: $font-family,\n    headline: $headline,\n    title: $title,\n    subheading-2: $subheading-2,\n    subheading-1: $subheading-1,\n    body-2: $body-2,\n    body-1: $body-1,\n    caption: $caption\n  );\n}\n\n@mixin td-typography($config: null) {\n  @if $config == null {\n    $config: td-typography-config();\n  }\n\n  body {\n    font-family: td-font-family($config);\n  }\n  @include td-chips-typography($config);\n  @include td-data-table-typography($config);\n  @include td-dialog-typography($config);\n  @include td-expansion-panel-typography($config);\n  @include td-json-formatter-typography($config);\n  @include td-message-typography($config);\n  @include td-paging-bar-typography($config);\n  @include td-steps-typography($config);\n  @include td-layout-typography($config);\n}\n","@import '../common/styles/theme-functions';\n@import '../common/styles/typography-functions';\n\n@mixin td-chips-typography($config) {\n  .td-chip-content {\n    font: {\n      family: td-font-family($config);\n      size: td-font-size($config, caption);\n    }\n  }\n}\n\n@mixin td-chips-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n  $is-dark-theme: map-get($theme, is-dark);\n\n  // chips\n  td-chips {\n    // chip\n    .mat-basic-chip {\n      background: mat-color($background, status-bar);\n      color: mat-color($foreground, text);\n      &:focus:not(.td-chip-disabled) {\n        mat-icon:hover {\n          color: mat-color($foreground, icon);\n        }\n        &.mat-primary {\n          background: mat-color($primary);\n          &,\n          mat-icon {\n            color: mat-color($primary, default-contrast);\n          }\n        }\n        &.mat-accent {\n          background: mat-color($accent);\n          &,\n          mat-icon {\n            color: mat-color($accent, default-contrast);\n          }\n        }\n        &.mat-warn {\n          background: mat-color($warn);\n          &,\n          mat-icon {\n            color: mat-color($warn, default-contrast);\n          }\n        }\n      }\n      mat-icon.td-chip-removal {\n        color: mat-color($foreground, hint-text);\n        &:hover {\n          color: mat-color($foreground, icon);\n        }\n      }\n    }\n    .mat-form-field-underline {\n      background-color: mat-color($foreground, divider, if($is-dark-theme, 0.7, 0.42));\n    }\n    &.mat-primary {\n      .mat-form-field-underline .mat-form-field-ripple {\n        background-color: mat-color($primary);\n      }\n    }\n    &.mat-accent {\n      .mat-form-field-underline .mat-form-field-ripple {\n        background-color: mat-color($accent);\n      }\n    }\n    &.mat-warn {\n      .mat-form-field-underline .mat-form-field-ripple {\n        background-color: mat-color($warn);\n      }\n    }\n    &.ng-invalid {\n      .mat-form-field-underline .mat-form-field-ripple {\n        background-color: mat-color($warn);\n      }\n      .mat-form-field-label-wrapper > label.mat-form-field-label.mat-form-field-empty {\n        color: mat-color($warn);\n      }\n    }\n  }\n}\n","@import '../common/styles/typography-functions';\n\n@mixin td-data-table-typography($config) {\n  .td-data-table-cell {\n    font: {\n      family: td-font-family($config);\n      size: td-font-size($config, body-1);\n      weight: td-font-weight($config, body-1);\n    }\n\n    line-height: td-line-height($config, body-1);\n  }\n  .td-data-table-column {\n    font: {\n      family: td-font-family($config);\n      size: td-font-size($config, caption);\n      weight: 600;\n    }\n  }\n  .td-data-table-sort-badge {\n    font: {\n      family: td-font-family($config);\n      size: td-font-size($config, caption);\n      weight: td-font-weight($config, body-1);\n    }\n  }\n}\n\n@mixin td-data-table-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n  $is-dark-theme: map-get($theme, is-dark);\n\n  td-data-table {\n    border-bottom: 1px solid mat-color($foreground, divider);\n  }\n  .td-data-table-scrollable {\n    border-top: 1px solid mat-color($foreground, divider);\n  }\n  .td-data-table-column-resizer {\n    .td-data-table-column-separator {\n      border-right: 2px solid mat-color($foreground, divider);\n      opacity: 0.3;\n    }\n    &:hover,\n    &.td-resizing {\n      .td-data-table-column-separator {\n        opacity: 1;\n      }\n    }\n  }\n  table[td-data-table] {\n    .td-data-table-column-row,\n    .td-data-table-row {\n      border-bottom-color: mat-color($foreground, divider);\n    }\n    .mat-checkbox-cell,\n    .mat-checkbox-column {\n      color: mat-color($foreground, secondary-text);\n      mat-pseudo-checkbox.mat-pseudo-checkbox-checked {\n        background-color: mat-color($accent);\n      }\n    }\n    .td-data-table-cell {\n      mat-form-field {\n        .mat-form-field-underline {\n          display: none;\n        }\n      }\n    }\n    .td-data-table-column {\n      color: mat-color($foreground, secondary-text);\n      * {\n        vertical-align: middle;\n      }\n      mat-icon {\n        &.td-data-table-sort-icon {\n          color: mat-color($foreground, disabled);\n        }\n      }\n      &.mat-active,\n      &.mat-active mat-icon {\n        color: mat-color($foreground, base);\n      }\n    }\n    &.mat-selectable tbody > tr.td-data-table-row {\n      &.td-selected {\n        background-color: mat-color($background, 'app-bar');\n      }\n      &:focus {\n        background-color: mat-color($background, 'hover');\n      }\n    }\n    &.mat-clickable tbody > tr.td-data-table-row {\n      &:hover {\n        background-color: mat-color($background, 'hover');\n      }\n    }\n  }\n  .mat-selected-title {\n    background-color: mat-color($accent, 0.12);\n    color: mat-color($accent);\n  }\n  .td-data-table-sort-badge {\n    background-color: if(\n      $is-dark-theme,\n      map-get($mat-dark-theme-background, background),\n      mat-color($background, 'app-bar')\n    );\n    color: if($is-dark-theme, $light-secondary-text, mat-color($foreground, icon));\n  }\n}\n","@import '../common/styles/theme-functions';\n@import '../common/styles/typography-functions';\n\n@mixin td-dialog-typography($config) {\n  .td-dialog-title {\n    font: {\n      family: td-font-family($config);\n      size: td-font-size($config, title);\n      weight: td-font-weight($config, title);\n    }\n  }\n  .td-dialog-message {\n    font: {\n      family: td-font-family($config);\n      size: td-font-size($config, subheading-2);\n      weight: td-font-weight($config, subheading-2);\n    }\n\n    line-height: td-line-height($config, subheading-2);\n  }\n}\n@mixin td-dialog-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $foreground: map-get($theme, foreground);\n  $background: map-get($theme, background);\n  .td-dialog-message {\n    color: mat-color($foreground, secondary-text);\n  }\n}\n","@import '../common/styles/variables';\n@import '../common/styles/elevation';\n@import '../common/styles/theme-functions';\n@import '../common/styles/typography-functions';\n\n@mixin td-expansion-panel-typography($config) {\n  .td-expansion-label {\n    font: {\n      family: td-font-family($config);\n      size: td-font-size($config, subheading-2);\n      weight: td-font-weight($config, subheading-2);\n    }\n  }\n  .td-expansion-sublabel {\n    font: {\n      family: td-font-family($config);\n      size: td-font-size($config, body-1);\n      weight: td-font-weight($config, body-1);\n    }\n  }\n}\n\n@mixin td-expansion-panel-theme($theme) {\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $foreground: map-get($theme, foreground);\n  $background: map-get($theme, background);\n\n  .td-expansion-panel-group {\n    .td-expansion-panel {\n      transition: 120ms ease-in;\n      &:not(:last-of-type) {\n        &.td-expanded {\n          margin-bottom: $margin;\n        }\n      }\n      &:not(:first-of-type) {\n        &.td-expanded {\n          margin-top: $margin;\n        }\n      }\n    }\n  }\n\n  .td-expansion-panel {\n    @include mat-elevation(1);\n\n    background-color: mat-color($background, card);\n    .td-expansion-panel-header {\n      &:focus:not(.mat-disabled),\n      &:hover:not(.mat-disabled) {\n        background: mat-color($background, 'hover');\n      }\n      .td-expansion-panel-header-content {\n        mat-icon.td-expand-icon {\n          color: mat-color($foreground, icon);\n        }\n        &.mat-disabled {\n          &,\n          & * {\n            color: mat-color($foreground, disabled);\n          }\n        }\n      }\n    }\n    mat-icon.td-expand-icon {\n      color: mat-color($foreground, icon);\n    }\n    .td-expansion-label,\n    .td-expansion-sublabel {\n      &,\n      & * {\n        vertical-align: middle;\n      }\n    }\n    .td-expansion-sublabel {\n      color: mat-color($foreground, secondary-text);\n    }\n  }\n}\n","@import '../common/styles/theme-functions';\n@import '../common/styles/typography-functions';\n\n@mixin td-json-formatter-typography($config) {\n  .td-key {\n    font: {\n      family: td-font-family($config);\n      size: td-font-size($config, body-1);\n    }\n  }\n}\n\n@mixin td-json-formatter-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $foreground: map-get($theme, foreground);\n  $background: map-get($theme, background);\n  .td-json-formatter-wrapper {\n    .function::after,\n    .date::after,\n    .td-object-name::after,\n    .td-array-length::after {\n      content: '\\200E';\n    }\n    .td-key {\n      &.td-key-node {\n        &:focus,\n        &:hover {\n          background-color: mat-color($background, hover);\n        }\n        .td-node-icon {\n          color: mat-color($foreground, secondary-text);\n        }\n      }\n    }\n    .key {\n      color: mat-color($primary);\n    }\n    .value {\n      .string {\n        color: mat-color($warn);\n      }\n      .number {\n        color: mat-color($accent);\n      }\n      .boolean {\n        color: mat-color($accent);\n      }\n      .null,\n      .undefined {\n        color: mat-color($foreground, disabled-text);\n      }\n      .function {\n        color: mat-color($primary);\n      }\n      .date {\n        color: mat-color($foreground, text);\n      }\n    }\n  }\n}\n","@import '../common/styles/theme-functions';\n@import '../common/styles/typography-functions';\n\n@mixin td-message-typography($config) {\n  .td-message-label {\n    font: {\n      family: td-font-family($config);\n      size: td-font-size($config, body-2);\n      weight: 600;\n    }\n\n    line-height: td-line-height($config, body-2);\n  }\n  .td-message-sublabel {\n    font: {\n      family: td-font-family($config);\n      size: td-font-size($config, body-1);\n    }\n  }\n}\n\n@mixin td-message-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n\n  .td-message {\n    &.mat-primary {\n      color: mat-color($primary);\n      background-color: mat-color($primary, 0.15);\n    }\n    &.mat-accent {\n      color: mat-color($accent);\n      background-color: mat-color($accent, 0.15);\n    }\n    &.mat-warn {\n      color: mat-color($warn);\n      background-color: mat-color($warn, 0.15);\n    }\n  }\n}\n","@import '../common/styles/theme-functions';\n@import '../common/styles/typography-functions';\n\n@mixin td-paging-bar-typography($config) {\n  .td-paging-bar {\n    font: {\n      family: td-font-family($config);\n      size: td-font-size($config, caption);\n    }\n  }\n}\n\n@mixin td-paging-bar-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  td-paging-bar {\n    &,\n    & mat-select .mat-select-value {\n      color: mat-color($foreground, secondary-text);\n    }\n  }\n}\n","@import '../common/styles/variables';\n@import '../common/styles/theme-functions';\n@import '../common/styles/typography-functions';\n\n@mixin td-steps-typography($config) {\n  .td-step-label {\n    font: {\n      family: td-font-family($config);\n      size: td-font-size($config, body-2);\n      weight: td-font-weight($config, body-2);\n    }\n  }\n  .td-step-sublabel {\n    font: {\n      family: td-font-family($config);\n      size: td-font-size($config, body-1);\n    }\n\n    line-height: td-line-height($config, body-1);\n  }\n}\n\n@mixin td-steps-theme($theme) {\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $foreground: map-get($theme, foreground);\n  $background: map-get($theme, background);\n  .td-steps {\n    .td-step-content,\n    .td-step-summary,\n    .td-step-actions {\n      margin: $margin;\n    }\n    // steps\n    .td-horizontal-line {\n      border-bottom-color: mat-color($foreground, divider);\n    }\n    .td-vertical-line {\n      border-left-color: mat-color($foreground, divider);\n    }\n    // header\n    .td-step-link {\n      &:focus:not(.mat-disabled),\n      &:hover:not(.mat-disabled) {\n        .td-step-header {\n          background: mat-color($background, 'hover');\n        }\n      }\n    }\n    .td-step-header {\n      &.mat-disabled {\n        cursor: default;\n      }\n      &:focus:not(.mat-disabled),\n      &:hover:not(.mat-disabled) {\n        background: mat-color($background, 'hover');\n      }\n      .td-step-label-wrapper {\n        .td-step-label {\n          color: mat-color($foreground, text);\n        }\n        .td-step-sublabel {\n          color: mat-color($foreground, secondary-text);\n        }\n        &.mat-inactive {\n          &,\n          & * {\n            color: mat-color($foreground, disabled);\n          }\n        }\n        &.mat-warn {\n          &,\n          & * {\n            color: mat-color($warn);\n          }\n        }\n      }\n      .mat-complete {\n        color: mat-color($accent);\n      }\n    }\n    .td-circle {\n      color: mat-color($background, card);\n      &.mat-active {\n        background-color: mat-color($accent);\n      }\n      &.mat-inactive {\n        background-color: mat-color($foreground, disabled);\n      }\n      & mat-icon {\n        fill: mat-color($foreground, text);\n      }\n    }\n    .td-triangle {\n      color: mat-color($warn);\n    }\n    .td-edit-icon {\n      color: mat-color($foreground, icon);\n    }\n\n    .td-step-header-pagination-chevron {\n      border-color: mat-color($foreground, text);\n    }\n    .td-step-header-pagination-disabled .td-step-header-pagination-chevron {\n      border-color: mat-color($foreground, disabled-text);\n    }\n  }\n}\n","@import '../common/styles/elevation';\n@import '../common/styles/theme-functions';\n@import '../common/styles/typography-functions';\n\n@mixin td-layout-typography($config) {\n  td-navigation-drawer {\n    .td-navigation-drawer-title {\n      font: {\n        family: td-font-family($config);\n        size: td-font-size($config, subheading-2);\n      }\n    }\n    .td-navigation-drawer-name {\n      font: {\n        family: td-font-family($config);\n        size: td-font-size($config, body-1);\n        weight: 500;\n      }\n\n      line-height: td-line-height($config, body-1);\n    }\n    .td-navigation-drawer-menu-toggle {\n      font: {\n        family: td-font-family($config);\n        size: td-font-size($config, body-2);\n        weight: 400;\n      }\n\n      line-height: td-line-height($config, body-2);\n    }\n  }\n}\n\n@mixin td-layout-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .mat-drawer-container {\n    background-color: mat-color($background, status-bar);\n  }\n\n  [mat-icon-button].td-layout-menu-button {\n    margin-left: 0;\n    ::ng-deep [dir='rtl'] & {\n      margin-right: 0;\n      margin-left: 6px;\n    }\n  }\n\n  td-layout-nav,\n  td-layout-nav-list,\n  td-layout-manage-list,\n  td-layout-card-over,\n  td-navigation-drawer,\n  td-layout {\n    mat-toolbar {\n      @include mat-elevation(1);\n\n      z-index: 1;\n    }\n  }\n\n  body[dense] td-layout-nav,\n  body[dense] td-layout-nav-list,\n  body[dense] td-layout-card-over,\n  td-layout-nav[dense],\n  td-layout-nav-list[dense],\n  td-layout-card-over[dense] {\n    mat-toolbar.td-layout-toolbar {\n      &.mat-toolbar-row,\n      &.mat-toolbar-single-row {\n        height: 48px;\n      }\n    }\n  }\n  body[dense] td-layout-card-over,\n  td-layout-card-over[dense] {\n    .td-layout-card-over-wrapper {\n      margin: -48px;\n      margin-left: 0;\n      margin-right: 0;\n    }\n  }\n  .mat-drawer-side.td-layout-sidenav {\n    @include mat-elevation(2);\n  }\n  .td-layout-footer {\n    background: mat-color($background, app-bar);\n    color: mat-color($foreground, text);\n    @include mat-elevation(2);\n    &.mat-primary {\n      background: mat-color($primary);\n      &,\n      mat-icon {\n        color: mat-color($primary, default-contrast);\n      }\n    }\n    &.mat-accent {\n      background: mat-color($accent);\n      &,\n      mat-icon {\n        color: mat-color($accent, default-contrast);\n      }\n    }\n    &.mat-warn {\n      background: mat-color($warn);\n      &,\n      mat-icon {\n        color: mat-color($warn, default-contrast);\n      }\n    }\n  }\n}\n","@mixin td-breadcrumbs-theme($theme) {\n  $foreground: map-get($theme, foreground);\n\n  td-breadcrumb {\n    &:last-of-type {\n      font-weight: bold;\n      cursor: default;\n    }\n  }\n}\n","@import './styles/theme-functions';\n\n@mixin td-common-theme($theme) {\n  $warn: map-get($theme, warn);\n  $foreground: map-get($theme, foreground);\n  $background: map-get($theme, background);\n\n  mat-list-item,\n  .mat-list-item-content {\n    mat-icon {\n      color: mat-color($foreground, icon);\n      &[matListAvatar] {\n        background-color: mat-color($background, hover);\n      }\n    }\n  }\n  .mat-list-text {\n    p {\n      color: mat-color($foreground, disabled);\n    }\n  }\n}\n","@import 'theme-functions';\n\n// Teradata UI Platform\n// ------------------------------\n$navigation-drawer-width: 320px !default;\n$padding: 16px;\n$margin: $padding;\n$step-circle: 24px;\n\n// Typography\n// ------------------------------\n$font-family: 'RobotoDraft', 'Roboto', 'Helvetica Neue', sans-serif !default;\n$font-size: 10px;\n\n$display-4-font-size-base: rem(11.2) !default;\n$display-3-font-size-base: rem(5.6) !default;\n$display-2-font-size-base: rem(4.5) !default;\n$display-1-font-size-base: rem(3.4) !default;\n$headline-font-size-base: rem(2.4) !default;\n$title-font-size-base: rem(2) !default;\n$subhead-font-size-base: rem(1.6) !default;\n\n$body-font-size-base: rem(1.4) !default;\n$caption-font-size-base: rem(1.2) !default;\n\n// Layout\n$baseline-grid: 8px !default;\n$layout-breakpoint-xs: 600px !default;\n$layout-breakpoint-sm: 960px !default;\n$layout-breakpoint-md: 1280px !default;\n$layout-breakpoint-lg: 1920px !default;\n$layout-gutter-width: ($baseline-grid * 2) !default;\n\n// Typography\n$mat-body-font-size-base: rem(1.4) !default;\n\n// App bar variables\n$app-bar-height: 64px;\n\n// card header variables\n$mat-card-header-size: 40px;\n$mat-card-radius: 2px;\n\n// Icons\n$icon-size: rem(2.4);\n\n// Toast\n$toast-height: $baseline-grid * 3 !default;\n$toast-margin: $baseline-grid * 1 !default;\n\n// Whiteframes\n$whiteframe-shadow-z1: 0 2px 5px 0 rgba(0, 0, 0, 0.26) !default;\n$whiteframe-zindex-z1: 1 !default;\n$whiteframe-shadow-z2: 0 8px 17px rgba(0, 0, 0, 0.2) !default;\n$whiteframe-zindex-z2: 2 !default;\n$whiteframe-shadow-z3: 0 17px 50px rgba(0, 0, 0, 0.19) !default;\n$whiteframe-zindex-z3: 3 !default;\n$whiteframe-shadow-z4: 0 16px 28px 0 rgba(0, 0, 0, 0.22) !default;\n$whiteframe-zindex-z4: 4 !default;\n$whiteframe-shadow-z5: 0 27px 24px 0 rgba(0, 0, 0, 0.2) !default;\n$whiteframe-zindex-z5: 5 !default;\n\n// Z-indexes\n$z-index-tooltip: 100 !default;\n$z-index-dialog: 80 !default;\n$z-index-toast: 90 !default;\n$z-index-bottom-sheet: 70 !default;\n$z-index-scroll-mask: 65 !default;\n$z-index-sidenav: 60 !default;\n$z-index-backdrop: 50 !default;\n$z-index-toolbar: 30 !default;\n$z-index-fab: 20 !default;\n$z-index-progress-circular: 2 !default; // Used to fix animation bug in Chrome\n\n// Easing Curves\n\n// The default animation curves used by material design.\n$mat-linear-out-slow-in-timing-function: cubic-bezier(0, 0, 0.2, 0.1) !default;\n$mat-fast-out-slow-in-timing-function: cubic-bezier(0.4, 0, 0.2, 1) !default;\n$mat-fast-out-linear-in-timing-function: cubic-bezier(0.4, 0, 1, 1) !default;\n\n$ease-in-out-curve-function: cubic-bezier(0.35, 0, 0.25, 1) !default;\n\n$swift-ease-out-duration: 0.4s !default;\n$swift-ease-out-timing-function: cubic-bezier(0.25, 0.8, 0.25, 1) !default;\n$swift-ease-out: all $swift-ease-out-duration $swift-ease-out-timing-function !default;\n\n$swift-ease-in-duration: 0.3s !default;\n$swift-ease-in-timing-function: cubic-bezier(0.55, 0, 0.55, 0.2) !default;\n$swift-ease-in: all $swift-ease-in-duration $swift-ease-in-timing-function !default;\n\n$swift-ease-in-out-duration: 0.5s !default;\n$swift-ease-in-out-timing-function: cubic-bezier(0.35, 0, 0.25, 1) !default;\n$swift-ease-in-out: all $swift-ease-in-out-duration $swift-ease-in-out-timing-function !default;\n\n$swift-linear-duration: 0.08s !default;\n$swift-linear-timing-function: linear !default;\n$swift-linear: all $swift-linear-duration $swift-linear-timing-function !default;\n","@import '../common/styles/variables';\n@import '../common/styles/elevation';\n@import '../common/styles/theme-functions';\n\n@mixin td-file-theme($theme) {\n  $background: map-get($theme, background);\n\n  td-file-upload {\n    .td-file-upload-cancel {\n      mat-icon {\n        background-color: mat-color($background, background);\n      }\n    }\n  }\n  td-file-input {\n    /**\n    * Class that is added ondragenter by the [TdFileDrop] directive.\n    */\n    .drop-zone {\n      transition: background $swift-ease-out-duration $swift-ease-out-timing-function,\n        mat-elevation-transition-property-value();\n      @include mat-elevation(8);\n    }\n  }\n}\n","@import '../common/styles/theme-functions';\n\n@mixin td-loading-theme($theme) {\n  $background: map-get($theme, background);\n  .td-loading-wrapper {\n    &.td-overlay .td-loading {\n      background: rgba(mat-color($background, dialog), 0.8);\n    }\n  }\n}\n","@import '../common/styles/variables';\n@import '../common/styles/elevation';\n@import '../common/styles/theme-functions';\n\n@mixin td-notification-count-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $foreground: map-get($theme, foreground);\n  $background: map-get($theme, background);\n\n  .td-notification-count {\n    @include mat-elevation(1);\n    &.mat-warn {\n      background-color: mat-color($warn);\n      color: mat-color($warn, default-contrast);\n    }\n    &.mat-primary {\n      background-color: mat-color($primary);\n      color: mat-color($primary, default-contrast);\n    }\n    &.mat-accent {\n      background-color: mat-color($accent);\n      color: mat-color($accent, default-contrast);\n    }\n  }\n}\n","@import '../../../node_modules/@angular/material/theming';\n\n@mixin covalent-markdown-theme($theme) {\n  $accent: map-get($theme, accent);\n  $foreground: map-get($theme, foreground);\n  $background: map-get($theme, background);\n  td-markdown {\n    a {\n      color: mat-color($accent);\n    }\n    h1,\n    h2 {\n      border-bottom-color: mat-color($foreground, divider);\n    }\n    h3,\n    h4,\n    h5,\n    h6 {\n      color: mat-color($foreground, secondary-text);\n    }\n    hr {\n      border-color: mat-color($foreground, divider);\n    }\n    blockquote {\n      color: mat-color($foreground, secondary-text);\n      border-left-color: mat-color($foreground, divider);\n    }\n    table {\n      th,\n      td {\n        border-color: mat-color($foreground, dividers);\n      }\n      tr {\n        border-top-color: mat-color($foreground, dividers);\n        &:nth-child(2n) {\n          background-color: mat-color($foreground, dividers);\n        }\n      }\n    }\n    img {\n      background-color: mat-color($background, card);\n    }\n    code {\n      background-color: mat-color($background, hover);\n    }\n    .highlight pre,\n    pre {\n      background-color: mat-color($background, app-bar);\n    }\n    kbd {\n      color: mat-color($foreground, secondary-text);\n      background-color: mat-color($background, app-bar);\n      border-color: mat-color($foreground, divider);\n      border-bottom-color: mat-color($foreground, disabled);\n    }\n  }\n}\n","@mixin covalent-flavored-markdown-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $foreground: map-get($theme, foreground);\n  $background: map-get($theme, background);\n  td-flavored-markdown {\n    :not(pre) > code {\n      background: #1e1e21;\n      color: mat-color($mat-grey, 50);\n    }\n\n    .mat-checkbox-disabled {\n      label.mat-checkbox-layout {\n        .mat-checkbox-label {\n          color: currentColor;\n        }\n      }\n    }\n  }\n}\n","@mixin td-general-utilities() {\n  body {\n    // Angular 4 added tabindex to everything, this style removes the outline:\n    [tabindex]:focus {\n      outline: none;\n    }\n    .radius-none {\n      border-radius: 0;\n    }\n    .overflow-hidden {\n      overflow: hidden;\n    }\n    .overflow-auto {\n      overflow: auto;\n    }\n    .overflow-visible {\n      overflow: visible;\n    }\n    .block {\n      display: block;\n    }\n    .inline-block {\n      display: inline-block;\n    }\n    .relative {\n      position: relative;\n    }\n    .fixed {\n      position: fixed;\n    }\n    .height-auto {\n      min-height: 0;\n    }\n    .z-3 {\n      z-index: 3;\n    }\n    .z-2 {\n      z-index: 2;\n    }\n    .z-1 {\n      z-index: 1;\n    }\n    .focus-weight:focus {\n      outline: 0;\n      font-weight: 700;\n    }\n    .cursor-pointer:hover {\n      cursor: pointer;\n    }\n  }\n}\n","@mixin pad($direction: '') {\n  .pad#{$direction} {\n    padding#{$direction}: 16px;\n  }\n  .pad#{$direction}-xxl {\n    padding#{$direction}: 56px;\n  }\n  .pad#{$direction}-xl {\n    padding#{$direction}: 48px;\n  }\n  .pad#{$direction}-lg {\n    padding#{$direction}: 32px;\n  }\n  .pad#{$direction}-md {\n    padding#{$direction}: 24px;\n  }\n  .pad#{$direction}-sm {\n    padding#{$direction}: 8px;\n  }\n  .pad#{$direction}-xs {\n    padding#{$direction}: 4px;\n  }\n  .pad#{$direction}-none {\n    padding#{$direction}: 0;\n  }\n}\n\n@mixin td-padding-utilities() {\n  body {\n    @include pad();\n    @include pad(-bottom);\n    @include pad(-top);\n    @include pad(-left);\n    @include pad(-right);\n  }\n}\n","@mixin pull($direction: '') {\n  .pull#{$direction}-xxl {\n    margin#{$direction}: -56px;\n  }\n  .pull#{$direction}-xl {\n    margin#{$direction}: -48px;\n  }\n  .pull#{$direction}-lg {\n    margin#{$direction}: -32px;\n  }\n  .pull#{$direction}-md {\n    margin#{$direction}: -24px;\n  }\n  .pull#{$direction} {\n    margin#{$direction}: -16px;\n  }\n  .pull#{$direction}-sm {\n    margin#{$direction}: -8px;\n  }\n  .pull#{$direction}-xs {\n    margin#{$direction}: -4px;\n  }\n  .pull#{$direction}-none {\n    margin#{$direction}: 0;\n  }\n}\n\n@mixin td-pulling-utilities() {\n  body {\n    @include pull();\n    @include pull(-bottom);\n    @include pull(-top);\n    @include pull(-left);\n    @include pull(-right);\n  }\n}\n","@mixin push($direction: '') {\n  .push#{$direction} {\n    margin#{$direction}: 16px;\n  }\n  .push#{$direction}-xxl {\n    margin#{$direction}: 56px;\n  }\n  .push#{$direction}-xl {\n    margin#{$direction}: 48px;\n  }\n  .push#{$direction}-lg {\n    margin#{$direction}: 32px;\n  }\n  .push#{$direction}-md {\n    margin#{$direction}: 24px;\n  }\n  .push#{$direction}-sm {\n    margin#{$direction}: 8px;\n  }\n  .push#{$direction}-xs {\n    margin#{$direction}: 4px;\n  }\n  .push#{$direction}-none {\n    margin#{$direction}: 0;\n  }\n}\n\n@mixin td-pushing-utilities() {\n  body {\n    @include push();\n    @include push(-bottom);\n    @include push(-top);\n    @include push(-left);\n    @include push(-right);\n  }\n}\n","@mixin td-size-utilities() {\n  $size-list: 12 16 24 32 50 64 72 100 128 256;\n  @each $current-size in $size-list {\n    $i: index($size-list, $current-size);\n    .size-#{$current-size} {\n      height: #{$current-size}px;\n      width: #{$current-size}px;\n    }\n  }\n  @each $current-size in $size-list {\n    $i: index($size-list, $current-size);\n    .size-height-#{$current-size} {\n      height: #{$current-size}px;\n      width: auto;\n    }\n  }\n  @each $current-size in $size-list {\n    $i: index($size-list, $current-size);\n    .size-width-#{$current-size} {\n      width: #{$current-size}px;\n      height: auto;\n    }\n  }\n}\n","@mixin td-text-utilities() {\n  body {\n    h1,\n    h2,\n    h3,\n    h4,\n    h5,\n    h6 {\n      & > small {\n        font-size: 60%;\n      }\n    }\n    .text-normal {\n      font-style: normal;\n    }\n    .text-center {\n      text-align: center;\n    }\n    .text-left {\n      text-align: left;\n    }\n    .text-right {\n      text-align: right;\n    }\n    .text-xs,\n    .text-sm,\n    .text-md,\n    .text-lg {\n      text-rendering: optimizeLegibility;\n    }\n    .text-micro {\n      font-size: 10px;\n      font-weight: normal;\n      letter-spacing: 1px;\n    }\n    .text-xs {\n      font-size: 50%;\n    }\n    .text-sm {\n      font-size: 70%;\n    }\n    .text-md {\n      font-size: 80%;\n    }\n    .text-lg {\n      font-size: 110%;\n    }\n    .text-xl {\n      font-size: 120%;\n    }\n    .text-xxl {\n      font-size: 130%;\n    }\n    .text-30 {\n      font-size: 30px;\n    }\n    .text-super {\n      font-size: 60px;\n    }\n    .text-wrap {\n      white-space: normal;\n    }\n    .text-break {\n      word-break: break-word;\n    }\n    .text-upper {\n      text-transform: uppercase;\n    }\n    .text-lower {\n      text-transform: lowercase;\n    }\n    .text-caps {\n      text-transform: capitalize;\n    }\n    .text-truncate {\n      white-space: nowrap;\n      overflow: hidden;\n      text-overflow: ellipsis;\n    }\n    .text-nodecoration {\n      text-decoration: none;\n    }\n  }\n}\n"],"sourceRoot":"webpack:///"}