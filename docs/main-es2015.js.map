{"version":3,"sources":["./src/app/prescription-order-detail/prescription-order-detail.component.ts","./src/app/prescription-order-detail/prescription-order-detail.component.html","./src/app/orders/orders.component.ts","./src/app/orders/orders.component.html","./src/app/service/auth.service.ts","./src/app/eps-orders/prescription-orders.component.ts","./src/app/eps-orders/prescription-orders.component.html","./src/environments/environment.ts","./src/app/callback/callback.component.ts","./src/app/callback/callback.component.html","./src/app/refill/refill.component.ts","./src/app/refill/refill.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/service/FhirService.ts","./src/app/gp-task/gp-task.component.ts","./src/app/gp-task/gp-task.component.html","./src/app/service/auth-guard.ts","./src/app/service/nhsd.service.ts","./src/app/gp-diary/gp-diary.component.ts","./src/app/gp-diary/gp-diary.component.html","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/main/main.component.ts","./src/app/main/main.component.html","./src/app/gp-prescriptions/prescription-refill.component.ts","./src/app/gp-prescriptions/prescription-refill.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["import {Component, Inject, OnInit, ViewContainerRef} from '@angular/core';\nimport {MatTableDataSource} from \"@angular/material/table\";\nimport {TdDialogService} from \"@covalent/core/dialogs\";\nimport {MedicationDispense, MedicationRequest, Task} from 'fhir/r4';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {NhsdService} from \"../service/nhsd.service\";\nimport {DatePipe} from \"@angular/common\";\n\n@Component({\n  selector: 'app-prescription-order-detail',\n  templateUrl: './prescription-order-detail.component.html',\n  styleUrls: ['./prescription-order-detail.component.scss']\n})\nexport class PrescriptionOrderDetailComponent implements OnInit {\n\n\n    displayedColumns: string[] = ['authored', 'name', 'dosage', 'quantity', 'unit'];\n\n    displayedDispenseColumns: string[] = ['prepared', 'performer', 'name', 'quantity', 'unit'];\n\n    dataSource : any;\n    dispenseDataSource : any;\n\n    datepipe: DatePipe = new DatePipe('en-GB');\n\n    prescription: MedicationRequest[] =  [\n    ]\n\n    dispense: MedicationDispense[] =  [\n\n                ]\n    closed: any;\n\n  constructor(private _dialogService: TdDialogService,\n              private nhsd: NhsdService,\n              private _viewContainerRef: ViewContainerRef,\n              @Inject(MAT_DIALOG_DATA) public task: any\n  ) { }\n\n  ngOnInit(): void {\n      this.dataSource = new MatTableDataSource<any>(this.prescription);\n      this.dispenseDataSource = new MatTableDataSource<any>(this.dispense);\n\n      this.nhsd.medicationRequest.subscribe((medicationRequest: MedicationRequest) => {\n\n          this.prescription.push(medicationRequest);\n          this.dataSource = new MatTableDataSource<any>(this.prescription);\n      });\n      this.nhsd.medicationDispense.subscribe( (medicationDispense: MedicationDispense) => {\n          console.log(medicationDispense);\n          this.dispense.push(medicationDispense);\n          this.dispenseDataSource= new MatTableDataSource<any>(this.dispense);\n      })\n      const nTask: Task = this.task.resource;\n      if (nTask.input !== undefined && nTask.input.length>0) {\n          for (const taskInput of nTask.input) {\n              if (taskInput.valueReference !== undefined && taskInput.valueReference.reference !== undefined) {\n                  console.log(taskInput.valueReference.display)\n                  this.nhsd.getMedicationRequest(taskInput.valueReference.reference);\n                  this.nhsd.getMedicationDispense(taskInput.valueReference.reference);\n              }\n          }\n      }\n  }\n\n}\n","\n<mat-dialog-content>\n    <h2>Medication Requests</h2>\n<table mat-table [dataSource]=\"dataSource\" >\n\n        <ng-container matColumnDef=\"authored\">\n            <th mat-header-cell *matHeaderCellDef [style.width.px]=\"120\"> Authored </th>\n            <td mat-cell *matCellDef=\"let element\"> {{datepipe.transform(element.authoredOn, 'dd MMM yyyy') }} </td>\n        </ng-container>\n        <ng-container matColumnDef=\"concept\">\n            <th mat-header-cell *matHeaderCellDef> Medication ID </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.concept}} </td>\n        </ng-container>\n\n    <ng-container matColumnDef=\"dosage\">\n        <th mat-header-cell *matHeaderCellDef [style.width.px]=\"300\"> Dose </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.dosageInstruction[0].text}} </td>\n    </ng-container>\n\n        <!-- Name Column -->\n        <ng-container matColumnDef=\"name\">\n            <th mat-header-cell *matHeaderCellDef [style.width.px]=\"300\"> Medication Name </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.medicationCodeableConcept.coding[0].display}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"quantity\">\n            <th mat-header-cell *matHeaderCellDef> Quantity </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.dispenseRequest.quantity.value}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"unit\">\n            <th mat-header-cell *matHeaderCellDef> Unit </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.dispenseRequest.quantity.unit}} </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n\n\n    <h2>Dispensing History</h2>\n\n    <table mat-table [dataSource]=\"dispenseDataSource\">\n\n        <ng-container matColumnDef=\"prepared\">\n            <th mat-header-cell *matHeaderCellDef [style.width.px]=\"140\"> Prepared </th>\n            <td mat-cell *matCellDef=\"let element\"> {{datepipe.transform(element.whenPrepared, 'dd MMM yyyy HH:mm') }} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"concept\">\n            <th mat-header-cell *matHeaderCellDef> Medication ID </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.concept}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"performer\">\n            <th mat-header-cell *matHeaderCellDef> Pharmacy </th>\n            <td mat-cell *matCellDef=\"let element\">\n                <ul>\n                    <ng-template ngFor let-item [ngForOf]=\"element.performer\" let-i=\"index\" >\n                        <li>{{item.actor.display}}</li>\n                    </ng-template>\n                </ul>\n            </td>\n        </ng-container>\n\n        <!-- Name Column -->\n        <ng-container matColumnDef=\"name\">\n            <th mat-header-cell *matHeaderCellDef> Medication Name </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.medicationCodeableConcept.coding[0].display}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"quantity\">\n            <th mat-header-cell *matHeaderCellDef> Quantity </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.quantity.value}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"unit\">\n            <th mat-header-cell *matHeaderCellDef> Unit </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.quantity.unit}} </td>\n        </ng-container>\n\n        <!-- Symbol Column -->\n        <ng-container matColumnDef=\"status\">\n            <th mat-header-cell *matHeaderCellDef> Status </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.status}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"cancel_dispense\">\n            <th mat-header-cell *matHeaderCellDef> Cancel </th>\n            <td mat-cell *matCellDef=\"let element\">\n                <button mat-icon-button matTooltip=\"This is the ETPWithdrawal interaction. Does not map well to FHIR \"><mat-icon>assignment_return</mat-icon>Cancel Dispense</button>\n            </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedDispenseColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedDispenseColumns;\"></tr>\n    </table>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <button mat-button mat-dialog-close>Cancel</button>\n    <!-- The mat-dialog-close directive optionally accepts a value as a result for the dialog. -->\n</mat-dialog-actions>\n\n\n\n\n","import {Component, EventEmitter, OnInit} from '@angular/core';\nimport {Bundle, OperationOutcome} from 'fhir/r4';\nimport {NhsdService} from '../service/nhsd.service';\nimport {MatDialog} from \"@angular/material/dialog\";\nimport {TdDialogService} from \"@covalent/core/dialogs\";\n\n\n@Component({\n  selector: 'app-orders',\n  templateUrl: './orders.component.html',\n  styleUrls: ['./orders.component.scss']\n})\nexport class OrdersComponent implements OnInit {\n\n  files: File | FileList | undefined;\n  disabled = false;\n\n  constructor(\n      private nhsd: NhsdService,\n      private dialog: MatDialog,\n      private _dialogService: TdDialogService\n  ) { }\n\n  ngOnInit(): void {\n    this.nhsd.error.subscribe(\n        (error: OperationOutcome) => {\n          console.log(error);\n           const operationOutcome = error as OperationOutcome;\n           console.log(operationOutcome.issue[0].details?.text);\n          // @ts-ignore\n            const msg :string = operationOutcome.issue[0].details?.text;\n          // @ts-ignore\n            const matDialogRef = this._dialogService.openAlert({\n            title: 'Error',\n            message: msg\n          });\n          matDialogRef.afterClosed().subscribe(result => {\n            //console.log(matDialogRef.componentInstance.value);\n          });\n        }\n    )\n  }\n\n  // https://stackoverflow.com/questions/40214772/file-upload-in-angular\n\n  selectEvent(files: FileList | File): void {\n    if (files instanceof FileList) {\n      console.log('is filelist');\n    } else if (files instanceof File) {\n      console.log('is file');\n      const file: File = files;\n      const fileReader: FileReader = new FileReader();\n      // tslint:disable-next-line:only-arrow-functions typedef\n      fileReader.onloadend = (e) => {\n        if (typeof fileReader.result === 'string') {\n          const bundle = JSON.parse(fileReader.result) as Bundle;\n          this.nhsd.convertToTransaction(bundle);\n        }\n      };\n      fileReader.readAsText(file);\n    } else {\n      console.log('not a file type');\n    }\n  }\n\n\n}\n","<mat-card>\n   <!-- <h2>COVID-19 Vaccinations History</h2>\n    <br/> -->\n\n\n    <app-prescription-orders></app-prescription-orders>\n    <app-gp-diary></app-gp-diary>\n    <app-prescription-refill></app-prescription-refill>\n\n    <br />\n    <div>\n\n        <td-file-input [(ngModel)]=\"files\" color=\"primary\" (select)=\"selectEvent($event)\"\n                       accept=\".json,.xml\">\n            <mat-icon>attach_file</mat-icon><span>Choose a FHIR Bundle file...</span>\n        </td-file-input>\n\n    </div>\n</mat-card>\n","\n\nimport {environment} from '../../environments/environment';\n\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {EventEmitter, Injectable} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {JwtHelperService} from '@auth0/angular-jwt';\n\n\n\nclass Oauth2token {\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthService {\n    private smartToken: Oauth2token | undefined;\n\n    private accessToken = undefined;\n\n    tokenChange: EventEmitter<Oauth2token> = new EventEmitter();\n\n   public auth = false;\n\n  constructor(\n             private router: Router,\n             private http: HttpClient\n              ) {\n\n  }\n\n    performGetAccessToken(authCode: string | null): any {\n\n\n    // https://digital.nhs.uk/developer/guides-and-documentation/security-and-authorisation/user-restricted-restful-apis-nhs-cis2-combined-authentication-and-authorisation\n\n    const bearerToken = 'Basic ' + btoa(environment.oauth2.client_id + ':' + environment.oauth2.client_secret);\n    const headers = new HttpHeaders( { 'Content-Type': 'application/x-www-form-urlencoded'});\n\n    const url = environment.oauth2.token;\n\n\n    const urlParams = new URLSearchParams(\n            { grant_type: 'authorization_code'});\n\n    urlParams.append('client_id', environment.oauth2.client_id),\n    urlParams.append(  'client_secret', environment.oauth2.client_secret);\n    urlParams.append(  'redirect_uri', document.baseURI + 'callback');\n    if (typeof authCode === 'string') {\n        urlParams.append('code', authCode);\n    }\n\n    this.postAny(url, urlParams.toString(),  headers  ).subscribe( (token: any) => {\n        // console.log(response);\n        this.smartToken = token;\n        console.log('OAuth2Token : ' + token);\n        this.setAccessToken(token);\n\n        }\n      , (error: any) => {\n        console.log(error);\n      }\n      , () => {\n        // Emit event\n      }\n    );\n  }\n\n    // tslint:disable-next-line:typedef\n    public postAny(url: string | null, body: string, httpHeaders: HttpHeaders) {\n        return this.http.post<any>(url as string, body, {headers: httpHeaders});\n    }\n\n    public setAccessToken(token: { expires_at: any; expires_in: number; access_token: any; }): any {\n        // tslint:disable-next-line:new-parens\n        const date = new Date;\n        // Create an expires at ..... don't know when we got the token\n        token.expires_at = Math.round((new Date().valueOf()) / 1000) + token.expires_in;\n        localStorage.setItem('nhsdToken', JSON.stringify(token));\n        this.accessToken = token.access_token;\n        this.tokenChange.emit(token);\n    }\n    public hasAccessToken(): boolean {\n        return this.getAccessToken() !== undefined;\n    }\n\n    public getAccessToken(): any {\n        if (localStorage.getItem('nhsdToken') !== undefined) {\n            const token: any = JSON.parse(localStorage.getItem('nhsdToken') as any);\n            const helper = new JwtHelperService();\n            if (this.isTokenExpired(token)) {\n\n                console.log('withings Token expired');\n                this.accessToken = undefined;\n                //  this.getRefreshToken();\n                return undefined;\n            }\n            if (token !== undefined) {\n                this.accessToken = token.access_token;\n                return this.accessToken;\n            }\n        }\n        return undefined;\n    }\n\n\n    private deleteAccessToken(): any {\n        this.accessToken = undefined;\n        localStorage.removeItem('nhsdToken');\n    }\n\n    private getTokenExpirationDate(\n        decoded: any\n    ): Date | null {\n\n        if (!decoded || !decoded.hasOwnProperty('expires_at')) {\n            // Invalid format\n            localStorage.removeItem('nhsdToken');\n            return null;\n        }\n\n        const date = new Date(0);\n        date.setUTCSeconds(decoded.expires_at);\n\n        return date;\n    }\n\n    private isTokenExpired(\n        token: any,\n        offsetSeconds?: number\n    ): boolean {\n        if (!token || token === '') {\n            return true;\n        }\n        const date = this.getTokenExpirationDate(token);\n        offsetSeconds = offsetSeconds || 0;\n\n        console.log('nhsd token expiry date ' + date);\n        if (date === null) {\n            return false;\n        }\n        return !(date.valueOf() > new Date().valueOf() + offsetSeconds * 1000);\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {MatDialog,MatDialogConfig} from '@angular/material/dialog';\nimport {NhsdService} from '../service/nhsd.service';\nimport {Task} from 'fhir/r4';\nimport {DatePipe} from \"@angular/common\";\nimport {PrescriptionOrderDetailComponent} from \"../prescription-order-detail/prescription-order-detail.component\";\n\n@Component({\n  selector: 'app-prescription-orders',\n  templateUrl: './prescription-orders.component.html',\n  styleUrls: ['./prescription-orders.component.scss']\n})\nexport class PrescriptionOrdersComponent implements OnInit {\n\n\n    datepipe: DatePipe = new DatePipe('en-GB');\n    displayedColumns: string[] = ['authored', 'status', 'requester', 'pharmacy', 'medications', 'order_number',  'view_order', 'track_order'];\n\n    dataSource: any;\n    data: Task[] = [];\n\n\n\n  constructor(private hapi: NhsdService,\n              private dialog: MatDialog) { }\n\n  ngOnInit(): void {\n     this.dataSource = new MatTableDataSource <any>(this.data);\n     this.hapi.queryTasks();\n     this.hapi.taskChange.subscribe(() => {\n          this.dataSource = new MatTableDataSource(this.hapi.getTasks());\n      });\n  }\n\n  view(resource: any): void {\n      const dialogConfig = new MatDialogConfig();\n\n      dialogConfig.disableClose = true;\n      dialogConfig.autoFocus = true;\n      dialogConfig.data = {\n          id: 1,\n          resource: resource\n      };\n      this.dialog.open( PrescriptionOrderDetailComponent, dialogConfig);\n\n  }\n\n}\n","<mat-card>\n    <mat-card-header><h2>EPS Prescription Orders (FHIR Task)</h2>\n\n    </mat-card-header>\n    <table mat-table [dataSource]=\"dataSource\" width=\"100%\" >\n\n        <!--- Note that these columns can be defined in any order.\n              The actual rendered columns are set as a property on the row definition\" -->\n\n        <ng-container matColumnDef=\"status\">\n            <th mat-header-cell *matHeaderCellDef [style.width.px]=\"120\"> Status </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.status}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"medications\">\n            <th mat-header-cell *matHeaderCellDef> Medications </th>\n            <td mat-cell *matCellDef=\"let element\">\n                <ul>\n                    <ng-template ngFor let-item [ngForOf]=\"element.input\" let-i=\"index\" >\n                        <li>{{item.valueReference.display}}</li>\n                    </ng-template>\n                </ul>\n            </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"pharmacy\">\n            <th mat-header-cell *matHeaderCellDef> Pharmacy </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.owner?.identifier.value}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"requester\">\n            <th mat-header-cell *matHeaderCellDef [style.width.px]=\"120\"> Requester </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.requester.display}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"authored\">\n            <th mat-header-cell *matHeaderCellDef [style.width.px]=\"120\"> Authored </th>\n            <td mat-cell *matCellDef=\"let element\"> {{datepipe.transform(element.authoredOn, 'dd MMM yyyy HH:mm') }} </td>\n        </ng-container>\n\n        <!-- Symbol Column -->\n        <ng-container matColumnDef=\"order_number\">\n            <th mat-header-cell *matHeaderCellDef > Order No. </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.identifier[0].value}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"return_order\">\n            <th mat-header-cell *matHeaderCellDef [style.width.px]=\"120\"> Cancel </th>\n            <td mat-cell *matCellDef=\"let element\">\n                <button color=\"warn\" *ngIf=\"element.status == 'accepted'\" mat-icon-button><mat-icon>remove_shopping_cart</mat-icon>Cancel</button>\n            </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"view_order\">\n            <th mat-header-cell *matHeaderCellDef [style.width.px]=\"120\"> View Order  </th>\n            <td mat-cell *matCellDef=\"let element\">\n                <button color=\"accent\" mat-icon-button (click)=\"view(element)\" ><mat-icon>inventory</mat-icon>View Details</button>\n            </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"track_order\">\n            <th mat-header-cell *matHeaderCellDef [style.width.px]=\"120\"> Track Package  </th>\n            <td mat-cell *matCellDef=\"let element\">\n                <button color=\"accent\" mat-icon-button ><mat-icon>local_shipping</mat-icon>Tracking</button>\n            </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n</mat-card>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  oauth2 : {\n    token : 'https://int.api.service.nhs.uk/oauth2-no-smartcard/token',\n    auth : 'https://int.api.service.nhs.uk/oauth2-no-smartcard/authorize',\n    client_id : 'FXmDMToQI68FhfNmqA3QgaiPJ3AdrRQt',\n    client_secret : '1GVeaPTFi59WEX7V',\n    cookie_domain : 'localhost',\n    logonUrl: 'http://localhost:4200/ccri-logon'\n  },\n  virtually: 'https://emis-api-lb-test-294292503.eu-west-2.elb.amazonaws.com/R4',\n  nhsd: 'https://server.fire.ly/r4',\n  hapibase: 'http://hapi.fhir.org/baseR4',\n  firelybase : 'https://server.fire.ly/r4'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {AuthService} from '../service/auth.service';\n\n@Component({\n  selector: 'app-callback',\n  templateUrl: './callback.component.html',\n  styleUrls: ['./callback.component.css']\n})\nexport class CallbackComponent implements OnInit {\n\n  constructor(private route: ActivatedRoute,\n              private auth: AuthService,\n              private router: Router) { }\n\n  private authCode = '' ;\n\n  subOAuth2: any;\n\n  // tslint:disable-next-line:typedef\n  ngOnInit() {\n\n    this.auth.tokenChange.subscribe(\n        () => {\n          this.router.navigateByUrl('/');\n        }\n    );\n    this.route.queryParamMap.subscribe(params => {\n      console.log(params);\n      const code = params.get('code');\n      // var state = params.get('state');\n      this.auth.performGetAccessToken(code);\n    });\n\n  }\n\n}\n","callback done\n","import {Component, OnInit, ViewContainerRef} from '@angular/core';\nimport {TdDialogService} from '@covalent/core/dialogs';\n\n@Component({\n  selector: 'app-refill',\n  templateUrl: './refill.component.html',\n  styleUrls: ['./refill.component.scss']\n})\nexport class RefillComponent implements OnInit {\n\n  constructor(private _dialogService: TdDialogService,\n              private _viewContainerRef: ViewContainerRef) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>refill works!</p>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'phr';\n}\n","<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport {CovalentDynamicFormsModule} from \"@covalent/dynamic-forms\";\nimport {CovalentLayoutModule} from \"@covalent/core/layout\";\nimport {CovalentStepsModule} from \"@covalent/core/steps\";\nimport {CovalentHighlightModule} from \"@covalent/highlight\";\nimport {CovalentMarkdownModule} from \"@covalent/markdown\";\nimport {CovalentBaseEchartsModule} from \"@covalent/echarts/base\";\nimport {CovalentHttpModule} from \"@covalent/http\";\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {MainComponent} from \"./main/main.component\";\nimport {MatChipsModule} from \"@angular/material/chips\";\nimport {MatTooltipModule} from \"@angular/material/tooltip\";\nimport {MatTableModule} from \"@angular/material/table\";\nimport {CovalentDataTableModule} from \"@covalent/core/data-table\";\nimport {MatButtonModule} from \"@angular/material/button\";\nimport {MatIconModule} from \"@angular/material/icon\";\nimport {MatMenuModule} from \"@angular/material/menu\";\nimport {MatCardModule} from \"@angular/material/card\";\nimport {MatList, MatListModule} from \"@angular/material/list\";\nimport {FlexLayoutModule} from \"@angular/flex-layout\";\nimport { OrdersComponent } from './orders/orders.component';\nimport {PrescriptionRefillComponent} from \"./gp-prescriptions/prescription-refill.component\";\nimport {PrescriptionOrderDetailComponent} from \"./prescription-order-detail/prescription-order-detail.component\";\nimport {CovalentMessageModule} from \"@covalent/core/message\";\nimport {PrescriptionOrdersComponent} from \"./eps-orders/prescription-orders.component\";\nimport {CallbackComponent} from \"./callback/callback.component\";\nimport {AuthGuard} from \"./service/auth-guard\";\nimport { LoginComponent } from './login/login.component';\nimport {CovalentFileModule} from \"@covalent/core/file\";\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {GpDiaryComponent} from \"./gp-diary/gp-diary.component\";\nimport {CovalentDialogsModule} from \"@covalent/core/dialogs\";\nimport {MatDialogModule} from '@angular/material/dialog';\nimport { RefillComponent } from './refill/refill.component';\nimport { GpTaskComponent } from './gp-task/gp-task.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MainComponent,\n    OrdersComponent,\n      PrescriptionRefillComponent,\n      PrescriptionOrdersComponent,\n      GpDiaryComponent,\n      CallbackComponent,\n      LoginComponent,\n      PrescriptionOrderDetailComponent,\n      RefillComponent,\n      GpTaskComponent\n  ],\n    imports: [\n        BrowserModule,\n        AppRoutingModule,\n        FlexLayoutModule,\n        BrowserAnimationsModule,\n\n        CovalentLayoutModule,\n        CovalentStepsModule,\n        // (optional) Additional Covalent Modules imports\n        CovalentHttpModule.forRoot(),\n        CovalentHighlightModule,\n        CovalentMarkdownModule,\n        CovalentDynamicFormsModule,\n        CovalentBaseEchartsModule,\n        CovalentMessageModule,\n        CovalentDialogsModule,\n\n        MatIconModule,\n        MatButtonModule,\n        CovalentDataTableModule,\n        MatMenuModule,\n        MatListModule,\n        MatCardModule,\n        MatTableModule,\n        MatTooltipModule,\n        MatChipsModule,\n        CovalentFileModule,\n        ReactiveFormsModule,\n        FormsModule,\n        MatDialogModule\n    ],\n    entryComponents: [\n        PrescriptionOrderDetailComponent,\n        RefillComponent\n    ],\n  providers: [\n      AuthGuard\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {EventEmitter, Injectable} from '@angular/core';\nimport {AuthService} from './auth.service';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Bundle, MedicationRequest, Task} from 'fhir/r4';\nimport {environment} from '../../environments/environment';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class FhirService {\n\n    private medicationRequests: MedicationRequest[] = [];\n\n\n    medicationChange: EventEmitter<any> = new EventEmitter();\n    constructor(private http: HttpClient,\n                private auth: AuthService) {\n    }\n\n    taskChange: EventEmitter<any> = new EventEmitter();\n    private tasks: Task[] = [];\n\n    public getTasks(): Task[] {\n        return this.tasks;\n    }\n\n    public queryTasks(): any {\n\n\n        const headers = this.getHeaders();\n        // tslint:disable-next-line:typedef\n        this.http.get(environment.virtually + '/Task?patient=137', { headers}).subscribe(\n            result => {\n                const bundle = result as Bundle;\n                if (bundle.entry !== undefined && bundle.entry.length > 0) {\n                    console.log('Task found.');\n                    this.tasks = [];\n                    for (const entry of bundle.entry) {\n                        this.tasks.push(entry.resource as Task);\n                    }\n                    this.taskChange.emit({});\n                } else {\n                    console.log('Task not found.');\n                }\n            }\n        );\n    }\n\n\n    public getMedicationRequests(): MedicationRequest[] {\n        return this.medicationRequests;\n    }\n    public queryMedicationRequests(): any {\n\n        const headers = this.getHeaders();\n        // tslint:disable-next-line:typedef\n        this.http.get(environment.virtually + '/MedicationRequest?patient=137&date=2019-01-01', { headers}).subscribe(\n            result => {\n                const bundle = result as Bundle;\n                if (bundle.entry !== undefined && bundle.entry.length > 0) {\n                    console.log('Medication found.');\n                    this.medicationRequests = [];\n                    for (const entry of bundle.entry) {\n                        this.medicationRequests.push(entry.resource as MedicationRequest);\n                    }\n                    this.medicationChange.emit({});\n                } else {\n                    console.log('Medication not found.');\n                }\n            }\n        );\n    }\n\n    getHeaders(): HttpHeaders {\n\n        let headers = new HttpHeaders(\n        );\n\n        headers = headers.append('Content-Type', 'application/fhir+json');\n        headers = headers.append('Accept', 'application/fhir+json');\n        // headers = headers.append(\"Authorization\", \"Bearer \"+this.auth.getAccessToken());\n        return headers;\n    }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-gp-task',\n  templateUrl: './gp-task.component.html',\n  styleUrls: ['./gp-task.component.scss']\n})\nexport class GpTaskComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>gp-task works!</p>\n","import {CanActivate, Router} from '@angular/router';\nimport {Injectable} from '@angular/core';\nimport {AuthService} from './auth.service';\nimport {Extension, MedicationRequest, Patient} from \"fhir/r4\";\n\n@Injectable()\nexport class AuthGuard  implements CanActivate {\n\n\n  constructor(public router: Router, private auth: AuthService) {\n\n  }\n  canActivate(): any {\n\n\n    if (this.auth.hasAccessToken()) {\n      return true;\n    } else {\n        console.log('Auth');\n        this.router.navigate(['login']);\n        return false;\n    }\n  }\n\n}\n","import {EventEmitter, Injectable} from '@angular/core';\nimport {\n  Bundle,\n  BundleEntry,\n  DomainResource,\n  Identifier,\n  MedicationRequest,\n  MessageHeader,\n  PractitionerRole,\n  Task\n} from 'fhir/r4';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {environment} from \"../../environments/environment\";\nimport {AuthService} from \"./auth.service\";\nimport {MedicationDispense} from 'fhir/r4';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NhsdService {\n\n  medicationChange: EventEmitter<any> = new EventEmitter();\n  public medicationRequest: EventEmitter<MedicationRequest> = new EventEmitter();\n  public medicationDispense: EventEmitter<MedicationDispense> = new EventEmitter();\n  error: EventEmitter<any> = new EventEmitter();\n  constructor(private http: HttpClient) { }\n\n\n  taskChange: EventEmitter<any> = new EventEmitter();\n  private tasks: Task[] = [];\n  public getTasks(): Task[] {\n    return this.tasks;\n  }\n\n  public queryTasks(): any {\n\n\n    const headers = this.getHeaders();\n    // tslint:disable-next-line:typedef\n    this.http.get(environment.nhsd + '/Task?patient.identifier=9876543210', { headers}).subscribe(\n        result => {\n          const bundle = result as Bundle;\n          if (bundle.entry !== undefined && bundle.entry.length > 0) {\n            console.log('Task found.');\n            this.tasks = [];\n            for (const entry of bundle.entry) {\n              if (entry.resource?.resourceType === 'Task') {\n                this.tasks.push(entry.resource as Task);\n              }\n            }\n            this.taskChange.emit({});\n          } else {\n            console.log('Task not found.');\n          }\n        }\n    );\n  }\n\n  public convertToTransaction(bundle: Bundle): any {\n\n    let newBundle: Bundle = {\n      resourceType : 'Bundle',\n      type : 'transaction',\n      entry : []\n    };\n    let task: any = {\n      resourceType : 'Task',\n      status: 'ready',\n      intent: 'order',\n      code: {\n        coding: [\n          {\n            system: 'http://hl7.org/fhir/CodeSystem/task-code',\n            code: 'fulfill',\n            display: 'Fulfill the focal request'\n          }\n        ]\n      },\n      input: []\n    };\n    let prescriptionorder = false;\n    if (bundle.entry !== undefined && bundle.entry.length > 0) {\n      let practitionerRole: string | undefined = '';\n      for (const entry of bundle.entry) {\n          const resource = entry.resource as any;\n          if (resource?.resourceType === 'Patient') {\n              task.for = {\n                reference : entry.fullUrl\n              };\n          }\n        if (resource?.resourceType === 'MessageHeader' ) {\n          console.log('MessageHeader');\n          const medicationHeader = resource as MessageHeader;\n          if (medicationHeader.eventCoding?.code === 'prescription-order') {\n            prescriptionorder = true;\n          }\n        }\n        if (resource?.resourceType === 'MedicationDispense' ) {\n          console.log('MedicationDispene');\n          let medicationDispense = resource as MedicationDispense;\n          if (medicationDispense.subject?.identifier !== undefined) {\n            medicationDispense.subject.reference = 'Patient?identifier=' + medicationDispense.subject.identifier.system\n                + '|' + medicationDispense.subject.identifier.value;\n          }\n          if (medicationDispense.authorizingPrescription !== undefined && medicationDispense.authorizingPrescription.length > 0) {\n            for (let ident of medicationDispense.authorizingPrescription) {\n              if (ident.identifier !== undefined) {\n                ident.reference = 'MedicationRequest?identifier=' + ident.identifier.system\n                    + '|' + ident.identifier.value;\n              }\n            }\n          }\n        }\n        // tslint:disable-next-line:no-conditional-assignment\n          if ((resource?.resourceType === 'MedicationRequest') ) {\n            const medicationRequest = resource as any;\n            if (task.identifier === undefined) {\n              task.identifier = [];\n              task.identifier.push(medicationRequest.groupIdentifier as Identifier);\n            }\n            task.requester = medicationRequest.requester;\n            practitionerRole = medicationRequest.requester?.reference;\n            task.authoredOn = medicationRequest.authoredOn;\n            if (medicationRequest.dispenseRequest !== undefined && medicationRequest.dispenseRequest.performer !== undefined) {\n                task.owner = medicationRequest.dispenseRequest.performer;\n                task.status = 'requested';\n            }\n            const input = {\n              type: {\n                coding:  [\n                  {\n                    system: 'http://snomed.info/sct',\n                    code: '16076005',\n                    display: 'Prescription'\n                  }\n                ]\n              },\n              valueReference: {\n                type: 'MedicationRequest',\n                reference: entry.fullUrl,\n                display: medicationRequest?.medicationCodeableConcept?.coding[0].display\n              }\n            };\n            task.input?.push(input);\n          }\n          if (resource?.identifier !== undefined) {\n              let identifier = '';\n              if (resource?.identifier.length !== undefined) {\n                identifier = this.getIdentifier(resource?.identifier[0]);\n              } else {\n                identifier = this.getIdentifier(resource?.identifier);\n              }\n              // @ts-ignore\n              entry.request = {\n                method : 'PUT',\n                url: resource?.resourceType + '?identifier=' + identifier\n              };\n              newBundle.entry?.push(entry);\n          } else {\n            // remove resource\n          }\n\n      }\n      if (practitionerRole !== '') {\n        console.log(practitionerRole);\n        for (const entry of bundle.entry) {\n          if (entry.fullUrl === practitionerRole) {\n            const resource = entry.resource as DomainResource;\n\n            if (resource.resourceType === 'PractitionerRole') {\n                // @ts-ignore\n              task.requester.display = (resource as PractitionerRole).practitioner.display;\n                // @ts-ignore\n              if (task.requester.display === undefined) {\n                  // @ts-ignore\n                  task.requester.display = (resource as PractitionerRole).identifier[0].value;\n                }\n            }\n          }\n        }\n      }\n\n\n      if (prescriptionorder) {\n        console.log(task);\n        const entry: BundleEntry = {\n          resource : task,\n          request : {\n            method : 'PUT',\n            url: 'Task?identifier=' + this.getIdentifier(task.identifier[0])\n          }\n        };\n        newBundle.entry?.push(entry);\n      }\n      console.log(newBundle);\n      this.http.post(environment.nhsd, JSON.stringify(newBundle), { headers: this.getHeaders() }).subscribe(\n          (result) => {\n            console.log('done post to hapi');\n            console.log(result);\n            this.medicationChange.emit({});\n          },\n          error => {\n            this.error.emit(error.error);\n          }\n      );\n    } else {\n    }\n  }\n\n  getMedicationRequest(url: string) {\n    const headers = this.getHeaders();\n    this.http.get<any>(url, {'headers': headers}).subscribe(\n        medicationRequest => {\n          this.medicationRequest.emit(medicationRequest);\n        }\n    )\n  }\n  getMedicationDispense(url: string) {\n    const headers = this.getHeaders();\n    this.http.get<any>(environment.nhsd + '/MedicationDispense?prescription=' + url, {'headers': headers}).subscribe(\n        resource => {\n          const bundle: Bundle = resource as Bundle;\n          if (bundle.entry !== undefined) {\n            for (let entry of bundle.entry) {\n\n              if (entry.resource?.resourceType === 'MedicationDispense') {\n                this.medicationDispense.emit(entry.resource as MedicationDispense);\n              }\n            }\n          }\n        }\n    )\n  }\n\n  getHeaders(): HttpHeaders {\n\n    let headers = new HttpHeaders(\n    );\n\n    headers = headers.append('Content-Type', 'application/fhir+json');\n    headers = headers.append('Accept', 'application/fhir+json');\n    return headers;\n  }\n\n  getIdentifier(identifier: Identifier): string {\n    if (identifier.system !== undefined) {\n      return identifier.system + '|' + identifier.value;\n    } else {\n      return <string>identifier.value;\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {Task} from 'fhir/r4';\nimport {DatePipe} from \"@angular/common\";\nimport {FhirService} from \"../service/FhirService\";\nimport {MatDialog} from \"@angular/material/dialog\";\nimport {TdDialogService} from \"@covalent/core/dialogs\";\n\n@Component({\n  selector: 'app-gp-diary',\n  templateUrl: './gp-diary.component.html',\n  styleUrls: ['./gp-diary.component.scss']\n})\nexport class GpDiaryComponent implements OnInit {\n\n\n    datepipe: DatePipe = new DatePipe('en-GB');\n    displayedColumns: string[] = ['when', 'status', 'reason', 'notes'];\n\n    dataSource: any;\n    data: Task[] = [];\n\n\n  constructor(private fhir: FhirService,\n              private dialog: MatDialog,\n              private _dialogService: TdDialogService\n  ) { }\n\n  ngOnInit(): void {\n     this.dataSource = new MatTableDataSource <any>(this.data);\n     this.fhir.queryTasks();\n     this.fhir.taskChange.subscribe(() => {\n          this.dataSource = new MatTableDataSource(this.fhir.getTasks());\n      });\n  }\n  diary(): void {\n      const matDialogRef = this._dialogService.openPrompt({\n          title: 'Diary Entry (FHIR Task)',\n          message: 'Use this to add Tasks (Diary Entries) to GP workflow',\n          value: 'Asthma Medication Review',\n          cancelButton: 'Cancel',\n          acceptButton: 'Ok',\n      });\n      matDialogRef.afterClosed().subscribe(result => {\n          console.log(matDialogRef.componentInstance.value);\n      });\n  }\n\n}\n","<mat-card>\n    <mat-card-header><h2>GP Diary Entries (FHIR Task)</h2>\n        </mat-card-header>\n    <button mat-fab aria-label=\"Example icon button with a heart icon\" (click)=\"diary()\">\n        <mat-icon>note_add</mat-icon>\n    </button>\n    <table mat-table [dataSource]=\"dataSource\"  width=\"100%\">\n\n        <!--- Note that these columns can be defined in any order.\n              The actual rendered columns are set as a property on the row definition\" -->\n\n        <ng-container matColumnDef=\"status\">\n            <th mat-header-cell *matHeaderCellDef [style.width.px]=\"120\"> Status </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.status}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"medications\">\n            <th mat-header-cell *matHeaderCellDef> Medications </th>\n            <td mat-cell *matCellDef=\"let element\">\n                <ul>\n                    <ng-template ngFor let-item [ngForOf]=\"element.input\" let-i=\"index\" >\n                        <li>{{item.valueReference.display}}</li>\n                    </ng-template>\n                </ul>\n            </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"pharmacy\">\n            <th mat-header-cell *matHeaderCellDef> Pharmacy </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.owner?.identifier.value}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"requester\">\n            <th mat-header-cell *matHeaderCellDef> Requester </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.requester.display}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"authored\">\n            <th mat-header-cell *matHeaderCellDef> Authored </th>\n            <td mat-cell *matCellDef=\"let element\"> {{datepipe.transform(element.authoredOn, 'dd MMM yyyy HH:mm') }} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"when\">\n            <th mat-header-cell *matHeaderCellDef [style.width.px]=\"120\"> When </th>\n            <td mat-cell *matCellDef=\"let element\"> {{datepipe.transform(element.executionPeriod.start, 'dd MMM yyyy HH:mm') }} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"reason\">\n            <th mat-header-cell *matHeaderCellDef [style.width.px]=\"240\"> Reason </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.reasonCode.coding[0].display }} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"notes\">\n            <th mat-header-cell *matHeaderCellDef> Notes </th>\n            <td mat-cell *matCellDef=\"let element\">  </td>\n        </ng-container>\n\n        <!-- Symbol Column -->\n        <ng-container matColumnDef=\"order_number\">\n            <th mat-header-cell *matHeaderCellDef > Order No. </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.identifier[0].value}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"return_order\">\n            <th mat-header-cell *matHeaderCellDef [style.width.px]=\"120\"> Cancel </th>\n            <td mat-cell *matCellDef=\"let element\">\n                <button color=\"warn\" *ngIf=\"element.status == 'accepted'\" mat-icon-button><mat-icon>remove_shopping_cart</mat-icon>Cancel</button>\n            </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"view_order\">\n            <th mat-header-cell *matHeaderCellDef [style.width.px]=\"120\"> View Order  </th>\n            <td mat-cell *matCellDef=\"let element\">\n                <button color=\"accent\" mat-icon-button routerLink=\"/details/123453-ABCDFE-12345\" ><mat-icon>inventory</mat-icon>View Details</button>\n            </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"track_order\">\n            <th mat-header-cell *matHeaderCellDef [style.width.px]=\"120\"> Track Package  </th>\n            <td mat-cell *matCellDef=\"let element\">\n                <button color=\"accent\" mat-icon-button routerLink=\"/details/123453-ABCDFE-12345\" ><mat-icon>local_shipping</mat-icon>Tracking</button>\n            </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n</mat-card>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport {MainComponent} from './main/main.component';\nimport {OrdersComponent} from './orders/orders.component';\nimport {CallbackComponent} from './callback/callback.component';\nimport {AuthGuard} from './service/auth-guard';\nimport {LoginComponent} from './login/login.component';\n\nconst routes: Routes = [\n  { path: '', canActivate: [AuthGuard], component: MainComponent,\n    children : [\n      {\n        path: '', component: OrdersComponent\n      }]},\n  {  path: 'callback', component : CallbackComponent},\n  {  path: 'login', component : LoginComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport {environment} from '../../environments/environment';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor() { }\n  callback = document.baseURI + 'callback';\n\n\n  ngOnInit(): void {\n    window.location.href = environment.oauth2.auth + '?client_id=' + environment.oauth2.client_id +\n        '&response_type=code&redirect_uri=' + this.callback + '&state=123';\n  }\n\n}\n","Redirecting to login\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.scss']\n})\nexport class MainComponent implements OnInit {\n\n  opened = false;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-menu #menu=\"matMenu\">\n    <button mat-menu-item routerLink=\"/order\"><mat-icon>shopping_basket</mat-icon>My Tasks</button>\n    <button mat-menu-item routerLink=\"/search\"><mat-icon>add_shopping_cart</mat-icon>Search and Add Tasks</button>\n    <button mat-menu-item routerLink=\"/refill\"><mat-icon>reorder</mat-icon>Reorder Medications</button>\n</mat-menu>\n<mat-menu #dosmenu=\"matMenu\">\n    <button mat-menu-item routerLink=\"/patient\"><mat-icon>person</mat-icon>Patient</button>\n    <button mat-menu-item routerLink=\"/pharmacy\"><mat-icon>store</mat-icon>Pharmacy</button>\n</mat-menu>\n<td-layout class=\"layout-nav-demo\" sidenavWidth=\"280px\">\n    <td-navigation-drawer\n            flex\n            sidenavTitle=\"Menu\" >\n        <mat-list>\n        </mat-list>\n        <span>\n    </span>\n    </td-navigation-drawer>\n    <td-layout-nav-list navigationRoute=\"/\" mode=\"side\" [opened]=opened>\n\n        <div td-sidenav-content>\n\n\n        </div>\n        <div td-toolbar-content layout=\"row\" layout-align=\"start center\" flex>\n\n           <!-- <button mat-icon-button td-menu-button tdLayoutToggle>\n                <mat-icon>menu</mat-icon>\n            </button>\n-->\n            <span>Codename: Danube</span>\n            <span flex></span>\n\n           <!-- <button mat-icon-button [matMenuTriggerFor]=\"dosmenu\" matTooltip=\"Directory Services\"><mat-icon>search</mat-icon><mat-icon>arrow_drop_down</mat-icon></button>\n-->\n            <button mat-button  matTooltip=\"Orders\"><mat-icon>add_shopping_cart</mat-icon>Basket</button>\n\n        </div>\n        <router-outlet></router-outlet>\n    </td-layout-nav-list>\n</td-layout>\n","import { Component, OnInit } from '@angular/core';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {FhirService} from '../service/FhirService';\nimport {MedicationRequest} from 'fhir/r4';\nimport {DatePipe} from '@angular/common';\nimport {MatDialog, MatDialogConfig} from \"@angular/material/dialog\";\nimport {TdDialogService, TdPromptDialogComponent} from \"@covalent/core/dialogs\";\n\n@Component({\n  selector: 'app-prescription-refill',\n  templateUrl: './prescription-refill.component.html',\n  styleUrls: ['./prescription-refill.component.scss']\n})\nexport class PrescriptionRefillComponent implements OnInit {\n\n\n\n    displayedColumns: string[] = ['authored', 'status', 'name',  'courseOfTherapy',  'quantity', 'unit', 'reorder_medication'];\n\n    dataSource: any;\n\n    data: MedicationRequest[] =  [];\n\n    datepipe: DatePipe = new DatePipe('en-GB');\n\n\n  constructor(private fhir: FhirService,\n              private dialog: MatDialog,\n              private _dialogService: TdDialogService) { }\n\n  ngOnInit(): void {\n      this.dataSource = new MatTableDataSource <any>(this.data);\n      this.fhir.queryMedicationRequests();\n      this.fhir.medicationChange.subscribe(() => {\n         this.dataSource = new MatTableDataSource(this.fhir.getMedicationRequests());\n      });\n  }\n  refill(resource: any): void {\n\n      const matDialogRef = this._dialogService.openPrompt({\n          title: 'Re-Order (FHIR Task)',\n          message: 'Why do you wish to re-order ' + resource?.medicationCodeableConcept?.coding[0].display,\n          value: '',\n          cancelButton: 'Cancel',\n          acceptButton: 'Ok',\n      });\n      matDialogRef.afterClosed().subscribe(result => {\n          console.log(matDialogRef.componentInstance.value);\n      });\n  }\n\n}\n","<mat-card>\n    <mat-card-header><h2>GP Medication Record (FHIR MedicationRequest)</h2></mat-card-header>\n    <table mat-table [dataSource]=\"dataSource\"  width=\"100%\">\n\n        <!--- Note that these columns can be defined in any order.\n              The actual rendered columns are set as a property on the row definition\" -->\n\n        <!-- Position Column -->\n        <ng-container matColumnDef=\"concept\">\n            <th mat-header-cell *matHeaderCellDef> Medication ID </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.concept}} </td>\n        </ng-container>\n\n        <!-- Name Column -->\n        <ng-container matColumnDef=\"name\">\n            <th mat-header-cell *matHeaderCellDef> Medication Name </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.medicationCodeableConcept.coding[0].display}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"status\">\n            <th mat-header-cell *matHeaderCellDef [style.width.px]=\"120\"> Status </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.status}}  </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"authored\">\n            <th mat-header-cell *matHeaderCellDef [style.width.px]=\"120\"> Authored </th>\n            <td mat-cell *matCellDef=\"let element\"> {{datepipe.transform(element.authoredOn, 'dd MMM yyyy') }} </td>\n        </ng-container>\n\n        <!-- Weight Column -->\n        <ng-container matColumnDef=\"quantity\">\n            <th mat-header-cell *matHeaderCellDef> Quantity </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.dispenseRequest.quantity.value}} </td>\n        </ng-container>\n\n\n        <ng-container matColumnDef=\"courseOfTherapy\">\n            <th mat-header-cell *matHeaderCellDef> Type </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.courseOfTherapyType.coding[0].display}} </td>\n        </ng-container>\n\n        <!-- Symbol Column -->\n        <ng-container matColumnDef=\"unit\">\n            <th mat-header-cell *matHeaderCellDef> Unit </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.dispenseRequest.quantity.unit}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"reorder_medication\">\n            <th mat-header-cell *matHeaderCellDef> Reorder </th>\n            <td mat-cell *matCellDef=\"let element\">\n                <button color=\"accent\" mat-icon-button (click)=\"refill(element)\"><mat-icon>add_shopping_cart</mat-icon>Reorder</button>\n            </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n\n</mat-card>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}